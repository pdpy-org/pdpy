==> BEGIN additive.py <===================================
Found  darwin  platform.
Locating pd...
Found pd at:  /Applications/Pd-0.52-2.app/Contents/Resources/bin/pd
Initialized Arrange graph placing algorithm.
========= begin arrange algorithm arrange 1b ==========
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('dac~', 0), ('osc~', 1), ('*~', 2), ('osc~', 3), ('*~', 4), ('osc~', 5), ('*~', 6), ('osc~', 7), ('*~', 8), ('osc~', 9), ('*~', 10), ('osc~', 11), ('*~', 12), ('osc~', 13), ('*~', 14)]
place(): 0 => 10 10
'''''''''' BEGIN STEP 2 ''''''''''
input 0 dac~ NoneType
getChildren(): dac~ ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 1), ('*~', 2), ('osc~', 3), ('*~', 4), ('osc~', 5), ('*~', 6), ('osc~', 7), ('*~', 8), ('osc~', 9), ('*~', 10), ('osc~', 11), ('*~', 12), ('osc~', 13), ('*~', 14)]
place(): 1 => 10 34
'''''''''' BEGIN STEP 2 ''''''''''
input 1 osc~ NoneType
getChildren(): osc~ ==> [[2, '*~', 0]]
child exists, appending 2
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 1 osc~
1 is connected to [(2, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 2 *~ 0
>>>> 2 NOT IN [0, 1]
PLACEMENT
place(): 2 => 10.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 2 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 2 0
10 82 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 10 82
 *** done relocating, continuing
0 is not connected to anybody.
relocator() 2 0
10 82 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 10 82
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 3), ('*~', 4), ('osc~', 5), ('*~', 6), ('osc~', 7), ('*~', 8), ('osc~', 9), ('*~', 10), ('osc~', 11), ('*~', 12), ('osc~', 13), ('*~', 14)]
place(): 3 => 82.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 3 osc~ NoneType
getChildren(): osc~ ==> [[4, '*~', 0]]
child exists, appending 4
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 3 osc~
3 is connected to [(4, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 4 *~ 0
>>>> 4 NOT IN [0, 1, 2, 0, 0, 3]
PLACEMENT
place(): 4 => 82.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 4 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 4 0
82 58 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 82 58
 *** done relocating, continuing
0 is not connected to anybody.
relocator() 4 0
82 58 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 82 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 5), ('*~', 6), ('osc~', 7), ('*~', 8), ('osc~', 9), ('*~', 10), ('osc~', 11), ('*~', 12), ('osc~', 13), ('*~', 14)]
place(): 5 => 154.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 5 osc~ NoneType
getChildren(): osc~ ==> [[6, '*~', 0]]
child exists, appending 6
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 5 osc~
5 is connected to [(6, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 6 *~ 0
>>>> 6 NOT IN [0, 1, 2, 0, 0, 3, 4, 0, 0, 5]
PLACEMENT
place(): 6 => 154.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 6 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 6 0
154 58 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 154 58
 *** done relocating, continuing
0 is not connected to anybody.
relocator() 6 0
154 58 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 154 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 7), ('*~', 8), ('osc~', 9), ('*~', 10), ('osc~', 11), ('*~', 12), ('osc~', 13), ('*~', 14)]
place(): 7 => 226.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 7 osc~ NoneType
getChildren(): osc~ ==> [[8, '*~', 0]]
child exists, appending 8
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 7 osc~
7 is connected to [(8, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 8 *~ 0
>>>> 8 NOT IN [0, 1, 2, 0, 0, 3, 4, 0, 0, 5, 6, 0, 0, 7]
PLACEMENT
place(): 8 => 226.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 8 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 8 0
226 58 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 226 58
 *** done relocating, continuing
0 is not connected to anybody.
relocator() 8 0
226 58 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 226 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 9), ('*~', 10), ('osc~', 11), ('*~', 12), ('osc~', 13), ('*~', 14)]
place(): 9 => 298.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 9 osc~ NoneType
getChildren(): osc~ ==> [[10, '*~', 0]]
child exists, appending 10
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 9 osc~
9 is connected to [(10, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 10 *~ 0
>>>> 10 NOT IN [0, 1, 2, 0, 0, 3, 4, 0, 0, 5, 6, 0, 0, 7, 8, 0, 0, 9]
PLACEMENT
place(): 10 => 298.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 10 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 10 0
298 58 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 298 58
 *** done relocating, continuing
0 is not connected to anybody.
relocator() 10 0
298 58 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 298 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 11), ('*~', 12), ('osc~', 13), ('*~', 14)]
place(): 11 => 370.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 11 osc~ NoneType
getChildren(): osc~ ==> [[12, '*~', 0]]
child exists, appending 12
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 11 osc~
11 is connected to [(12, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 12 *~ 0
>>>> 12 NOT IN [0, 1, 2, 0, 0, 3, 4, 0, 0, 5, 6, 0, 0, 7, 8, 0, 0, 9, 10, 0, 0, 11]
PLACEMENT
place(): 12 => 370.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 12 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 12 0
370 58 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 370 58
 *** done relocating, continuing
0 is not connected to anybody.
relocator() 12 0
370 58 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 370 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 13), ('*~', 14)]
place(): 13 => 442.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 13 osc~ NoneType
getChildren(): osc~ ==> [[14, '*~', 0]]
child exists, appending 14
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 13 osc~
13 is connected to [(14, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 14 *~ 0
>>>> 14 NOT IN [0, 1, 2, 0, 0, 3, 4, 0, 0, 5, 6, 0, 0, 7, 8, 0, 0, 9, 10, 0, 0, 11, 12, 0, 0, 13]
PLACEMENT
place(): 14 => 442.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 14 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 14 0
442 58 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 442 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
------------- end -----------
==> END additive.py <===================================
==> BEGIN additive_env.py <===================================
Found  darwin  platform.
Locating pd...
Found pd at:  /Applications/Pd-0.52-2.app/Contents/Resources/bin/pd
Initialized Arrange graph placing algorithm.
========= begin arrange algorithm arrange 1b ==========
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('dac~', 0), ('phasor~', 1), ('*~', 2), ('lop~', 3), ('osc~', 4), ('*~', 5), ('*~', 6), ('osc~', 7), ('*~', 8), ('*~', 9), ('osc~', 10), ('*~', 11), ('*~', 12), ('osc~', 13), ('*~', 14), ('*~', 15), ('osc~', 16), ('*~', 17), ('*~', 18), ('osc~', 19), ('*~', 20), ('*~', 21), ('osc~', 22), ('*~', 23), ('*~', 24)]
place(): 0 => 10 10
'''''''''' BEGIN STEP 2 ''''''''''
input 0 dac~ NoneType
getChildren(): dac~ ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 1), ('*~', 2), ('lop~', 3), ('osc~', 4), ('*~', 5), ('*~', 6), ('osc~', 7), ('*~', 8), ('*~', 9), ('osc~', 10), ('*~', 11), ('*~', 12), ('osc~', 13), ('*~', 14), ('*~', 15), ('osc~', 16), ('*~', 17), ('*~', 18), ('osc~', 19), ('*~', 20), ('*~', 21), ('osc~', 22), ('*~', 23), ('*~', 24)]
place(): 1 => 10 34
'''''''''' BEGIN STEP 2 ''''''''''
input 1 phasor~ NoneType
getChildren(): phasor~ ==> [[2, '*~', 0], [2, '*~', 0]]
child exists, appending 2
2 is not connected to anybody.
But, 2 is not placed in [0, 1]
place(): 2 => 10 58
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 1 phasor~
1 is connected to [(2, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 2 *~ 0
>>>> 2 NOT IN [0, 1, 2]
PLACEMENT
place(): 2 => 10.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 2 *~ method
getChildren(): *~ ==> [[3, 'lop~', 0]]
child exists, appending 3
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 2 *~
2 is connected to [(3, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 3 lop~ 0
>>>> 3 NOT IN [0, 1, 2, 2]
PLACEMENT
place(): 3 => 10.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 3 lop~ method
getChildren(): lop~ ==> [[6, '*~', 0], [9, '*~', 0], [12, '*~', 0], [15, '*~', 0], [18, '*~', 0], [21, '*~', 0], [24, '*~', 0]]
child exists, appending 6
child exists, appending 9
child exists, appending 12
child exists, appending 15
child exists, appending 18
child exists, appending 21
child exists, appending 24
done with child loop 7
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 3 lop~
3 is connected to [(6, 0), (9, 0), (12, 0), (15, 0), (18, 0), (21, 0), (24, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 6 *~ 0
>>>> 6 NOT IN [0, 1, 2, 2, 3]
PLACEMENT
place(): 6 => 10.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 6 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 6 0
10 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 10 154
 *** done relocating, continuing
0 is not connected to anybody.
relocator() 6 0
10 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 10 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 4), ('*~', 5), ('osc~', 7), ('*~', 8), ('osc~', 10), ('*~', 11), ('osc~', 13), ('*~', 14), ('osc~', 16), ('*~', 17), ('osc~', 19), ('*~', 20), ('osc~', 22), ('*~', 23)]
place(): 4 => 118.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 4 osc~ NoneType
getChildren(): osc~ ==> [[5, '*~', 0]]
child exists, appending 5
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 4 osc~
4 is connected to [(5, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 5 *~ 0
>>>> 5 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4]
PLACEMENT
place(): 5 => 118.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 5 *~ method
getChildren(): *~ ==> [[6, '*~', 0]]
6 is not connected to anybody.
relocator() 5 6
118 58 and 10 154
getChildren(): [0, 0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 6 => 10 154
--> Relocated to: 10 154 and 118 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 7), ('*~', 8), ('osc~', 10), ('*~', 11), ('osc~', 13), ('*~', 14), ('osc~', 16), ('*~', 17), ('osc~', 19), ('*~', 20), ('osc~', 22), ('*~', 23)]
place(): 7 => 226.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 7 osc~ NoneType
getChildren(): osc~ ==> [[8, '*~', 0]]
child exists, appending 8
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 7 osc~
7 is connected to [(8, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 8 *~ 0
>>>> 8 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7]
PLACEMENT
place(): 8 => 226.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 8 *~ method
getChildren(): *~ ==> [[9, '*~', 0]]
9 is not connected to anybody.
But, 9 is not placed in [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8]
place(): 9 => 226.0 58
relocator() 8 9
226 58 and 226 58
getChildren(): [0, 0]
EQUAL_Y
move(): *~
place(): 9 => 226 82
--> Relocated to: 226 82 and 226 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 10), ('*~', 11), ('osc~', 13), ('*~', 14), ('osc~', 16), ('*~', 17), ('osc~', 19), ('*~', 20), ('osc~', 22), ('*~', 23)]
place(): 10 => 334.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 10 osc~ NoneType
getChildren(): osc~ ==> [[11, '*~', 0]]
child exists, appending 11
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 10 osc~
10 is connected to [(11, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 11 *~ 0
>>>> 11 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10]
PLACEMENT
place(): 11 => 334.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 11 *~ method
getChildren(): *~ ==> [[12, '*~', 0]]
12 is not connected to anybody.
But, 12 is not placed in [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11]
place(): 12 => 334.0 58
relocator() 11 12
334 58 and 334 58
getChildren(): [0, 0]
EQUAL_Y
move(): *~
place(): 12 => 334 82
--> Relocated to: 334 82 and 334 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 13), ('*~', 14), ('osc~', 16), ('*~', 17), ('osc~', 19), ('*~', 20), ('osc~', 22), ('*~', 23)]
place(): 13 => 442.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 13 osc~ NoneType
getChildren(): osc~ ==> [[14, '*~', 0]]
child exists, appending 14
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 13 osc~
13 is connected to [(14, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 14 *~ 0
>>>> 14 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13]
PLACEMENT
place(): 14 => 442.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 14 *~ method
getChildren(): *~ ==> [[15, '*~', 0]]
15 is not connected to anybody.
But, 15 is not placed in [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14]
place(): 15 => 442.0 58
relocator() 14 15
442 58 and 442 58
getChildren(): [0, 0]
EQUAL_Y
move(): *~
place(): 15 => 442 82
--> Relocated to: 442 82 and 442 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 16), ('*~', 17), ('osc~', 19), ('*~', 20), ('osc~', 22), ('*~', 23)]
place(): 16 => 550.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 16 osc~ NoneType
getChildren(): osc~ ==> [[17, '*~', 0]]
child exists, appending 17
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 16 osc~
16 is connected to [(17, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 17 *~ 0
>>>> 17 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16]
PLACEMENT
place(): 17 => 550.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 17 *~ method
getChildren(): *~ ==> [[18, '*~', 0]]
18 is not connected to anybody.
But, 18 is not placed in [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17]
place(): 18 => 550.0 58
relocator() 17 18
550 58 and 550 58
getChildren(): [0, 0]
EQUAL_Y
move(): *~
place(): 18 => 550 82
--> Relocated to: 550 82 and 550 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 19), ('*~', 20), ('osc~', 22), ('*~', 23)]
place(): 19 => 658.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 19 osc~ NoneType
getChildren(): osc~ ==> [[20, '*~', 0]]
child exists, appending 20
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 19 osc~
19 is connected to [(20, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 20 *~ 0
>>>> 20 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19]
PLACEMENT
place(): 20 => 658.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 20 *~ method
getChildren(): *~ ==> [[21, '*~', 0]]
21 is not connected to anybody.
But, 21 is not placed in [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20]
place(): 21 => 658.0 58
relocator() 20 21
658 58 and 658 58
getChildren(): [0, 0]
EQUAL_Y
move(): *~
place(): 21 => 658 82
--> Relocated to: 658 82 and 658 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 22), ('*~', 23)]
place(): 22 => 766.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 22 osc~ NoneType
getChildren(): osc~ ==> [[23, '*~', 0]]
child exists, appending 23
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 22 osc~
22 is connected to [(23, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 23 *~ 0
>>>> 23 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22]
PLACEMENT
place(): 23 => 766.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 23 *~ method
getChildren(): *~ ==> [[24, '*~', 0]]
24 is not connected to anybody.
But, 24 is not placed in [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23]
place(): 24 => 766.0 58
relocator() 23 24
766 58 and 766 58
getChildren(): [0, 0]
EQUAL_Y
move(): *~
place(): 24 => 766 82
--> Relocated to: 766 82 and 766 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 9 *~ 0
>>>> 9 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23, 24, 24]
PLACEMENT
place(): 9 => 874.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 9 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 9 0
874 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 874 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #2 12 *~ 0
>>>> 12 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23, 24, 24, 9, 0]
PLACEMENT
place(): 12 => 982.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 12 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 12 0
982 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 982 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #3 15 *~ 0
>>>> 15 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23, 24, 24, 9, 0, 12, 0]
PLACEMENT
place(): 15 => 1090.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 15 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 15 0
1090 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 1090 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #4 18 *~ 0
>>>> 18 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23, 24, 24, 9, 0, 12, 0, 15, 0]
PLACEMENT
place(): 18 => 1198.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 18 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 18 0
1198 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 1198 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #5 21 *~ 0
>>>> 21 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23, 24, 24, 9, 0, 12, 0, 15, 0, 18, 0]
PLACEMENT
place(): 21 => 1306.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 21 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 21 0
1306 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 1306 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #6 24 *~ 0
>>>> 24 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23, 24, 24, 9, 0, 12, 0, 15, 0, 18, 0, 21, 0]
PLACEMENT
place(): 24 => 1414.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 24 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 24 0
1414 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 1414 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
------------- end -----------
Initialized Arrange graph placing algorithm.
========= begin arrange algorithm arrange 1b ==========
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('dac~', 0), ('phasor~', 1), ('*~', 2), ('lop~', 3), ('osc~', 4), ('*~', 5), ('*~', 6), ('osc~', 7), ('*~', 8), ('*~', 9), ('osc~', 10), ('*~', 11), ('*~', 12), ('osc~', 13), ('*~', 14), ('*~', 15), ('osc~', 16), ('*~', 17), ('*~', 18), ('osc~', 19), ('*~', 20), ('*~', 21), ('osc~', 22), ('*~', 23), ('*~', 24)]
place(): 0 => 10 10
'''''''''' BEGIN STEP 2 ''''''''''
input 0 dac~ NoneType
getChildren(): dac~ ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 1), ('*~', 2), ('lop~', 3), ('osc~', 4), ('*~', 5), ('*~', 6), ('osc~', 7), ('*~', 8), ('*~', 9), ('osc~', 10), ('*~', 11), ('*~', 12), ('osc~', 13), ('*~', 14), ('*~', 15), ('osc~', 16), ('*~', 17), ('*~', 18), ('osc~', 19), ('*~', 20), ('*~', 21), ('osc~', 22), ('*~', 23), ('*~', 24)]
place(): 1 => 10 34
'''''''''' BEGIN STEP 2 ''''''''''
input 1 phasor~ NoneType
getChildren(): phasor~ ==> [[2, '*~', 0], [2, '*~', 0]]
child exists, appending 2
2 is not connected to anybody.
But, 2 is not placed in [0, 1]
place(): 2 => 10 58
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 1 phasor~
1 is connected to [(2, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 2 *~ 0
>>>> 2 NOT IN [0, 1, 2]
PLACEMENT
place(): 2 => 10.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 2 *~ method
getChildren(): *~ ==> [[3, 'lop~', 0]]
child exists, appending 3
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 2 *~
2 is connected to [(3, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 3 lop~ 0
>>>> 3 NOT IN [0, 1, 2, 2]
PLACEMENT
place(): 3 => 10.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 3 lop~ method
getChildren(): lop~ ==> [[6, '*~', 0], [9, '*~', 0], [12, '*~', 0], [15, '*~', 0], [18, '*~', 0], [21, '*~', 0], [24, '*~', 0]]
child exists, appending 6
child exists, appending 9
child exists, appending 12
child exists, appending 15
child exists, appending 18
child exists, appending 21
child exists, appending 24
done with child loop 7
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 3 lop~
3 is connected to [(6, 0), (9, 0), (12, 0), (15, 0), (18, 0), (21, 0), (24, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 6 *~ 0
>>>> 6 NOT IN [0, 1, 2, 2, 3]
PLACEMENT
place(): 6 => 10.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 6 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 6 0
10 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 10 154
 *** done relocating, continuing
0 is not connected to anybody.
relocator() 6 0
10 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 10 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 4), ('*~', 5), ('osc~', 7), ('*~', 8), ('osc~', 10), ('*~', 11), ('osc~', 13), ('*~', 14), ('osc~', 16), ('*~', 17), ('osc~', 19), ('*~', 20), ('osc~', 22), ('*~', 23)]
place(): 4 => 118.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 4 osc~ NoneType
getChildren(): osc~ ==> [[5, '*~', 0]]
child exists, appending 5
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 4 osc~
4 is connected to [(5, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 5 *~ 0
>>>> 5 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4]
PLACEMENT
place(): 5 => 118.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 5 *~ method
getChildren(): *~ ==> [[6, '*~', 0]]
6 is not connected to anybody.
relocator() 5 6
118 58 and 10 154
getChildren(): [0, 0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 6 => 10 154
--> Relocated to: 10 154 and 118 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 7), ('*~', 8), ('osc~', 10), ('*~', 11), ('osc~', 13), ('*~', 14), ('osc~', 16), ('*~', 17), ('osc~', 19), ('*~', 20), ('osc~', 22), ('*~', 23)]
place(): 7 => 226.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 7 osc~ NoneType
getChildren(): osc~ ==> [[8, '*~', 0]]
child exists, appending 8
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 7 osc~
7 is connected to [(8, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 8 *~ 0
>>>> 8 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7]
PLACEMENT
place(): 8 => 226.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 8 *~ method
getChildren(): *~ ==> [[9, '*~', 0]]
9 is not connected to anybody.
But, 9 is not placed in [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8]
place(): 9 => 226.0 58
relocator() 8 9
226 58 and 226 58
getChildren(): [0, 0]
EQUAL_Y
move(): *~
place(): 9 => 226 82
--> Relocated to: 226 82 and 226 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 10), ('*~', 11), ('osc~', 13), ('*~', 14), ('osc~', 16), ('*~', 17), ('osc~', 19), ('*~', 20), ('osc~', 22), ('*~', 23)]
place(): 10 => 334.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 10 osc~ NoneType
getChildren(): osc~ ==> [[11, '*~', 0]]
child exists, appending 11
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 10 osc~
10 is connected to [(11, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 11 *~ 0
>>>> 11 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10]
PLACEMENT
place(): 11 => 334.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 11 *~ method
getChildren(): *~ ==> [[12, '*~', 0]]
12 is not connected to anybody.
But, 12 is not placed in [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11]
place(): 12 => 334.0 58
relocator() 11 12
334 58 and 334 58
getChildren(): [0, 0]
EQUAL_Y
move(): *~
place(): 12 => 334 82
--> Relocated to: 334 82 and 334 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 13), ('*~', 14), ('osc~', 16), ('*~', 17), ('osc~', 19), ('*~', 20), ('osc~', 22), ('*~', 23)]
place(): 13 => 442.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 13 osc~ NoneType
getChildren(): osc~ ==> [[14, '*~', 0]]
child exists, appending 14
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 13 osc~
13 is connected to [(14, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 14 *~ 0
>>>> 14 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13]
PLACEMENT
place(): 14 => 442.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 14 *~ method
getChildren(): *~ ==> [[15, '*~', 0]]
15 is not connected to anybody.
But, 15 is not placed in [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14]
place(): 15 => 442.0 58
relocator() 14 15
442 58 and 442 58
getChildren(): [0, 0]
EQUAL_Y
move(): *~
place(): 15 => 442 82
--> Relocated to: 442 82 and 442 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 16), ('*~', 17), ('osc~', 19), ('*~', 20), ('osc~', 22), ('*~', 23)]
place(): 16 => 550.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 16 osc~ NoneType
getChildren(): osc~ ==> [[17, '*~', 0]]
child exists, appending 17
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 16 osc~
16 is connected to [(17, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 17 *~ 0
>>>> 17 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16]
PLACEMENT
place(): 17 => 550.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 17 *~ method
getChildren(): *~ ==> [[18, '*~', 0]]
18 is not connected to anybody.
But, 18 is not placed in [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17]
place(): 18 => 550.0 58
relocator() 17 18
550 58 and 550 58
getChildren(): [0, 0]
EQUAL_Y
move(): *~
place(): 18 => 550 82
--> Relocated to: 550 82 and 550 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 19), ('*~', 20), ('osc~', 22), ('*~', 23)]
place(): 19 => 658.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 19 osc~ NoneType
getChildren(): osc~ ==> [[20, '*~', 0]]
child exists, appending 20
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 19 osc~
19 is connected to [(20, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 20 *~ 0
>>>> 20 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19]
PLACEMENT
place(): 20 => 658.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 20 *~ method
getChildren(): *~ ==> [[21, '*~', 0]]
21 is not connected to anybody.
But, 21 is not placed in [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20]
place(): 21 => 658.0 58
relocator() 20 21
658 58 and 658 58
getChildren(): [0, 0]
EQUAL_Y
move(): *~
place(): 21 => 658 82
--> Relocated to: 658 82 and 658 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 22), ('*~', 23)]
place(): 22 => 766.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 22 osc~ NoneType
getChildren(): osc~ ==> [[23, '*~', 0]]
child exists, appending 23
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 22 osc~
22 is connected to [(23, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 23 *~ 0
>>>> 23 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22]
PLACEMENT
place(): 23 => 766.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 23 *~ method
getChildren(): *~ ==> [[24, '*~', 0]]
24 is not connected to anybody.
But, 24 is not placed in [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23]
place(): 24 => 766.0 58
relocator() 23 24
766 58 and 766 58
getChildren(): [0, 0]
EQUAL_Y
move(): *~
place(): 24 => 766 82
--> Relocated to: 766 82 and 766 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 9 *~ 0
>>>> 9 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23, 24, 24]
PLACEMENT
place(): 9 => 874.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 9 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 9 0
874 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 874 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #2 12 *~ 0
>>>> 12 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23, 24, 24, 9, 0]
PLACEMENT
place(): 12 => 982.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 12 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 12 0
982 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 982 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #3 15 *~ 0
>>>> 15 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23, 24, 24, 9, 0, 12, 0]
PLACEMENT
place(): 15 => 1090.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 15 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 15 0
1090 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 1090 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #4 18 *~ 0
>>>> 18 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23, 24, 24, 9, 0, 12, 0, 15, 0]
PLACEMENT
place(): 18 => 1198.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 18 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 18 0
1198 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 1198 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #5 21 *~ 0
>>>> 21 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23, 24, 24, 9, 0, 12, 0, 15, 0, 18, 0]
PLACEMENT
place(): 21 => 1306.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 21 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 21 0
1306 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 1306 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #6 24 *~ 0
>>>> 24 NOT IN [0, 1, 2, 2, 3, 6, 0, 0, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 21, 22, 23, 24, 24, 9, 0, 12, 0, 15, 0, 18, 0, 21, 0]
PLACEMENT
place(): 24 => 1414.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 24 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0], [0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 24 0
1414 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 1414 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
------------- end -----------
==> END additive_env.py <===================================
==> BEGIN alias_test.py <===================================
Found  darwin  platform.
Locating pd...
Found pd at:  /Applications/Pd-0.52-2.app/Contents/Resources/bin/pd
==> END alias_test.py <===================================
==> BEGIN complex_additive.py <===================================
Found  darwin  platform.
Locating pd...
Found pd at:  /Applications/Pd-0.52-2.app/Contents/Resources/bin/pd
Initialized Arrange graph placing algorithm.
========= begin arrange algorithm arrange 1b ==========
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('dac~', 0), ('phasor~', 1), ('lop~', 2), ('*~', 3), ('+~', 4), ('phasor~', 5), ('+~', 6), ('cos~', 7), ('*~', 8), ('-~', 9), ('clip~', 10), ('*~', 11), ('*~', 12), ('*~', 13), ('*~', 14), ('sig~', 15), ('-~', 16), ('*~', 17), ('*~', 18), ('*~', 19), ('*~', 20), ('*~', 21), ('phasor~', 22), ('lop~', 23), ('*~', 24), ('+~', 25), ('phasor~', 26), ('+~', 27), ('cos~', 28), ('*~', 29), ('-~', 30), ('clip~', 31), ('*~', 32), ('*~', 33), ('*~', 34), ('*~', 35), ('sig~', 36), ('-~', 37), ('*~', 38), ('*~', 39), ('*~', 40), ('*~', 41), ('*~', 42), ('phasor~', 43), ('lop~', 44), ('*~', 45), ('+~', 46), ('phasor~', 47), ('+~', 48), ('cos~', 49), ('*~', 50), ('-~', 51), ('clip~', 52), ('*~', 53), ('*~', 54), ('*~', 55), ('*~', 56), ('sig~', 57), ('-~', 58), ('*~', 59), ('*~', 60), ('*~', 61), ('*~', 62), ('*~', 63), ('phasor~', 64), ('lop~', 65), ('*~', 66), ('+~', 67), ('phasor~', 68), ('+~', 69), ('cos~', 70), ('*~', 71), ('-~', 72), ('clip~', 73), ('*~', 74), ('*~', 75), ('*~', 76), ('*~', 77), ('sig~', 78), ('-~', 79), ('*~', 80), ('*~', 81), ('*~', 82), ('*~', 83), ('*~', 84), ('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 0 => 10 10
'''''''''' BEGIN STEP 2 ''''''''''
input 0 dac~ NoneType
getChildren(): dac~ ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 1), ('lop~', 2), ('*~', 3), ('+~', 4), ('phasor~', 5), ('+~', 6), ('cos~', 7), ('*~', 8), ('-~', 9), ('clip~', 10), ('*~', 11), ('*~', 12), ('*~', 13), ('*~', 14), ('sig~', 15), ('-~', 16), ('*~', 17), ('*~', 18), ('*~', 19), ('*~', 20), ('*~', 21), ('phasor~', 22), ('lop~', 23), ('*~', 24), ('+~', 25), ('phasor~', 26), ('+~', 27), ('cos~', 28), ('*~', 29), ('-~', 30), ('clip~', 31), ('*~', 32), ('*~', 33), ('*~', 34), ('*~', 35), ('sig~', 36), ('-~', 37), ('*~', 38), ('*~', 39), ('*~', 40), ('*~', 41), ('*~', 42), ('phasor~', 43), ('lop~', 44), ('*~', 45), ('+~', 46), ('phasor~', 47), ('+~', 48), ('cos~', 49), ('*~', 50), ('-~', 51), ('clip~', 52), ('*~', 53), ('*~', 54), ('*~', 55), ('*~', 56), ('sig~', 57), ('-~', 58), ('*~', 59), ('*~', 60), ('*~', 61), ('*~', 62), ('*~', 63), ('phasor~', 64), ('lop~', 65), ('*~', 66), ('+~', 67), ('phasor~', 68), ('+~', 69), ('cos~', 70), ('*~', 71), ('-~', 72), ('clip~', 73), ('*~', 74), ('*~', 75), ('*~', 76), ('*~', 77), ('sig~', 78), ('-~', 79), ('*~', 80), ('*~', 81), ('*~', 82), ('*~', 83), ('*~', 84), ('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 1 => 10 34
'''''''''' BEGIN STEP 2 ''''''''''
input 1 phasor~ NoneType
getChildren(): phasor~ ==> [[2, 'lop~', 0]]
child exists, appending 2
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 1 phasor~
1 is connected to [(2, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 2 lop~ 0
>>>> 2 NOT IN [0, 1]
PLACEMENT
place(): 2 => 10.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 2 lop~ method
getChildren(): lop~ ==> [[3, '*~', 0], [17, '*~', 0], [17, '*~', 0]]
child exists, appending 3
child exists, appending 17
17 is not connected to anybody.
But, 17 is not placed in [0, 1, 2]
place(): 17 => 10.0 82
relocator() 2 17
10 82 and 10 82
getChildren(): [18, 18]
EQUAL_Y
move(): *~
place(): 17 => 10 106
--> Relocated to: 10 106 and 10 82
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 2 lop~
2 is connected to [(3, 0), (17, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 3 *~ 0
>>>> 3 NOT IN [0, 1, 2, 17, 17]
PLACEMENT
place(): 3 => 10.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 3 *~ method
getChildren(): *~ ==> [[4, '+~', 0]]
child exists, appending 4
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 3 *~
3 is connected to [(4, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 4 +~ 0
>>>> 4 NOT IN [0, 1, 2, 17, 17, 3]
PLACEMENT
place(): 4 => 10.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 4 +~ method
getChildren(): +~ ==> [[5, 'phasor~', 0]]
child exists, appending 5
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 4 +~
4 is connected to [(5, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 5 phasor~ 0
>>>> 5 NOT IN [0, 1, 2, 17, 17, 3, 4]
PLACEMENT
place(): 5 => 10.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 5 phasor~ method
getChildren(): phasor~ ==> [[6, '+~', 0]]
child exists, appending 6
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 5 phasor~
5 is connected to [(6, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 6 +~ 0
>>>> 6 NOT IN [0, 1, 2, 17, 17, 3, 4, 5]
PLACEMENT
place(): 6 => 10.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 6 +~ method
getChildren(): +~ ==> [[7, 'cos~', 0]]
child exists, appending 7
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 6 +~
6 is connected to [(7, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 7 cos~ 0
>>>> 7 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6]
PLACEMENT
place(): 7 => 10.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 7 cos~ method
getChildren(): cos~ ==> [[8, '*~', 0]]
child exists, appending 8
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 7 cos~
7 is connected to [(8, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 8 *~ 0
>>>> 8 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7]
PLACEMENT
place(): 8 => 10.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 8 *~ method
getChildren(): *~ ==> [[9, '-~', 0]]
child exists, appending 9
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 8 *~
8 is connected to [(9, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 9 -~ 0
>>>> 9 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8]
PLACEMENT
place(): 9 => 10.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 9 -~ method
getChildren(): -~ ==> [[10, 'clip~', 0]]
child exists, appending 10
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 9 -~
9 is connected to [(10, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 10 clip~ 0
>>>> 10 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9]
PLACEMENT
place(): 10 => 10.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 10 clip~ method
getChildren(): clip~ ==> [[11, '*~', 0]]
child exists, appending 11
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 10 clip~
10 is connected to [(11, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 11 *~ 0
>>>> 11 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10]
PLACEMENT
place(): 11 => 10.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 11 *~ method
getChildren(): *~ ==> [[12, '*~', 0]]
child exists, appending 12
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 11 *~
11 is connected to [(12, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 12 *~ 0
>>>> 12 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11]
PLACEMENT
place(): 12 => 10.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 12 *~ method
getChildren(): *~ ==> [[13, '*~', 0], [14, '*~', 0]]
child exists, appending 13
child exists, appending 14
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 12 *~
12 is connected to [(13, 0), (14, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 13 *~ 0
>>>> 13 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
PLACEMENT
place(): 13 => 10.0 370
'''''''''' BEGIN STEP 2 ''''''''''
input 13 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 13 0
10 370 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 10 370
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 15), ('-~', 16), ('*~', 18), ('*~', 19), ('*~', 20), ('*~', 21), ('phasor~', 22), ('lop~', 23), ('*~', 24), ('+~', 25), ('phasor~', 26), ('+~', 27), ('cos~', 28), ('*~', 29), ('-~', 30), ('clip~', 31), ('*~', 32), ('*~', 33), ('*~', 34), ('*~', 35), ('sig~', 36), ('-~', 37), ('*~', 38), ('*~', 39), ('*~', 40), ('*~', 41), ('*~', 42), ('phasor~', 43), ('lop~', 44), ('*~', 45), ('+~', 46), ('phasor~', 47), ('+~', 48), ('cos~', 49), ('*~', 50), ('-~', 51), ('clip~', 52), ('*~', 53), ('*~', 54), ('*~', 55), ('*~', 56), ('sig~', 57), ('-~', 58), ('*~', 59), ('*~', 60), ('*~', 61), ('*~', 62), ('*~', 63), ('phasor~', 64), ('lop~', 65), ('*~', 66), ('+~', 67), ('phasor~', 68), ('+~', 69), ('cos~', 70), ('*~', 71), ('-~', 72), ('clip~', 73), ('*~', 74), ('*~', 75), ('*~', 76), ('*~', 77), ('sig~', 78), ('-~', 79), ('*~', 80), ('*~', 81), ('*~', 82), ('*~', 83), ('*~', 84), ('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 15 => 442.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 15 sig~ NoneType
getChildren(): sig~ ==> [[16, '-~', 0]]
child exists, appending 16
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 15 sig~
15 is connected to [(16, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 16 -~ 0
>>>> 16 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15]
PLACEMENT
place(): 16 => 442.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 16 -~ method
getChildren(): -~ ==> [[12, '*~', 0]]
12 is not connected to anybody.
relocator() 16 12
442 58 and 10 346
getChildren(): [13, 14]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 12 => 10 346
--> Relocated to: 10 346 and 442 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 18), ('*~', 19), ('*~', 20), ('*~', 21), ('phasor~', 22), ('lop~', 23), ('*~', 24), ('+~', 25), ('phasor~', 26), ('+~', 27), ('cos~', 28), ('*~', 29), ('-~', 30), ('clip~', 31), ('*~', 32), ('*~', 33), ('*~', 34), ('*~', 35), ('sig~', 36), ('-~', 37), ('*~', 38), ('*~', 39), ('*~', 40), ('*~', 41), ('*~', 42), ('phasor~', 43), ('lop~', 44), ('*~', 45), ('+~', 46), ('phasor~', 47), ('+~', 48), ('cos~', 49), ('*~', 50), ('-~', 51), ('clip~', 52), ('*~', 53), ('*~', 54), ('*~', 55), ('*~', 56), ('sig~', 57), ('-~', 58), ('*~', 59), ('*~', 60), ('*~', 61), ('*~', 62), ('*~', 63), ('phasor~', 64), ('lop~', 65), ('*~', 66), ('+~', 67), ('phasor~', 68), ('+~', 69), ('cos~', 70), ('*~', 71), ('-~', 72), ('clip~', 73), ('*~', 74), ('*~', 75), ('*~', 76), ('*~', 77), ('sig~', 78), ('-~', 79), ('*~', 80), ('*~', 81), ('*~', 82), ('*~', 83), ('*~', 84), ('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 18 => 874.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 18 *~ NoneType
getChildren(): *~ ==> [[19, '*~', 0], [19, '*~', 0]]
child exists, appending 19
19 is not connected to anybody.
But, 19 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18]
place(): 19 => 874.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 18 *~
18 is connected to [(19, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 19 *~ 0
>>>> 19 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19]
PLACEMENT
place(): 19 => 874.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 19 *~ method
getChildren(): *~ ==> [[20, '*~', 0], [20, '*~', 0]]
child exists, appending 20
20 is not connected to anybody.
But, 20 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19]
place(): 20 => 874.0 82
relocator() 19 20
874 82 and 874 82
getChildren(): [21, 21]
EQUAL_Y
move(): *~
place(): 20 => 874 106
--> Relocated to: 874 106 and 874 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 19 *~
19 is connected to [(20, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 20 *~ 0
>>>> 20 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20]
PLACEMENT
place(): 20 => 874.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 20 *~ method
getChildren(): *~ ==> [[21, '*~', 0], [21, '*~', 0]]
child exists, appending 21
21 is not connected to anybody.
But, 21 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20]
place(): 21 => 874.0 130
relocator() 20 21
874 130 and 874 130
getChildren(): [16]
EQUAL_Y
move(): *~
place(): 21 => 874 154
--> Relocated to: 874 154 and 874 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 20 *~
20 is connected to [(21, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 21 *~ 0
>>>> 21 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21]
PLACEMENT
place(): 21 => 874.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 21 *~ method
getChildren(): *~ ==> [[16, '-~', 0]]
16 is not connected to anybody.
relocator() 21 16
874 178 and 442 58
getChildren(): [12]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 16 => 442 58
--> Relocated to: 442 58 and 874 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 22), ('lop~', 23), ('*~', 24), ('+~', 25), ('phasor~', 26), ('+~', 27), ('cos~', 28), ('*~', 29), ('-~', 30), ('clip~', 31), ('*~', 32), ('*~', 33), ('*~', 34), ('*~', 35), ('sig~', 36), ('-~', 37), ('*~', 38), ('*~', 39), ('*~', 40), ('*~', 41), ('*~', 42), ('phasor~', 43), ('lop~', 44), ('*~', 45), ('+~', 46), ('phasor~', 47), ('+~', 48), ('cos~', 49), ('*~', 50), ('-~', 51), ('clip~', 52), ('*~', 53), ('*~', 54), ('*~', 55), ('*~', 56), ('sig~', 57), ('-~', 58), ('*~', 59), ('*~', 60), ('*~', 61), ('*~', 62), ('*~', 63), ('phasor~', 64), ('lop~', 65), ('*~', 66), ('+~', 67), ('phasor~', 68), ('+~', 69), ('cos~', 70), ('*~', 71), ('-~', 72), ('clip~', 73), ('*~', 74), ('*~', 75), ('*~', 76), ('*~', 77), ('sig~', 78), ('-~', 79), ('*~', 80), ('*~', 81), ('*~', 82), ('*~', 83), ('*~', 84), ('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 22 => 1306.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 22 phasor~ NoneType
getChildren(): phasor~ ==> [[23, 'lop~', 0]]
child exists, appending 23
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 22 phasor~
22 is connected to [(23, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 23 lop~ 0
>>>> 23 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22]
PLACEMENT
place(): 23 => 1306.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 23 lop~ method
getChildren(): lop~ ==> [[24, '*~', 0], [38, '*~', 0], [38, '*~', 0]]
child exists, appending 24
child exists, appending 38
38 is not connected to anybody.
But, 38 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23]
place(): 38 => 1306.0 58
relocator() 23 38
1306 58 and 1306 58
getChildren(): [39, 39]
EQUAL_Y
move(): *~
place(): 38 => 1306 82
--> Relocated to: 1306 82 and 1306 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 23 lop~
23 is connected to [(24, 0), (38, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 24 *~ 0
>>>> 24 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38]
PLACEMENT
place(): 24 => 1306.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 24 *~ method
getChildren(): *~ ==> [[25, '+~', 0]]
child exists, appending 25
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 24 *~
24 is connected to [(25, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 25 +~ 0
>>>> 25 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24]
PLACEMENT
place(): 25 => 1306.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 25 +~ method
getChildren(): +~ ==> [[26, 'phasor~', 0]]
child exists, appending 26
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 25 +~
25 is connected to [(26, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 26 phasor~ 0
>>>> 26 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25]
PLACEMENT
place(): 26 => 1306.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 26 phasor~ method
getChildren(): phasor~ ==> [[27, '+~', 0]]
child exists, appending 27
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 26 phasor~
26 is connected to [(27, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 27 +~ 0
>>>> 27 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26]
PLACEMENT
place(): 27 => 1306.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 27 +~ method
getChildren(): +~ ==> [[28, 'cos~', 0]]
child exists, appending 28
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 27 +~
27 is connected to [(28, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 28 cos~ 0
>>>> 28 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27]
PLACEMENT
place(): 28 => 1306.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 28 cos~ method
getChildren(): cos~ ==> [[29, '*~', 0]]
child exists, appending 29
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 28 cos~
28 is connected to [(29, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 29 *~ 0
>>>> 29 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28]
PLACEMENT
place(): 29 => 1306.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 29 *~ method
getChildren(): *~ ==> [[30, '-~', 0]]
child exists, appending 30
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 29 *~
29 is connected to [(30, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 30 -~ 0
>>>> 30 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29]
PLACEMENT
place(): 30 => 1306.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 30 -~ method
getChildren(): -~ ==> [[31, 'clip~', 0]]
child exists, appending 31
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 30 -~
30 is connected to [(31, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 31 clip~ 0
>>>> 31 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30]
PLACEMENT
place(): 31 => 1306.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 31 clip~ method
getChildren(): clip~ ==> [[32, '*~', 0]]
child exists, appending 32
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 31 clip~
31 is connected to [(32, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 32 *~ 0
>>>> 32 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31]
PLACEMENT
place(): 32 => 1306.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 32 *~ method
getChildren(): *~ ==> [[33, '*~', 0]]
child exists, appending 33
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 32 *~
32 is connected to [(33, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 33 *~ 0
>>>> 33 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32]
PLACEMENT
place(): 33 => 1306.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 33 *~ method
getChildren(): *~ ==> [[34, '*~', 0], [35, '*~', 0]]
child exists, appending 34
child exists, appending 35
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 33 *~
33 is connected to [(34, 0), (35, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 34 *~ 0
>>>> 34 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
PLACEMENT
place(): 34 => 1306.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 34 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 34 0
1306 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 1306 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 36), ('-~', 37), ('*~', 39), ('*~', 40), ('*~', 41), ('*~', 42), ('phasor~', 43), ('lop~', 44), ('*~', 45), ('+~', 46), ('phasor~', 47), ('+~', 48), ('cos~', 49), ('*~', 50), ('-~', 51), ('clip~', 52), ('*~', 53), ('*~', 54), ('*~', 55), ('*~', 56), ('sig~', 57), ('-~', 58), ('*~', 59), ('*~', 60), ('*~', 61), ('*~', 62), ('*~', 63), ('phasor~', 64), ('lop~', 65), ('*~', 66), ('+~', 67), ('phasor~', 68), ('+~', 69), ('cos~', 70), ('*~', 71), ('-~', 72), ('clip~', 73), ('*~', 74), ('*~', 75), ('*~', 76), ('*~', 77), ('sig~', 78), ('-~', 79), ('*~', 80), ('*~', 81), ('*~', 82), ('*~', 83), ('*~', 84), ('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 36 => 1738.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 36 sig~ NoneType
getChildren(): sig~ ==> [[37, '-~', 0]]
child exists, appending 37
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 36 sig~
36 is connected to [(37, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 37 -~ 0
>>>> 37 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36]
PLACEMENT
place(): 37 => 1738.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 37 -~ method
getChildren(): -~ ==> [[33, '*~', 0]]
33 is not connected to anybody.
relocator() 37 33
1738 58 and 1306 322
getChildren(): [34, 35]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 33 => 1306 322
--> Relocated to: 1306 322 and 1738 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 39), ('*~', 40), ('*~', 41), ('*~', 42), ('phasor~', 43), ('lop~', 44), ('*~', 45), ('+~', 46), ('phasor~', 47), ('+~', 48), ('cos~', 49), ('*~', 50), ('-~', 51), ('clip~', 52), ('*~', 53), ('*~', 54), ('*~', 55), ('*~', 56), ('sig~', 57), ('-~', 58), ('*~', 59), ('*~', 60), ('*~', 61), ('*~', 62), ('*~', 63), ('phasor~', 64), ('lop~', 65), ('*~', 66), ('+~', 67), ('phasor~', 68), ('+~', 69), ('cos~', 70), ('*~', 71), ('-~', 72), ('clip~', 73), ('*~', 74), ('*~', 75), ('*~', 76), ('*~', 77), ('sig~', 78), ('-~', 79), ('*~', 80), ('*~', 81), ('*~', 82), ('*~', 83), ('*~', 84), ('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 39 => 2170.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 39 *~ NoneType
getChildren(): *~ ==> [[40, '*~', 0], [40, '*~', 0]]
child exists, appending 40
40 is not connected to anybody.
But, 40 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39]
place(): 40 => 2170.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 39 *~
39 is connected to [(40, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 40 *~ 0
>>>> 40 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40]
PLACEMENT
place(): 40 => 2170.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 40 *~ method
getChildren(): *~ ==> [[41, '*~', 0], [41, '*~', 0]]
child exists, appending 41
41 is not connected to anybody.
But, 41 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40]
place(): 41 => 2170.0 82
relocator() 40 41
2170 82 and 2170 82
getChildren(): [42, 42]
EQUAL_Y
move(): *~
place(): 41 => 2170 106
--> Relocated to: 2170 106 and 2170 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 40 *~
40 is connected to [(41, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 41 *~ 0
>>>> 41 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41]
PLACEMENT
place(): 41 => 2170.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 41 *~ method
getChildren(): *~ ==> [[42, '*~', 0], [42, '*~', 0]]
child exists, appending 42
42 is not connected to anybody.
But, 42 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41]
place(): 42 => 2170.0 130
relocator() 41 42
2170 130 and 2170 130
getChildren(): [37]
EQUAL_Y
move(): *~
place(): 42 => 2170 154
--> Relocated to: 2170 154 and 2170 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 41 *~
41 is connected to [(42, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 42 *~ 0
>>>> 42 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42]
PLACEMENT
place(): 42 => 2170.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 42 *~ method
getChildren(): *~ ==> [[37, '-~', 0]]
37 is not connected to anybody.
relocator() 42 37
2170 178 and 1738 58
getChildren(): [33]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 37 => 1738 58
--> Relocated to: 1738 58 and 2170 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 43), ('lop~', 44), ('*~', 45), ('+~', 46), ('phasor~', 47), ('+~', 48), ('cos~', 49), ('*~', 50), ('-~', 51), ('clip~', 52), ('*~', 53), ('*~', 54), ('*~', 55), ('*~', 56), ('sig~', 57), ('-~', 58), ('*~', 59), ('*~', 60), ('*~', 61), ('*~', 62), ('*~', 63), ('phasor~', 64), ('lop~', 65), ('*~', 66), ('+~', 67), ('phasor~', 68), ('+~', 69), ('cos~', 70), ('*~', 71), ('-~', 72), ('clip~', 73), ('*~', 74), ('*~', 75), ('*~', 76), ('*~', 77), ('sig~', 78), ('-~', 79), ('*~', 80), ('*~', 81), ('*~', 82), ('*~', 83), ('*~', 84), ('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 43 => 2602.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 43 phasor~ NoneType
getChildren(): phasor~ ==> [[44, 'lop~', 0]]
child exists, appending 44
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 43 phasor~
43 is connected to [(44, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 44 lop~ 0
>>>> 44 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43]
PLACEMENT
place(): 44 => 2602.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 44 lop~ method
getChildren(): lop~ ==> [[45, '*~', 0], [59, '*~', 0], [59, '*~', 0]]
child exists, appending 45
child exists, appending 59
59 is not connected to anybody.
But, 59 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44]
place(): 59 => 2602.0 58
relocator() 44 59
2602 58 and 2602 58
getChildren(): [60, 60]
EQUAL_Y
move(): *~
place(): 59 => 2602 82
--> Relocated to: 2602 82 and 2602 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 44 lop~
44 is connected to [(45, 0), (59, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 45 *~ 0
>>>> 45 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59]
PLACEMENT
place(): 45 => 2602.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 45 *~ method
getChildren(): *~ ==> [[46, '+~', 0]]
child exists, appending 46
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 45 *~
45 is connected to [(46, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 46 +~ 0
>>>> 46 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45]
PLACEMENT
place(): 46 => 2602.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 46 +~ method
getChildren(): +~ ==> [[47, 'phasor~', 0]]
child exists, appending 47
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 46 +~
46 is connected to [(47, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 47 phasor~ 0
>>>> 47 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46]
PLACEMENT
place(): 47 => 2602.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 47 phasor~ method
getChildren(): phasor~ ==> [[48, '+~', 0]]
child exists, appending 48
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 47 phasor~
47 is connected to [(48, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 48 +~ 0
>>>> 48 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47]
PLACEMENT
place(): 48 => 2602.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 48 +~ method
getChildren(): +~ ==> [[49, 'cos~', 0]]
child exists, appending 49
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 48 +~
48 is connected to [(49, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 49 cos~ 0
>>>> 49 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48]
PLACEMENT
place(): 49 => 2602.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 49 cos~ method
getChildren(): cos~ ==> [[50, '*~', 0]]
child exists, appending 50
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 49 cos~
49 is connected to [(50, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 50 *~ 0
>>>> 50 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49]
PLACEMENT
place(): 50 => 2602.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 50 *~ method
getChildren(): *~ ==> [[51, '-~', 0]]
child exists, appending 51
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 50 *~
50 is connected to [(51, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 51 -~ 0
>>>> 51 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50]
PLACEMENT
place(): 51 => 2602.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 51 -~ method
getChildren(): -~ ==> [[52, 'clip~', 0]]
child exists, appending 52
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 51 -~
51 is connected to [(52, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 52 clip~ 0
>>>> 52 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51]
PLACEMENT
place(): 52 => 2602.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 52 clip~ method
getChildren(): clip~ ==> [[53, '*~', 0]]
child exists, appending 53
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 52 clip~
52 is connected to [(53, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 53 *~ 0
>>>> 53 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52]
PLACEMENT
place(): 53 => 2602.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 53 *~ method
getChildren(): *~ ==> [[54, '*~', 0]]
child exists, appending 54
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 53 *~
53 is connected to [(54, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 54 *~ 0
>>>> 54 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53]
PLACEMENT
place(): 54 => 2602.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 54 *~ method
getChildren(): *~ ==> [[55, '*~', 0], [56, '*~', 0]]
child exists, appending 55
child exists, appending 56
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 54 *~
54 is connected to [(55, 0), (56, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 55 *~ 0
>>>> 55 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]
PLACEMENT
place(): 55 => 2602.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 55 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 55 0
2602 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 2602 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 57), ('-~', 58), ('*~', 60), ('*~', 61), ('*~', 62), ('*~', 63), ('phasor~', 64), ('lop~', 65), ('*~', 66), ('+~', 67), ('phasor~', 68), ('+~', 69), ('cos~', 70), ('*~', 71), ('-~', 72), ('clip~', 73), ('*~', 74), ('*~', 75), ('*~', 76), ('*~', 77), ('sig~', 78), ('-~', 79), ('*~', 80), ('*~', 81), ('*~', 82), ('*~', 83), ('*~', 84), ('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 57 => 3034.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 57 sig~ NoneType
getChildren(): sig~ ==> [[58, '-~', 0]]
child exists, appending 58
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 57 sig~
57 is connected to [(58, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 58 -~ 0
>>>> 58 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57]
PLACEMENT
place(): 58 => 3034.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 58 -~ method
getChildren(): -~ ==> [[54, '*~', 0]]
54 is not connected to anybody.
relocator() 58 54
3034 58 and 2602 322
getChildren(): [55, 56]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 54 => 2602 322
--> Relocated to: 2602 322 and 3034 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 60), ('*~', 61), ('*~', 62), ('*~', 63), ('phasor~', 64), ('lop~', 65), ('*~', 66), ('+~', 67), ('phasor~', 68), ('+~', 69), ('cos~', 70), ('*~', 71), ('-~', 72), ('clip~', 73), ('*~', 74), ('*~', 75), ('*~', 76), ('*~', 77), ('sig~', 78), ('-~', 79), ('*~', 80), ('*~', 81), ('*~', 82), ('*~', 83), ('*~', 84), ('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 60 => 3466.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 60 *~ NoneType
getChildren(): *~ ==> [[61, '*~', 0], [61, '*~', 0]]
child exists, appending 61
61 is not connected to anybody.
But, 61 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60]
place(): 61 => 3466.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 60 *~
60 is connected to [(61, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 61 *~ 0
>>>> 61 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61]
PLACEMENT
place(): 61 => 3466.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 61 *~ method
getChildren(): *~ ==> [[62, '*~', 0], [62, '*~', 0]]
child exists, appending 62
62 is not connected to anybody.
But, 62 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61]
place(): 62 => 3466.0 82
relocator() 61 62
3466 82 and 3466 82
getChildren(): [63, 63]
EQUAL_Y
move(): *~
place(): 62 => 3466 106
--> Relocated to: 3466 106 and 3466 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 61 *~
61 is connected to [(62, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 62 *~ 0
>>>> 62 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62]
PLACEMENT
place(): 62 => 3466.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 62 *~ method
getChildren(): *~ ==> [[63, '*~', 0], [63, '*~', 0]]
child exists, appending 63
63 is not connected to anybody.
But, 63 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62]
place(): 63 => 3466.0 130
relocator() 62 63
3466 130 and 3466 130
getChildren(): [58]
EQUAL_Y
move(): *~
place(): 63 => 3466 154
--> Relocated to: 3466 154 and 3466 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 62 *~
62 is connected to [(63, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 63 *~ 0
>>>> 63 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63]
PLACEMENT
place(): 63 => 3466.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 63 *~ method
getChildren(): *~ ==> [[58, '-~', 0]]
58 is not connected to anybody.
relocator() 63 58
3466 178 and 3034 58
getChildren(): [54]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 58 => 3034 58
--> Relocated to: 3034 58 and 3466 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 64), ('lop~', 65), ('*~', 66), ('+~', 67), ('phasor~', 68), ('+~', 69), ('cos~', 70), ('*~', 71), ('-~', 72), ('clip~', 73), ('*~', 74), ('*~', 75), ('*~', 76), ('*~', 77), ('sig~', 78), ('-~', 79), ('*~', 80), ('*~', 81), ('*~', 82), ('*~', 83), ('*~', 84), ('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 64 => 3898.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 64 phasor~ NoneType
getChildren(): phasor~ ==> [[65, 'lop~', 0]]
child exists, appending 65
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 64 phasor~
64 is connected to [(65, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 65 lop~ 0
>>>> 65 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64]
PLACEMENT
place(): 65 => 3898.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 65 lop~ method
getChildren(): lop~ ==> [[66, '*~', 0], [80, '*~', 0], [80, '*~', 0]]
child exists, appending 66
child exists, appending 80
80 is not connected to anybody.
But, 80 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65]
place(): 80 => 3898.0 58
relocator() 65 80
3898 58 and 3898 58
getChildren(): [81, 81]
EQUAL_Y
move(): *~
place(): 80 => 3898 82
--> Relocated to: 3898 82 and 3898 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 65 lop~
65 is connected to [(66, 0), (80, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 66 *~ 0
>>>> 66 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80]
PLACEMENT
place(): 66 => 3898.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 66 *~ method
getChildren(): *~ ==> [[67, '+~', 0]]
child exists, appending 67
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 66 *~
66 is connected to [(67, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 67 +~ 0
>>>> 67 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66]
PLACEMENT
place(): 67 => 3898.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 67 +~ method
getChildren(): +~ ==> [[68, 'phasor~', 0]]
child exists, appending 68
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 67 +~
67 is connected to [(68, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 68 phasor~ 0
>>>> 68 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67]
PLACEMENT
place(): 68 => 3898.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 68 phasor~ method
getChildren(): phasor~ ==> [[69, '+~', 0]]
child exists, appending 69
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 68 phasor~
68 is connected to [(69, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 69 +~ 0
>>>> 69 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68]
PLACEMENT
place(): 69 => 3898.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 69 +~ method
getChildren(): +~ ==> [[70, 'cos~', 0]]
child exists, appending 70
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 69 +~
69 is connected to [(70, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 70 cos~ 0
>>>> 70 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69]
PLACEMENT
place(): 70 => 3898.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 70 cos~ method
getChildren(): cos~ ==> [[71, '*~', 0]]
child exists, appending 71
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 70 cos~
70 is connected to [(71, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 71 *~ 0
>>>> 71 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70]
PLACEMENT
place(): 71 => 3898.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 71 *~ method
getChildren(): *~ ==> [[72, '-~', 0]]
child exists, appending 72
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 71 *~
71 is connected to [(72, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 72 -~ 0
>>>> 72 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71]
PLACEMENT
place(): 72 => 3898.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 72 -~ method
getChildren(): -~ ==> [[73, 'clip~', 0]]
child exists, appending 73
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 72 -~
72 is connected to [(73, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 73 clip~ 0
>>>> 73 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72]
PLACEMENT
place(): 73 => 3898.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 73 clip~ method
getChildren(): clip~ ==> [[74, '*~', 0]]
child exists, appending 74
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 73 clip~
73 is connected to [(74, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 74 *~ 0
>>>> 74 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73]
PLACEMENT
place(): 74 => 3898.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 74 *~ method
getChildren(): *~ ==> [[75, '*~', 0]]
child exists, appending 75
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 74 *~
74 is connected to [(75, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 75 *~ 0
>>>> 75 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74]
PLACEMENT
place(): 75 => 3898.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 75 *~ method
getChildren(): *~ ==> [[76, '*~', 0], [77, '*~', 0]]
child exists, appending 76
child exists, appending 77
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 75 *~
75 is connected to [(76, 0), (77, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 76 *~ 0
>>>> 76 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75]
PLACEMENT
place(): 76 => 3898.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 76 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 76 0
3898 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 3898 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 78), ('-~', 79), ('*~', 81), ('*~', 82), ('*~', 83), ('*~', 84), ('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 78 => 4330.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 78 sig~ NoneType
getChildren(): sig~ ==> [[79, '-~', 0]]
child exists, appending 79
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 78 sig~
78 is connected to [(79, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 79 -~ 0
>>>> 79 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78]
PLACEMENT
place(): 79 => 4330.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 79 -~ method
getChildren(): -~ ==> [[75, '*~', 0]]
75 is not connected to anybody.
relocator() 79 75
4330 58 and 3898 322
getChildren(): [76, 77]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 75 => 3898 322
--> Relocated to: 3898 322 and 4330 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 81), ('*~', 82), ('*~', 83), ('*~', 84), ('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 81 => 4762.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 81 *~ NoneType
getChildren(): *~ ==> [[82, '*~', 0], [82, '*~', 0]]
child exists, appending 82
82 is not connected to anybody.
But, 82 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81]
place(): 82 => 4762.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 81 *~
81 is connected to [(82, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 82 *~ 0
>>>> 82 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82]
PLACEMENT
place(): 82 => 4762.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 82 *~ method
getChildren(): *~ ==> [[83, '*~', 0], [83, '*~', 0]]
child exists, appending 83
83 is not connected to anybody.
But, 83 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82]
place(): 83 => 4762.0 82
relocator() 82 83
4762 82 and 4762 82
getChildren(): [84, 84]
EQUAL_Y
move(): *~
place(): 83 => 4762 106
--> Relocated to: 4762 106 and 4762 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 82 *~
82 is connected to [(83, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 83 *~ 0
>>>> 83 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83]
PLACEMENT
place(): 83 => 4762.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 83 *~ method
getChildren(): *~ ==> [[84, '*~', 0], [84, '*~', 0]]
child exists, appending 84
84 is not connected to anybody.
But, 84 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83]
place(): 84 => 4762.0 130
relocator() 83 84
4762 130 and 4762 130
getChildren(): [79]
EQUAL_Y
move(): *~
place(): 84 => 4762 154
--> Relocated to: 4762 154 and 4762 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 83 *~
83 is connected to [(84, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 84 *~ 0
>>>> 84 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84]
PLACEMENT
place(): 84 => 4762.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 84 *~ method
getChildren(): *~ ==> [[79, '-~', 0]]
79 is not connected to anybody.
relocator() 84 79
4762 178 and 4330 58
getChildren(): [75]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 79 => 4330 58
--> Relocated to: 4330 58 and 4762 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 85), ('lop~', 86), ('*~', 87), ('+~', 88), ('phasor~', 89), ('+~', 90), ('cos~', 91), ('*~', 92), ('-~', 93), ('clip~', 94), ('*~', 95), ('*~', 96), ('*~', 97), ('*~', 98), ('sig~', 99), ('-~', 100), ('*~', 101), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 85 => 5194.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 85 phasor~ NoneType
getChildren(): phasor~ ==> [[86, 'lop~', 0]]
child exists, appending 86
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 85 phasor~
85 is connected to [(86, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 86 lop~ 0
>>>> 86 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85]
PLACEMENT
place(): 86 => 5194.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 86 lop~ method
getChildren(): lop~ ==> [[87, '*~', 0], [101, '*~', 0], [101, '*~', 0]]
child exists, appending 87
child exists, appending 101
101 is not connected to anybody.
But, 101 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86]
place(): 101 => 5194.0 58
relocator() 86 101
5194 58 and 5194 58
getChildren(): [102, 102]
EQUAL_Y
move(): *~
place(): 101 => 5194 82
--> Relocated to: 5194 82 and 5194 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 86 lop~
86 is connected to [(87, 0), (101, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 87 *~ 0
>>>> 87 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101]
PLACEMENT
place(): 87 => 5194.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 87 *~ method
getChildren(): *~ ==> [[88, '+~', 0]]
child exists, appending 88
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 87 *~
87 is connected to [(88, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 88 +~ 0
>>>> 88 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87]
PLACEMENT
place(): 88 => 5194.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 88 +~ method
getChildren(): +~ ==> [[89, 'phasor~', 0]]
child exists, appending 89
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 88 +~
88 is connected to [(89, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 89 phasor~ 0
>>>> 89 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88]
PLACEMENT
place(): 89 => 5194.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 89 phasor~ method
getChildren(): phasor~ ==> [[90, '+~', 0]]
child exists, appending 90
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 89 phasor~
89 is connected to [(90, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 90 +~ 0
>>>> 90 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89]
PLACEMENT
place(): 90 => 5194.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 90 +~ method
getChildren(): +~ ==> [[91, 'cos~', 0]]
child exists, appending 91
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 90 +~
90 is connected to [(91, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 91 cos~ 0
>>>> 91 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90]
PLACEMENT
place(): 91 => 5194.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 91 cos~ method
getChildren(): cos~ ==> [[92, '*~', 0]]
child exists, appending 92
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 91 cos~
91 is connected to [(92, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 92 *~ 0
>>>> 92 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91]
PLACEMENT
place(): 92 => 5194.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 92 *~ method
getChildren(): *~ ==> [[93, '-~', 0]]
child exists, appending 93
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 92 *~
92 is connected to [(93, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 93 -~ 0
>>>> 93 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92]
PLACEMENT
place(): 93 => 5194.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 93 -~ method
getChildren(): -~ ==> [[94, 'clip~', 0]]
child exists, appending 94
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 93 -~
93 is connected to [(94, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 94 clip~ 0
>>>> 94 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93]
PLACEMENT
place(): 94 => 5194.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 94 clip~ method
getChildren(): clip~ ==> [[95, '*~', 0]]
child exists, appending 95
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 94 clip~
94 is connected to [(95, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 95 *~ 0
>>>> 95 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94]
PLACEMENT
place(): 95 => 5194.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 95 *~ method
getChildren(): *~ ==> [[96, '*~', 0]]
child exists, appending 96
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 95 *~
95 is connected to [(96, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 96 *~ 0
>>>> 96 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95]
PLACEMENT
place(): 96 => 5194.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 96 *~ method
getChildren(): *~ ==> [[97, '*~', 0], [98, '*~', 0]]
child exists, appending 97
child exists, appending 98
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 96 *~
96 is connected to [(97, 0), (98, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 97 *~ 0
>>>> 97 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96]
PLACEMENT
place(): 97 => 5194.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 97 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 97 0
5194 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 5194 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 99), ('-~', 100), ('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 99 => 5626.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 99 sig~ NoneType
getChildren(): sig~ ==> [[100, '-~', 0]]
child exists, appending 100
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 99 sig~
99 is connected to [(100, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 100 -~ 0
>>>> 100 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99]
PLACEMENT
place(): 100 => 5626.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 100 -~ method
getChildren(): -~ ==> [[96, '*~', 0]]
96 is not connected to anybody.
relocator() 100 96
5626 58 and 5194 322
getChildren(): [97, 98]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 96 => 5194 322
--> Relocated to: 5194 322 and 5626 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 102), ('*~', 103), ('*~', 104), ('*~', 105), ('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 102 => 6058.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 102 *~ NoneType
getChildren(): *~ ==> [[103, '*~', 0], [103, '*~', 0]]
child exists, appending 103
103 is not connected to anybody.
But, 103 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102]
place(): 103 => 6058.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 102 *~
102 is connected to [(103, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 103 *~ 0
>>>> 103 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103]
PLACEMENT
place(): 103 => 6058.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 103 *~ method
getChildren(): *~ ==> [[104, '*~', 0], [104, '*~', 0]]
child exists, appending 104
104 is not connected to anybody.
But, 104 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103]
place(): 104 => 6058.0 82
relocator() 103 104
6058 82 and 6058 82
getChildren(): [105, 105]
EQUAL_Y
move(): *~
place(): 104 => 6058 106
--> Relocated to: 6058 106 and 6058 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 103 *~
103 is connected to [(104, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 104 *~ 0
>>>> 104 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104]
PLACEMENT
place(): 104 => 6058.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 104 *~ method
getChildren(): *~ ==> [[105, '*~', 0], [105, '*~', 0]]
child exists, appending 105
105 is not connected to anybody.
But, 105 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104]
place(): 105 => 6058.0 130
relocator() 104 105
6058 130 and 6058 130
getChildren(): [100]
EQUAL_Y
move(): *~
place(): 105 => 6058 154
--> Relocated to: 6058 154 and 6058 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 104 *~
104 is connected to [(105, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 105 *~ 0
>>>> 105 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105]
PLACEMENT
place(): 105 => 6058.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 105 *~ method
getChildren(): *~ ==> [[100, '-~', 0]]
100 is not connected to anybody.
relocator() 105 100
6058 178 and 5626 58
getChildren(): [96]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 100 => 5626 58
--> Relocated to: 5626 58 and 6058 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 106), ('lop~', 107), ('*~', 108), ('+~', 109), ('phasor~', 110), ('+~', 111), ('cos~', 112), ('*~', 113), ('-~', 114), ('clip~', 115), ('*~', 116), ('*~', 117), ('*~', 118), ('*~', 119), ('sig~', 120), ('-~', 121), ('*~', 122), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 106 => 6490.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 106 phasor~ NoneType
getChildren(): phasor~ ==> [[107, 'lop~', 0]]
child exists, appending 107
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 106 phasor~
106 is connected to [(107, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 107 lop~ 0
>>>> 107 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106]
PLACEMENT
place(): 107 => 6490.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 107 lop~ method
getChildren(): lop~ ==> [[108, '*~', 0], [122, '*~', 0], [122, '*~', 0]]
child exists, appending 108
child exists, appending 122
122 is not connected to anybody.
But, 122 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107]
place(): 122 => 6490.0 58
relocator() 107 122
6490 58 and 6490 58
getChildren(): [123, 123]
EQUAL_Y
move(): *~
place(): 122 => 6490 82
--> Relocated to: 6490 82 and 6490 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 107 lop~
107 is connected to [(108, 0), (122, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 108 *~ 0
>>>> 108 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122]
PLACEMENT
place(): 108 => 6490.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 108 *~ method
getChildren(): *~ ==> [[109, '+~', 0]]
child exists, appending 109
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 108 *~
108 is connected to [(109, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 109 +~ 0
>>>> 109 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108]
PLACEMENT
place(): 109 => 6490.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 109 +~ method
getChildren(): +~ ==> [[110, 'phasor~', 0]]
child exists, appending 110
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 109 +~
109 is connected to [(110, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 110 phasor~ 0
>>>> 110 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109]
PLACEMENT
place(): 110 => 6490.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 110 phasor~ method
getChildren(): phasor~ ==> [[111, '+~', 0]]
child exists, appending 111
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 110 phasor~
110 is connected to [(111, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 111 +~ 0
>>>> 111 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110]
PLACEMENT
place(): 111 => 6490.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 111 +~ method
getChildren(): +~ ==> [[112, 'cos~', 0]]
child exists, appending 112
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 111 +~
111 is connected to [(112, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 112 cos~ 0
>>>> 112 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111]
PLACEMENT
place(): 112 => 6490.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 112 cos~ method
getChildren(): cos~ ==> [[113, '*~', 0]]
child exists, appending 113
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 112 cos~
112 is connected to [(113, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 113 *~ 0
>>>> 113 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112]
PLACEMENT
place(): 113 => 6490.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 113 *~ method
getChildren(): *~ ==> [[114, '-~', 0]]
child exists, appending 114
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 113 *~
113 is connected to [(114, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 114 -~ 0
>>>> 114 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113]
PLACEMENT
place(): 114 => 6490.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 114 -~ method
getChildren(): -~ ==> [[115, 'clip~', 0]]
child exists, appending 115
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 114 -~
114 is connected to [(115, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 115 clip~ 0
>>>> 115 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114]
PLACEMENT
place(): 115 => 6490.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 115 clip~ method
getChildren(): clip~ ==> [[116, '*~', 0]]
child exists, appending 116
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 115 clip~
115 is connected to [(116, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 116 *~ 0
>>>> 116 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115]
PLACEMENT
place(): 116 => 6490.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 116 *~ method
getChildren(): *~ ==> [[117, '*~', 0]]
child exists, appending 117
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 116 *~
116 is connected to [(117, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 117 *~ 0
>>>> 117 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116]
PLACEMENT
place(): 117 => 6490.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 117 *~ method
getChildren(): *~ ==> [[118, '*~', 0], [119, '*~', 0]]
child exists, appending 118
child exists, appending 119
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 117 *~
117 is connected to [(118, 0), (119, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 118 *~ 0
>>>> 118 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117]
PLACEMENT
place(): 118 => 6490.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 118 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 118 0
6490 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 6490 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 120), ('-~', 121), ('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 120 => 6922.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 120 sig~ NoneType
getChildren(): sig~ ==> [[121, '-~', 0]]
child exists, appending 121
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 120 sig~
120 is connected to [(121, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 121 -~ 0
>>>> 121 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120]
PLACEMENT
place(): 121 => 6922.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 121 -~ method
getChildren(): -~ ==> [[117, '*~', 0]]
117 is not connected to anybody.
relocator() 121 117
6922 58 and 6490 322
getChildren(): [118, 119]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 117 => 6490 322
--> Relocated to: 6490 322 and 6922 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 123), ('*~', 124), ('*~', 125), ('*~', 126), ('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 123 => 7354.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 123 *~ NoneType
getChildren(): *~ ==> [[124, '*~', 0], [124, '*~', 0]]
child exists, appending 124
124 is not connected to anybody.
But, 124 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123]
place(): 124 => 7354.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 123 *~
123 is connected to [(124, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 124 *~ 0
>>>> 124 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124]
PLACEMENT
place(): 124 => 7354.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 124 *~ method
getChildren(): *~ ==> [[125, '*~', 0], [125, '*~', 0]]
child exists, appending 125
125 is not connected to anybody.
But, 125 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124]
place(): 125 => 7354.0 82
relocator() 124 125
7354 82 and 7354 82
getChildren(): [126, 126]
EQUAL_Y
move(): *~
place(): 125 => 7354 106
--> Relocated to: 7354 106 and 7354 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 124 *~
124 is connected to [(125, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 125 *~ 0
>>>> 125 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125]
PLACEMENT
place(): 125 => 7354.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 125 *~ method
getChildren(): *~ ==> [[126, '*~', 0], [126, '*~', 0]]
child exists, appending 126
126 is not connected to anybody.
But, 126 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125]
place(): 126 => 7354.0 130
relocator() 125 126
7354 130 and 7354 130
getChildren(): [121]
EQUAL_Y
move(): *~
place(): 126 => 7354 154
--> Relocated to: 7354 154 and 7354 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 125 *~
125 is connected to [(126, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 126 *~ 0
>>>> 126 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126]
PLACEMENT
place(): 126 => 7354.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 126 *~ method
getChildren(): *~ ==> [[121, '-~', 0]]
121 is not connected to anybody.
relocator() 126 121
7354 178 and 6922 58
getChildren(): [117]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 121 => 6922 58
--> Relocated to: 6922 58 and 7354 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 127), ('lop~', 128), ('*~', 129), ('+~', 130), ('phasor~', 131), ('+~', 132), ('cos~', 133), ('*~', 134), ('-~', 135), ('clip~', 136), ('*~', 137), ('*~', 138), ('*~', 139), ('*~', 140), ('sig~', 141), ('-~', 142), ('*~', 143), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 127 => 7786.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 127 phasor~ NoneType
getChildren(): phasor~ ==> [[128, 'lop~', 0]]
child exists, appending 128
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 127 phasor~
127 is connected to [(128, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 128 lop~ 0
>>>> 128 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127]
PLACEMENT
place(): 128 => 7786.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 128 lop~ method
getChildren(): lop~ ==> [[129, '*~', 0], [143, '*~', 0], [143, '*~', 0]]
child exists, appending 129
child exists, appending 143
143 is not connected to anybody.
But, 143 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128]
place(): 143 => 7786.0 58
relocator() 128 143
7786 58 and 7786 58
getChildren(): [144, 144]
EQUAL_Y
move(): *~
place(): 143 => 7786 82
--> Relocated to: 7786 82 and 7786 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 128 lop~
128 is connected to [(129, 0), (143, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 129 *~ 0
>>>> 129 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143]
PLACEMENT
place(): 129 => 7786.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 129 *~ method
getChildren(): *~ ==> [[130, '+~', 0]]
child exists, appending 130
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 129 *~
129 is connected to [(130, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 130 +~ 0
>>>> 130 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129]
PLACEMENT
place(): 130 => 7786.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 130 +~ method
getChildren(): +~ ==> [[131, 'phasor~', 0]]
child exists, appending 131
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 130 +~
130 is connected to [(131, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 131 phasor~ 0
>>>> 131 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130]
PLACEMENT
place(): 131 => 7786.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 131 phasor~ method
getChildren(): phasor~ ==> [[132, '+~', 0]]
child exists, appending 132
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 131 phasor~
131 is connected to [(132, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 132 +~ 0
>>>> 132 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131]
PLACEMENT
place(): 132 => 7786.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 132 +~ method
getChildren(): +~ ==> [[133, 'cos~', 0]]
child exists, appending 133
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 132 +~
132 is connected to [(133, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 133 cos~ 0
>>>> 133 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132]
PLACEMENT
place(): 133 => 7786.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 133 cos~ method
getChildren(): cos~ ==> [[134, '*~', 0]]
child exists, appending 134
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 133 cos~
133 is connected to [(134, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 134 *~ 0
>>>> 134 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133]
PLACEMENT
place(): 134 => 7786.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 134 *~ method
getChildren(): *~ ==> [[135, '-~', 0]]
child exists, appending 135
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 134 *~
134 is connected to [(135, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 135 -~ 0
>>>> 135 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134]
PLACEMENT
place(): 135 => 7786.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 135 -~ method
getChildren(): -~ ==> [[136, 'clip~', 0]]
child exists, appending 136
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 135 -~
135 is connected to [(136, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 136 clip~ 0
>>>> 136 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135]
PLACEMENT
place(): 136 => 7786.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 136 clip~ method
getChildren(): clip~ ==> [[137, '*~', 0]]
child exists, appending 137
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 136 clip~
136 is connected to [(137, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 137 *~ 0
>>>> 137 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136]
PLACEMENT
place(): 137 => 7786.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 137 *~ method
getChildren(): *~ ==> [[138, '*~', 0]]
child exists, appending 138
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 137 *~
137 is connected to [(138, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 138 *~ 0
>>>> 138 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137]
PLACEMENT
place(): 138 => 7786.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 138 *~ method
getChildren(): *~ ==> [[139, '*~', 0], [140, '*~', 0]]
child exists, appending 139
child exists, appending 140
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 138 *~
138 is connected to [(139, 0), (140, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 139 *~ 0
>>>> 139 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138]
PLACEMENT
place(): 139 => 7786.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 139 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 139 0
7786 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 7786 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 141), ('-~', 142), ('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 141 => 8218.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 141 sig~ NoneType
getChildren(): sig~ ==> [[142, '-~', 0]]
child exists, appending 142
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 141 sig~
141 is connected to [(142, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 142 -~ 0
>>>> 142 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141]
PLACEMENT
place(): 142 => 8218.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 142 -~ method
getChildren(): -~ ==> [[138, '*~', 0]]
138 is not connected to anybody.
relocator() 142 138
8218 58 and 7786 322
getChildren(): [139, 140]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 138 => 7786 322
--> Relocated to: 7786 322 and 8218 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 144), ('*~', 145), ('*~', 146), ('*~', 147), ('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 144 => 8650.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 144 *~ NoneType
getChildren(): *~ ==> [[145, '*~', 0], [145, '*~', 0]]
child exists, appending 145
145 is not connected to anybody.
But, 145 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144]
place(): 145 => 8650.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 144 *~
144 is connected to [(145, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 145 *~ 0
>>>> 145 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145]
PLACEMENT
place(): 145 => 8650.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 145 *~ method
getChildren(): *~ ==> [[146, '*~', 0], [146, '*~', 0]]
child exists, appending 146
146 is not connected to anybody.
But, 146 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145]
place(): 146 => 8650.0 82
relocator() 145 146
8650 82 and 8650 82
getChildren(): [147, 147]
EQUAL_Y
move(): *~
place(): 146 => 8650 106
--> Relocated to: 8650 106 and 8650 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 145 *~
145 is connected to [(146, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 146 *~ 0
>>>> 146 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146]
PLACEMENT
place(): 146 => 8650.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 146 *~ method
getChildren(): *~ ==> [[147, '*~', 0], [147, '*~', 0]]
child exists, appending 147
147 is not connected to anybody.
But, 147 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146]
place(): 147 => 8650.0 130
relocator() 146 147
8650 130 and 8650 130
getChildren(): [142]
EQUAL_Y
move(): *~
place(): 147 => 8650 154
--> Relocated to: 8650 154 and 8650 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 146 *~
146 is connected to [(147, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 147 *~ 0
>>>> 147 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147]
PLACEMENT
place(): 147 => 8650.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 147 *~ method
getChildren(): *~ ==> [[142, '-~', 0]]
142 is not connected to anybody.
relocator() 147 142
8650 178 and 8218 58
getChildren(): [138]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 142 => 8218 58
--> Relocated to: 8218 58 and 8650 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 148), ('lop~', 149), ('*~', 150), ('+~', 151), ('phasor~', 152), ('+~', 153), ('cos~', 154), ('*~', 155), ('-~', 156), ('clip~', 157), ('*~', 158), ('*~', 159), ('*~', 160), ('*~', 161), ('sig~', 162), ('-~', 163), ('*~', 164), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 148 => 9082.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 148 phasor~ NoneType
getChildren(): phasor~ ==> [[149, 'lop~', 0]]
child exists, appending 149
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 148 phasor~
148 is connected to [(149, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 149 lop~ 0
>>>> 149 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148]
PLACEMENT
place(): 149 => 9082.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 149 lop~ method
getChildren(): lop~ ==> [[150, '*~', 0], [164, '*~', 0], [164, '*~', 0]]
child exists, appending 150
child exists, appending 164
164 is not connected to anybody.
But, 164 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149]
place(): 164 => 9082.0 58
relocator() 149 164
9082 58 and 9082 58
getChildren(): [165, 165]
EQUAL_Y
move(): *~
place(): 164 => 9082 82
--> Relocated to: 9082 82 and 9082 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 149 lop~
149 is connected to [(150, 0), (164, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 150 *~ 0
>>>> 150 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164]
PLACEMENT
place(): 150 => 9082.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 150 *~ method
getChildren(): *~ ==> [[151, '+~', 0]]
child exists, appending 151
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 150 *~
150 is connected to [(151, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 151 +~ 0
>>>> 151 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150]
PLACEMENT
place(): 151 => 9082.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 151 +~ method
getChildren(): +~ ==> [[152, 'phasor~', 0]]
child exists, appending 152
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 151 +~
151 is connected to [(152, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 152 phasor~ 0
>>>> 152 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151]
PLACEMENT
place(): 152 => 9082.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 152 phasor~ method
getChildren(): phasor~ ==> [[153, '+~', 0]]
child exists, appending 153
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 152 phasor~
152 is connected to [(153, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 153 +~ 0
>>>> 153 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152]
PLACEMENT
place(): 153 => 9082.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 153 +~ method
getChildren(): +~ ==> [[154, 'cos~', 0]]
child exists, appending 154
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 153 +~
153 is connected to [(154, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 154 cos~ 0
>>>> 154 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153]
PLACEMENT
place(): 154 => 9082.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 154 cos~ method
getChildren(): cos~ ==> [[155, '*~', 0]]
child exists, appending 155
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 154 cos~
154 is connected to [(155, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 155 *~ 0
>>>> 155 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154]
PLACEMENT
place(): 155 => 9082.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 155 *~ method
getChildren(): *~ ==> [[156, '-~', 0]]
child exists, appending 156
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 155 *~
155 is connected to [(156, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 156 -~ 0
>>>> 156 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155]
PLACEMENT
place(): 156 => 9082.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 156 -~ method
getChildren(): -~ ==> [[157, 'clip~', 0]]
child exists, appending 157
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 156 -~
156 is connected to [(157, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 157 clip~ 0
>>>> 157 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156]
PLACEMENT
place(): 157 => 9082.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 157 clip~ method
getChildren(): clip~ ==> [[158, '*~', 0]]
child exists, appending 158
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 157 clip~
157 is connected to [(158, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 158 *~ 0
>>>> 158 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157]
PLACEMENT
place(): 158 => 9082.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 158 *~ method
getChildren(): *~ ==> [[159, '*~', 0]]
child exists, appending 159
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 158 *~
158 is connected to [(159, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 159 *~ 0
>>>> 159 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158]
PLACEMENT
place(): 159 => 9082.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 159 *~ method
getChildren(): *~ ==> [[160, '*~', 0], [161, '*~', 0]]
child exists, appending 160
child exists, appending 161
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 159 *~
159 is connected to [(160, 0), (161, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 160 *~ 0
>>>> 160 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159]
PLACEMENT
place(): 160 => 9082.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 160 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 160 0
9082 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 9082 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 162), ('-~', 163), ('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 162 => 9514.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 162 sig~ NoneType
getChildren(): sig~ ==> [[163, '-~', 0]]
child exists, appending 163
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 162 sig~
162 is connected to [(163, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 163 -~ 0
>>>> 163 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162]
PLACEMENT
place(): 163 => 9514.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 163 -~ method
getChildren(): -~ ==> [[159, '*~', 0]]
159 is not connected to anybody.
relocator() 163 159
9514 58 and 9082 322
getChildren(): [160, 161]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 159 => 9082 322
--> Relocated to: 9082 322 and 9514 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 165), ('*~', 166), ('*~', 167), ('*~', 168), ('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 165 => 9946.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 165 *~ NoneType
getChildren(): *~ ==> [[166, '*~', 0], [166, '*~', 0]]
child exists, appending 166
166 is not connected to anybody.
But, 166 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165]
place(): 166 => 9946.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 165 *~
165 is connected to [(166, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 166 *~ 0
>>>> 166 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166]
PLACEMENT
place(): 166 => 9946.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 166 *~ method
getChildren(): *~ ==> [[167, '*~', 0], [167, '*~', 0]]
child exists, appending 167
167 is not connected to anybody.
But, 167 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166]
place(): 167 => 9946.0 82
relocator() 166 167
9946 82 and 9946 82
getChildren(): [168, 168]
EQUAL_Y
move(): *~
place(): 167 => 9946 106
--> Relocated to: 9946 106 and 9946 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 166 *~
166 is connected to [(167, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 167 *~ 0
>>>> 167 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167]
PLACEMENT
place(): 167 => 9946.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 167 *~ method
getChildren(): *~ ==> [[168, '*~', 0], [168, '*~', 0]]
child exists, appending 168
168 is not connected to anybody.
But, 168 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167]
place(): 168 => 9946.0 130
relocator() 167 168
9946 130 and 9946 130
getChildren(): [163]
EQUAL_Y
move(): *~
place(): 168 => 9946 154
--> Relocated to: 9946 154 and 9946 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 167 *~
167 is connected to [(168, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 168 *~ 0
>>>> 168 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168]
PLACEMENT
place(): 168 => 9946.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 168 *~ method
getChildren(): *~ ==> [[163, '-~', 0]]
163 is not connected to anybody.
relocator() 168 163
9946 178 and 9514 58
getChildren(): [159]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 163 => 9514 58
--> Relocated to: 9514 58 and 9946 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 169), ('lop~', 170), ('*~', 171), ('+~', 172), ('phasor~', 173), ('+~', 174), ('cos~', 175), ('*~', 176), ('-~', 177), ('clip~', 178), ('*~', 179), ('*~', 180), ('*~', 181), ('*~', 182), ('sig~', 183), ('-~', 184), ('*~', 185), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 169 => 10378.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 169 phasor~ NoneType
getChildren(): phasor~ ==> [[170, 'lop~', 0]]
child exists, appending 170
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 169 phasor~
169 is connected to [(170, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 170 lop~ 0
>>>> 170 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169]
PLACEMENT
place(): 170 => 10378.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 170 lop~ method
getChildren(): lop~ ==> [[171, '*~', 0], [185, '*~', 0], [185, '*~', 0]]
child exists, appending 171
child exists, appending 185
185 is not connected to anybody.
But, 185 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170]
place(): 185 => 10378.0 58
relocator() 170 185
10378 58 and 10378 58
getChildren(): [186, 186]
EQUAL_Y
move(): *~
place(): 185 => 10378 82
--> Relocated to: 10378 82 and 10378 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 170 lop~
170 is connected to [(171, 0), (185, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 171 *~ 0
>>>> 171 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185]
PLACEMENT
place(): 171 => 10378.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 171 *~ method
getChildren(): *~ ==> [[172, '+~', 0]]
child exists, appending 172
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 171 *~
171 is connected to [(172, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 172 +~ 0
>>>> 172 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171]
PLACEMENT
place(): 172 => 10378.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 172 +~ method
getChildren(): +~ ==> [[173, 'phasor~', 0]]
child exists, appending 173
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 172 +~
172 is connected to [(173, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 173 phasor~ 0
>>>> 173 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172]
PLACEMENT
place(): 173 => 10378.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 173 phasor~ method
getChildren(): phasor~ ==> [[174, '+~', 0]]
child exists, appending 174
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 173 phasor~
173 is connected to [(174, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 174 +~ 0
>>>> 174 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173]
PLACEMENT
place(): 174 => 10378.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 174 +~ method
getChildren(): +~ ==> [[175, 'cos~', 0]]
child exists, appending 175
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 174 +~
174 is connected to [(175, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 175 cos~ 0
>>>> 175 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174]
PLACEMENT
place(): 175 => 10378.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 175 cos~ method
getChildren(): cos~ ==> [[176, '*~', 0]]
child exists, appending 176
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 175 cos~
175 is connected to [(176, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 176 *~ 0
>>>> 176 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175]
PLACEMENT
place(): 176 => 10378.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 176 *~ method
getChildren(): *~ ==> [[177, '-~', 0]]
child exists, appending 177
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 176 *~
176 is connected to [(177, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 177 -~ 0
>>>> 177 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176]
PLACEMENT
place(): 177 => 10378.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 177 -~ method
getChildren(): -~ ==> [[178, 'clip~', 0]]
child exists, appending 178
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 177 -~
177 is connected to [(178, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 178 clip~ 0
>>>> 178 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177]
PLACEMENT
place(): 178 => 10378.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 178 clip~ method
getChildren(): clip~ ==> [[179, '*~', 0]]
child exists, appending 179
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 178 clip~
178 is connected to [(179, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 179 *~ 0
>>>> 179 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178]
PLACEMENT
place(): 179 => 10378.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 179 *~ method
getChildren(): *~ ==> [[180, '*~', 0]]
child exists, appending 180
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 179 *~
179 is connected to [(180, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 180 *~ 0
>>>> 180 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179]
PLACEMENT
place(): 180 => 10378.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 180 *~ method
getChildren(): *~ ==> [[181, '*~', 0], [182, '*~', 0]]
child exists, appending 181
child exists, appending 182
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 180 *~
180 is connected to [(181, 0), (182, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 181 *~ 0
>>>> 181 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180]
PLACEMENT
place(): 181 => 10378.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 181 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 181 0
10378 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 10378 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 183), ('-~', 184), ('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 183 => 10810.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 183 sig~ NoneType
getChildren(): sig~ ==> [[184, '-~', 0]]
child exists, appending 184
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 183 sig~
183 is connected to [(184, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 184 -~ 0
>>>> 184 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183]
PLACEMENT
place(): 184 => 10810.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 184 -~ method
getChildren(): -~ ==> [[180, '*~', 0]]
180 is not connected to anybody.
relocator() 184 180
10810 58 and 10378 322
getChildren(): [181, 182]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 180 => 10378 322
--> Relocated to: 10378 322 and 10810 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 186), ('*~', 187), ('*~', 188), ('*~', 189), ('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 186 => 11242.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 186 *~ NoneType
getChildren(): *~ ==> [[187, '*~', 0], [187, '*~', 0]]
child exists, appending 187
187 is not connected to anybody.
But, 187 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186]
place(): 187 => 11242.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 186 *~
186 is connected to [(187, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 187 *~ 0
>>>> 187 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187]
PLACEMENT
place(): 187 => 11242.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 187 *~ method
getChildren(): *~ ==> [[188, '*~', 0], [188, '*~', 0]]
child exists, appending 188
188 is not connected to anybody.
But, 188 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187]
place(): 188 => 11242.0 82
relocator() 187 188
11242 82 and 11242 82
getChildren(): [189, 189]
EQUAL_Y
move(): *~
place(): 188 => 11242 106
--> Relocated to: 11242 106 and 11242 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 187 *~
187 is connected to [(188, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 188 *~ 0
>>>> 188 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188]
PLACEMENT
place(): 188 => 11242.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 188 *~ method
getChildren(): *~ ==> [[189, '*~', 0], [189, '*~', 0]]
child exists, appending 189
189 is not connected to anybody.
But, 189 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188]
place(): 189 => 11242.0 130
relocator() 188 189
11242 130 and 11242 130
getChildren(): [184]
EQUAL_Y
move(): *~
place(): 189 => 11242 154
--> Relocated to: 11242 154 and 11242 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 188 *~
188 is connected to [(189, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 189 *~ 0
>>>> 189 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189]
PLACEMENT
place(): 189 => 11242.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 189 *~ method
getChildren(): *~ ==> [[184, '-~', 0]]
184 is not connected to anybody.
relocator() 189 184
11242 178 and 10810 58
getChildren(): [180]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 184 => 10810 58
--> Relocated to: 10810 58 and 11242 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 190), ('lop~', 191), ('*~', 192), ('+~', 193), ('phasor~', 194), ('+~', 195), ('cos~', 196), ('*~', 197), ('-~', 198), ('clip~', 199), ('*~', 200), ('*~', 201), ('*~', 202), ('*~', 203), ('sig~', 204), ('-~', 205), ('*~', 206), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 190 => 11674.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 190 phasor~ NoneType
getChildren(): phasor~ ==> [[191, 'lop~', 0]]
child exists, appending 191
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 190 phasor~
190 is connected to [(191, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 191 lop~ 0
>>>> 191 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190]
PLACEMENT
place(): 191 => 11674.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 191 lop~ method
getChildren(): lop~ ==> [[192, '*~', 0], [206, '*~', 0], [206, '*~', 0]]
child exists, appending 192
child exists, appending 206
206 is not connected to anybody.
But, 206 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191]
place(): 206 => 11674.0 58
relocator() 191 206
11674 58 and 11674 58
getChildren(): [207, 207]
EQUAL_Y
move(): *~
place(): 206 => 11674 82
--> Relocated to: 11674 82 and 11674 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 191 lop~
191 is connected to [(192, 0), (206, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 192 *~ 0
>>>> 192 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206]
PLACEMENT
place(): 192 => 11674.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 192 *~ method
getChildren(): *~ ==> [[193, '+~', 0]]
child exists, appending 193
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 192 *~
192 is connected to [(193, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 193 +~ 0
>>>> 193 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192]
PLACEMENT
place(): 193 => 11674.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 193 +~ method
getChildren(): +~ ==> [[194, 'phasor~', 0]]
child exists, appending 194
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 193 +~
193 is connected to [(194, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 194 phasor~ 0
>>>> 194 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193]
PLACEMENT
place(): 194 => 11674.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 194 phasor~ method
getChildren(): phasor~ ==> [[195, '+~', 0]]
child exists, appending 195
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 194 phasor~
194 is connected to [(195, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 195 +~ 0
>>>> 195 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194]
PLACEMENT
place(): 195 => 11674.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 195 +~ method
getChildren(): +~ ==> [[196, 'cos~', 0]]
child exists, appending 196
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 195 +~
195 is connected to [(196, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 196 cos~ 0
>>>> 196 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195]
PLACEMENT
place(): 196 => 11674.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 196 cos~ method
getChildren(): cos~ ==> [[197, '*~', 0]]
child exists, appending 197
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 196 cos~
196 is connected to [(197, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 197 *~ 0
>>>> 197 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196]
PLACEMENT
place(): 197 => 11674.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 197 *~ method
getChildren(): *~ ==> [[198, '-~', 0]]
child exists, appending 198
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 197 *~
197 is connected to [(198, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 198 -~ 0
>>>> 198 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197]
PLACEMENT
place(): 198 => 11674.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 198 -~ method
getChildren(): -~ ==> [[199, 'clip~', 0]]
child exists, appending 199
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 198 -~
198 is connected to [(199, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 199 clip~ 0
>>>> 199 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198]
PLACEMENT
place(): 199 => 11674.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 199 clip~ method
getChildren(): clip~ ==> [[200, '*~', 0]]
child exists, appending 200
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 199 clip~
199 is connected to [(200, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 200 *~ 0
>>>> 200 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199]
PLACEMENT
place(): 200 => 11674.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 200 *~ method
getChildren(): *~ ==> [[201, '*~', 0]]
child exists, appending 201
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 200 *~
200 is connected to [(201, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 201 *~ 0
>>>> 201 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200]
PLACEMENT
place(): 201 => 11674.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 201 *~ method
getChildren(): *~ ==> [[202, '*~', 0], [203, '*~', 0]]
child exists, appending 202
child exists, appending 203
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 201 *~
201 is connected to [(202, 0), (203, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 202 *~ 0
>>>> 202 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201]
PLACEMENT
place(): 202 => 11674.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 202 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 202 0
11674 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 11674 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 204), ('-~', 205), ('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 204 => 12106.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 204 sig~ NoneType
getChildren(): sig~ ==> [[205, '-~', 0]]
child exists, appending 205
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 204 sig~
204 is connected to [(205, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 205 -~ 0
>>>> 205 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204]
PLACEMENT
place(): 205 => 12106.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 205 -~ method
getChildren(): -~ ==> [[201, '*~', 0]]
201 is not connected to anybody.
relocator() 205 201
12106 58 and 11674 322
getChildren(): [202, 203]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 201 => 11674 322
--> Relocated to: 11674 322 and 12106 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 207), ('*~', 208), ('*~', 209), ('*~', 210), ('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 207 => 12538.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 207 *~ NoneType
getChildren(): *~ ==> [[208, '*~', 0], [208, '*~', 0]]
child exists, appending 208
208 is not connected to anybody.
But, 208 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207]
place(): 208 => 12538.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 207 *~
207 is connected to [(208, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 208 *~ 0
>>>> 208 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208]
PLACEMENT
place(): 208 => 12538.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 208 *~ method
getChildren(): *~ ==> [[209, '*~', 0], [209, '*~', 0]]
child exists, appending 209
209 is not connected to anybody.
But, 209 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208]
place(): 209 => 12538.0 82
relocator() 208 209
12538 82 and 12538 82
getChildren(): [210, 210]
EQUAL_Y
move(): *~
place(): 209 => 12538 106
--> Relocated to: 12538 106 and 12538 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 208 *~
208 is connected to [(209, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 209 *~ 0
>>>> 209 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209]
PLACEMENT
place(): 209 => 12538.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 209 *~ method
getChildren(): *~ ==> [[210, '*~', 0], [210, '*~', 0]]
child exists, appending 210
210 is not connected to anybody.
But, 210 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209]
place(): 210 => 12538.0 130
relocator() 209 210
12538 130 and 12538 130
getChildren(): [205]
EQUAL_Y
move(): *~
place(): 210 => 12538 154
--> Relocated to: 12538 154 and 12538 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 209 *~
209 is connected to [(210, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 210 *~ 0
>>>> 210 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210]
PLACEMENT
place(): 210 => 12538.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 210 *~ method
getChildren(): *~ ==> [[205, '-~', 0]]
205 is not connected to anybody.
relocator() 210 205
12538 178 and 12106 58
getChildren(): [201]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 205 => 12106 58
--> Relocated to: 12106 58 and 12538 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 211), ('lop~', 212), ('*~', 213), ('+~', 214), ('phasor~', 215), ('+~', 216), ('cos~', 217), ('*~', 218), ('-~', 219), ('clip~', 220), ('*~', 221), ('*~', 222), ('*~', 223), ('*~', 224), ('sig~', 225), ('-~', 226), ('*~', 227), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 211 => 12970.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 211 phasor~ NoneType
getChildren(): phasor~ ==> [[212, 'lop~', 0]]
child exists, appending 212
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 211 phasor~
211 is connected to [(212, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 212 lop~ 0
>>>> 212 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211]
PLACEMENT
place(): 212 => 12970.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 212 lop~ method
getChildren(): lop~ ==> [[213, '*~', 0], [227, '*~', 0], [227, '*~', 0]]
child exists, appending 213
child exists, appending 227
227 is not connected to anybody.
But, 227 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212]
place(): 227 => 12970.0 58
relocator() 212 227
12970 58 and 12970 58
getChildren(): [228, 228]
EQUAL_Y
move(): *~
place(): 227 => 12970 82
--> Relocated to: 12970 82 and 12970 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 212 lop~
212 is connected to [(213, 0), (227, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 213 *~ 0
>>>> 213 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227]
PLACEMENT
place(): 213 => 12970.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 213 *~ method
getChildren(): *~ ==> [[214, '+~', 0]]
child exists, appending 214
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 213 *~
213 is connected to [(214, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 214 +~ 0
>>>> 214 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213]
PLACEMENT
place(): 214 => 12970.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 214 +~ method
getChildren(): +~ ==> [[215, 'phasor~', 0]]
child exists, appending 215
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 214 +~
214 is connected to [(215, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 215 phasor~ 0
>>>> 215 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214]
PLACEMENT
place(): 215 => 12970.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 215 phasor~ method
getChildren(): phasor~ ==> [[216, '+~', 0]]
child exists, appending 216
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 215 phasor~
215 is connected to [(216, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 216 +~ 0
>>>> 216 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215]
PLACEMENT
place(): 216 => 12970.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 216 +~ method
getChildren(): +~ ==> [[217, 'cos~', 0]]
child exists, appending 217
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 216 +~
216 is connected to [(217, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 217 cos~ 0
>>>> 217 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216]
PLACEMENT
place(): 217 => 12970.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 217 cos~ method
getChildren(): cos~ ==> [[218, '*~', 0]]
child exists, appending 218
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 217 cos~
217 is connected to [(218, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 218 *~ 0
>>>> 218 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217]
PLACEMENT
place(): 218 => 12970.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 218 *~ method
getChildren(): *~ ==> [[219, '-~', 0]]
child exists, appending 219
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 218 *~
218 is connected to [(219, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 219 -~ 0
>>>> 219 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218]
PLACEMENT
place(): 219 => 12970.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 219 -~ method
getChildren(): -~ ==> [[220, 'clip~', 0]]
child exists, appending 220
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 219 -~
219 is connected to [(220, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 220 clip~ 0
>>>> 220 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219]
PLACEMENT
place(): 220 => 12970.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 220 clip~ method
getChildren(): clip~ ==> [[221, '*~', 0]]
child exists, appending 221
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 220 clip~
220 is connected to [(221, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 221 *~ 0
>>>> 221 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220]
PLACEMENT
place(): 221 => 12970.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 221 *~ method
getChildren(): *~ ==> [[222, '*~', 0]]
child exists, appending 222
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 221 *~
221 is connected to [(222, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 222 *~ 0
>>>> 222 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221]
PLACEMENT
place(): 222 => 12970.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 222 *~ method
getChildren(): *~ ==> [[223, '*~', 0], [224, '*~', 0]]
child exists, appending 223
child exists, appending 224
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 222 *~
222 is connected to [(223, 0), (224, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 223 *~ 0
>>>> 223 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222]
PLACEMENT
place(): 223 => 12970.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 223 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 223 0
12970 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 12970 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 225), ('-~', 226), ('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 225 => 13402.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 225 sig~ NoneType
getChildren(): sig~ ==> [[226, '-~', 0]]
child exists, appending 226
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 225 sig~
225 is connected to [(226, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 226 -~ 0
>>>> 226 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225]
PLACEMENT
place(): 226 => 13402.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 226 -~ method
getChildren(): -~ ==> [[222, '*~', 0]]
222 is not connected to anybody.
relocator() 226 222
13402 58 and 12970 322
getChildren(): [223, 224]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 222 => 12970 322
--> Relocated to: 12970 322 and 13402 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 228), ('*~', 229), ('*~', 230), ('*~', 231), ('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 228 => 13834.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 228 *~ NoneType
getChildren(): *~ ==> [[229, '*~', 0], [229, '*~', 0]]
child exists, appending 229
229 is not connected to anybody.
But, 229 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228]
place(): 229 => 13834.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 228 *~
228 is connected to [(229, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 229 *~ 0
>>>> 229 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229]
PLACEMENT
place(): 229 => 13834.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 229 *~ method
getChildren(): *~ ==> [[230, '*~', 0], [230, '*~', 0]]
child exists, appending 230
230 is not connected to anybody.
But, 230 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229]
place(): 230 => 13834.0 82
relocator() 229 230
13834 82 and 13834 82
getChildren(): [231, 231]
EQUAL_Y
move(): *~
place(): 230 => 13834 106
--> Relocated to: 13834 106 and 13834 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 229 *~
229 is connected to [(230, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 230 *~ 0
>>>> 230 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230]
PLACEMENT
place(): 230 => 13834.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 230 *~ method
getChildren(): *~ ==> [[231, '*~', 0], [231, '*~', 0]]
child exists, appending 231
231 is not connected to anybody.
But, 231 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230]
place(): 231 => 13834.0 130
relocator() 230 231
13834 130 and 13834 130
getChildren(): [226]
EQUAL_Y
move(): *~
place(): 231 => 13834 154
--> Relocated to: 13834 154 and 13834 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 230 *~
230 is connected to [(231, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 231 *~ 0
>>>> 231 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231]
PLACEMENT
place(): 231 => 13834.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 231 *~ method
getChildren(): *~ ==> [[226, '-~', 0]]
226 is not connected to anybody.
relocator() 231 226
13834 178 and 13402 58
getChildren(): [222]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 226 => 13402 58
--> Relocated to: 13402 58 and 13834 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 232), ('lop~', 233), ('*~', 234), ('+~', 235), ('phasor~', 236), ('+~', 237), ('cos~', 238), ('*~', 239), ('-~', 240), ('clip~', 241), ('*~', 242), ('*~', 243), ('*~', 244), ('*~', 245), ('sig~', 246), ('-~', 247), ('*~', 248), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 232 => 14266.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 232 phasor~ NoneType
getChildren(): phasor~ ==> [[233, 'lop~', 0]]
child exists, appending 233
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 232 phasor~
232 is connected to [(233, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 233 lop~ 0
>>>> 233 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232]
PLACEMENT
place(): 233 => 14266.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 233 lop~ method
getChildren(): lop~ ==> [[234, '*~', 0], [248, '*~', 0], [248, '*~', 0]]
child exists, appending 234
child exists, appending 248
248 is not connected to anybody.
But, 248 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233]
place(): 248 => 14266.0 58
relocator() 233 248
14266 58 and 14266 58
getChildren(): [249, 249]
EQUAL_Y
move(): *~
place(): 248 => 14266 82
--> Relocated to: 14266 82 and 14266 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 233 lop~
233 is connected to [(234, 0), (248, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 234 *~ 0
>>>> 234 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248]
PLACEMENT
place(): 234 => 14266.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 234 *~ method
getChildren(): *~ ==> [[235, '+~', 0]]
child exists, appending 235
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 234 *~
234 is connected to [(235, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 235 +~ 0
>>>> 235 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234]
PLACEMENT
place(): 235 => 14266.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 235 +~ method
getChildren(): +~ ==> [[236, 'phasor~', 0]]
child exists, appending 236
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 235 +~
235 is connected to [(236, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 236 phasor~ 0
>>>> 236 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235]
PLACEMENT
place(): 236 => 14266.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 236 phasor~ method
getChildren(): phasor~ ==> [[237, '+~', 0]]
child exists, appending 237
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 236 phasor~
236 is connected to [(237, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 237 +~ 0
>>>> 237 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236]
PLACEMENT
place(): 237 => 14266.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 237 +~ method
getChildren(): +~ ==> [[238, 'cos~', 0]]
child exists, appending 238
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 237 +~
237 is connected to [(238, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 238 cos~ 0
>>>> 238 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237]
PLACEMENT
place(): 238 => 14266.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 238 cos~ method
getChildren(): cos~ ==> [[239, '*~', 0]]
child exists, appending 239
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 238 cos~
238 is connected to [(239, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 239 *~ 0
>>>> 239 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238]
PLACEMENT
place(): 239 => 14266.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 239 *~ method
getChildren(): *~ ==> [[240, '-~', 0]]
child exists, appending 240
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 239 *~
239 is connected to [(240, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 240 -~ 0
>>>> 240 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239]
PLACEMENT
place(): 240 => 14266.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 240 -~ method
getChildren(): -~ ==> [[241, 'clip~', 0]]
child exists, appending 241
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 240 -~
240 is connected to [(241, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 241 clip~ 0
>>>> 241 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240]
PLACEMENT
place(): 241 => 14266.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 241 clip~ method
getChildren(): clip~ ==> [[242, '*~', 0]]
child exists, appending 242
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 241 clip~
241 is connected to [(242, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 242 *~ 0
>>>> 242 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241]
PLACEMENT
place(): 242 => 14266.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 242 *~ method
getChildren(): *~ ==> [[243, '*~', 0]]
child exists, appending 243
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 242 *~
242 is connected to [(243, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 243 *~ 0
>>>> 243 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242]
PLACEMENT
place(): 243 => 14266.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 243 *~ method
getChildren(): *~ ==> [[244, '*~', 0], [245, '*~', 0]]
child exists, appending 244
child exists, appending 245
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 243 *~
243 is connected to [(244, 0), (245, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 244 *~ 0
>>>> 244 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243]
PLACEMENT
place(): 244 => 14266.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 244 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 244 0
14266 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 14266 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 246), ('-~', 247), ('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 246 => 14698.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 246 sig~ NoneType
getChildren(): sig~ ==> [[247, '-~', 0]]
child exists, appending 247
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 246 sig~
246 is connected to [(247, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 247 -~ 0
>>>> 247 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246]
PLACEMENT
place(): 247 => 14698.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 247 -~ method
getChildren(): -~ ==> [[243, '*~', 0]]
243 is not connected to anybody.
relocator() 247 243
14698 58 and 14266 322
getChildren(): [244, 245]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 243 => 14266 322
--> Relocated to: 14266 322 and 14698 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 249), ('*~', 250), ('*~', 251), ('*~', 252), ('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 249 => 15130.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 249 *~ NoneType
getChildren(): *~ ==> [[250, '*~', 0], [250, '*~', 0]]
child exists, appending 250
250 is not connected to anybody.
But, 250 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249]
place(): 250 => 15130.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 249 *~
249 is connected to [(250, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 250 *~ 0
>>>> 250 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250]
PLACEMENT
place(): 250 => 15130.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 250 *~ method
getChildren(): *~ ==> [[251, '*~', 0], [251, '*~', 0]]
child exists, appending 251
251 is not connected to anybody.
But, 251 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250]
place(): 251 => 15130.0 82
relocator() 250 251
15130 82 and 15130 82
getChildren(): [252, 252]
EQUAL_Y
move(): *~
place(): 251 => 15130 106
--> Relocated to: 15130 106 and 15130 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 250 *~
250 is connected to [(251, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 251 *~ 0
>>>> 251 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251]
PLACEMENT
place(): 251 => 15130.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 251 *~ method
getChildren(): *~ ==> [[252, '*~', 0], [252, '*~', 0]]
child exists, appending 252
252 is not connected to anybody.
But, 252 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251]
place(): 252 => 15130.0 130
relocator() 251 252
15130 130 and 15130 130
getChildren(): [247]
EQUAL_Y
move(): *~
place(): 252 => 15130 154
--> Relocated to: 15130 154 and 15130 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 251 *~
251 is connected to [(252, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 252 *~ 0
>>>> 252 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252]
PLACEMENT
place(): 252 => 15130.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 252 *~ method
getChildren(): *~ ==> [[247, '-~', 0]]
247 is not connected to anybody.
relocator() 252 247
15130 178 and 14698 58
getChildren(): [243]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 247 => 14698 58
--> Relocated to: 14698 58 and 15130 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 253), ('lop~', 254), ('*~', 255), ('+~', 256), ('phasor~', 257), ('+~', 258), ('cos~', 259), ('*~', 260), ('-~', 261), ('clip~', 262), ('*~', 263), ('*~', 264), ('*~', 265), ('*~', 266), ('sig~', 267), ('-~', 268), ('*~', 269), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 253 => 15562.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 253 phasor~ NoneType
getChildren(): phasor~ ==> [[254, 'lop~', 0]]
child exists, appending 254
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 253 phasor~
253 is connected to [(254, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 254 lop~ 0
>>>> 254 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253]
PLACEMENT
place(): 254 => 15562.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 254 lop~ method
getChildren(): lop~ ==> [[255, '*~', 0], [269, '*~', 0], [269, '*~', 0]]
child exists, appending 255
child exists, appending 269
269 is not connected to anybody.
But, 269 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254]
place(): 269 => 15562.0 58
relocator() 254 269
15562 58 and 15562 58
getChildren(): [270, 270]
EQUAL_Y
move(): *~
place(): 269 => 15562 82
--> Relocated to: 15562 82 and 15562 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 254 lop~
254 is connected to [(255, 0), (269, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 255 *~ 0
>>>> 255 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269]
PLACEMENT
place(): 255 => 15562.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 255 *~ method
getChildren(): *~ ==> [[256, '+~', 0]]
child exists, appending 256
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 255 *~
255 is connected to [(256, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 256 +~ 0
>>>> 256 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255]
PLACEMENT
place(): 256 => 15562.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 256 +~ method
getChildren(): +~ ==> [[257, 'phasor~', 0]]
child exists, appending 257
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 256 +~
256 is connected to [(257, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 257 phasor~ 0
>>>> 257 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256]
PLACEMENT
place(): 257 => 15562.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 257 phasor~ method
getChildren(): phasor~ ==> [[258, '+~', 0]]
child exists, appending 258
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 257 phasor~
257 is connected to [(258, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 258 +~ 0
>>>> 258 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257]
PLACEMENT
place(): 258 => 15562.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 258 +~ method
getChildren(): +~ ==> [[259, 'cos~', 0]]
child exists, appending 259
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 258 +~
258 is connected to [(259, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 259 cos~ 0
>>>> 259 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258]
PLACEMENT
place(): 259 => 15562.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 259 cos~ method
getChildren(): cos~ ==> [[260, '*~', 0]]
child exists, appending 260
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 259 cos~
259 is connected to [(260, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 260 *~ 0
>>>> 260 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259]
PLACEMENT
place(): 260 => 15562.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 260 *~ method
getChildren(): *~ ==> [[261, '-~', 0]]
child exists, appending 261
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 260 *~
260 is connected to [(261, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 261 -~ 0
>>>> 261 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260]
PLACEMENT
place(): 261 => 15562.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 261 -~ method
getChildren(): -~ ==> [[262, 'clip~', 0]]
child exists, appending 262
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 261 -~
261 is connected to [(262, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 262 clip~ 0
>>>> 262 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261]
PLACEMENT
place(): 262 => 15562.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 262 clip~ method
getChildren(): clip~ ==> [[263, '*~', 0]]
child exists, appending 263
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 262 clip~
262 is connected to [(263, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 263 *~ 0
>>>> 263 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262]
PLACEMENT
place(): 263 => 15562.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 263 *~ method
getChildren(): *~ ==> [[264, '*~', 0]]
child exists, appending 264
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 263 *~
263 is connected to [(264, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 264 *~ 0
>>>> 264 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263]
PLACEMENT
place(): 264 => 15562.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 264 *~ method
getChildren(): *~ ==> [[265, '*~', 0], [266, '*~', 0]]
child exists, appending 265
child exists, appending 266
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 264 *~
264 is connected to [(265, 0), (266, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 265 *~ 0
>>>> 265 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264]
PLACEMENT
place(): 265 => 15562.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 265 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 265 0
15562 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 15562 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 267), ('-~', 268), ('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 267 => 15994.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 267 sig~ NoneType
getChildren(): sig~ ==> [[268, '-~', 0]]
child exists, appending 268
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 267 sig~
267 is connected to [(268, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 268 -~ 0
>>>> 268 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267]
PLACEMENT
place(): 268 => 15994.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 268 -~ method
getChildren(): -~ ==> [[264, '*~', 0]]
264 is not connected to anybody.
relocator() 268 264
15994 58 and 15562 322
getChildren(): [265, 266]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 264 => 15562 322
--> Relocated to: 15562 322 and 15994 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 270), ('*~', 271), ('*~', 272), ('*~', 273), ('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 270 => 16426.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 270 *~ NoneType
getChildren(): *~ ==> [[271, '*~', 0], [271, '*~', 0]]
child exists, appending 271
271 is not connected to anybody.
But, 271 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270]
place(): 271 => 16426.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 270 *~
270 is connected to [(271, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 271 *~ 0
>>>> 271 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271]
PLACEMENT
place(): 271 => 16426.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 271 *~ method
getChildren(): *~ ==> [[272, '*~', 0], [272, '*~', 0]]
child exists, appending 272
272 is not connected to anybody.
But, 272 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271]
place(): 272 => 16426.0 82
relocator() 271 272
16426 82 and 16426 82
getChildren(): [273, 273]
EQUAL_Y
move(): *~
place(): 272 => 16426 106
--> Relocated to: 16426 106 and 16426 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 271 *~
271 is connected to [(272, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 272 *~ 0
>>>> 272 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272]
PLACEMENT
place(): 272 => 16426.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 272 *~ method
getChildren(): *~ ==> [[273, '*~', 0], [273, '*~', 0]]
child exists, appending 273
273 is not connected to anybody.
But, 273 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272]
place(): 273 => 16426.0 130
relocator() 272 273
16426 130 and 16426 130
getChildren(): [268]
EQUAL_Y
move(): *~
place(): 273 => 16426 154
--> Relocated to: 16426 154 and 16426 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 272 *~
272 is connected to [(273, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 273 *~ 0
>>>> 273 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273]
PLACEMENT
place(): 273 => 16426.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 273 *~ method
getChildren(): *~ ==> [[268, '-~', 0]]
268 is not connected to anybody.
relocator() 273 268
16426 178 and 15994 58
getChildren(): [264]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 268 => 15994 58
--> Relocated to: 15994 58 and 16426 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 274), ('lop~', 275), ('*~', 276), ('+~', 277), ('phasor~', 278), ('+~', 279), ('cos~', 280), ('*~', 281), ('-~', 282), ('clip~', 283), ('*~', 284), ('*~', 285), ('*~', 286), ('*~', 287), ('sig~', 288), ('-~', 289), ('*~', 290), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 274 => 16858.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 274 phasor~ NoneType
getChildren(): phasor~ ==> [[275, 'lop~', 0]]
child exists, appending 275
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 274 phasor~
274 is connected to [(275, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 275 lop~ 0
>>>> 275 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274]
PLACEMENT
place(): 275 => 16858.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 275 lop~ method
getChildren(): lop~ ==> [[276, '*~', 0], [290, '*~', 0], [290, '*~', 0]]
child exists, appending 276
child exists, appending 290
290 is not connected to anybody.
But, 290 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275]
place(): 290 => 16858.0 58
relocator() 275 290
16858 58 and 16858 58
getChildren(): [291, 291]
EQUAL_Y
move(): *~
place(): 290 => 16858 82
--> Relocated to: 16858 82 and 16858 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 275 lop~
275 is connected to [(276, 0), (290, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 276 *~ 0
>>>> 276 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290]
PLACEMENT
place(): 276 => 16858.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 276 *~ method
getChildren(): *~ ==> [[277, '+~', 0]]
child exists, appending 277
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 276 *~
276 is connected to [(277, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 277 +~ 0
>>>> 277 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276]
PLACEMENT
place(): 277 => 16858.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 277 +~ method
getChildren(): +~ ==> [[278, 'phasor~', 0]]
child exists, appending 278
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 277 +~
277 is connected to [(278, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 278 phasor~ 0
>>>> 278 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277]
PLACEMENT
place(): 278 => 16858.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 278 phasor~ method
getChildren(): phasor~ ==> [[279, '+~', 0]]
child exists, appending 279
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 278 phasor~
278 is connected to [(279, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 279 +~ 0
>>>> 279 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278]
PLACEMENT
place(): 279 => 16858.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 279 +~ method
getChildren(): +~ ==> [[280, 'cos~', 0]]
child exists, appending 280
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 279 +~
279 is connected to [(280, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 280 cos~ 0
>>>> 280 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279]
PLACEMENT
place(): 280 => 16858.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 280 cos~ method
getChildren(): cos~ ==> [[281, '*~', 0]]
child exists, appending 281
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 280 cos~
280 is connected to [(281, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 281 *~ 0
>>>> 281 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280]
PLACEMENT
place(): 281 => 16858.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 281 *~ method
getChildren(): *~ ==> [[282, '-~', 0]]
child exists, appending 282
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 281 *~
281 is connected to [(282, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 282 -~ 0
>>>> 282 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281]
PLACEMENT
place(): 282 => 16858.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 282 -~ method
getChildren(): -~ ==> [[283, 'clip~', 0]]
child exists, appending 283
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 282 -~
282 is connected to [(283, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 283 clip~ 0
>>>> 283 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282]
PLACEMENT
place(): 283 => 16858.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 283 clip~ method
getChildren(): clip~ ==> [[284, '*~', 0]]
child exists, appending 284
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 283 clip~
283 is connected to [(284, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 284 *~ 0
>>>> 284 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283]
PLACEMENT
place(): 284 => 16858.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 284 *~ method
getChildren(): *~ ==> [[285, '*~', 0]]
child exists, appending 285
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 284 *~
284 is connected to [(285, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 285 *~ 0
>>>> 285 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284]
PLACEMENT
place(): 285 => 16858.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 285 *~ method
getChildren(): *~ ==> [[286, '*~', 0], [287, '*~', 0]]
child exists, appending 286
child exists, appending 287
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 285 *~
285 is connected to [(286, 0), (287, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 286 *~ 0
>>>> 286 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285]
PLACEMENT
place(): 286 => 16858.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 286 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 286 0
16858 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 16858 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 288), ('-~', 289), ('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 288 => 17290.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 288 sig~ NoneType
getChildren(): sig~ ==> [[289, '-~', 0]]
child exists, appending 289
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 288 sig~
288 is connected to [(289, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 289 -~ 0
>>>> 289 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288]
PLACEMENT
place(): 289 => 17290.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 289 -~ method
getChildren(): -~ ==> [[285, '*~', 0]]
285 is not connected to anybody.
relocator() 289 285
17290 58 and 16858 322
getChildren(): [286, 287]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 285 => 16858 322
--> Relocated to: 16858 322 and 17290 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 291), ('*~', 292), ('*~', 293), ('*~', 294), ('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 291 => 17722.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 291 *~ NoneType
getChildren(): *~ ==> [[292, '*~', 0], [292, '*~', 0]]
child exists, appending 292
292 is not connected to anybody.
But, 292 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291]
place(): 292 => 17722.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 291 *~
291 is connected to [(292, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 292 *~ 0
>>>> 292 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292]
PLACEMENT
place(): 292 => 17722.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 292 *~ method
getChildren(): *~ ==> [[293, '*~', 0], [293, '*~', 0]]
child exists, appending 293
293 is not connected to anybody.
But, 293 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292]
place(): 293 => 17722.0 82
relocator() 292 293
17722 82 and 17722 82
getChildren(): [294, 294]
EQUAL_Y
move(): *~
place(): 293 => 17722 106
--> Relocated to: 17722 106 and 17722 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 292 *~
292 is connected to [(293, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 293 *~ 0
>>>> 293 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293]
PLACEMENT
place(): 293 => 17722.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 293 *~ method
getChildren(): *~ ==> [[294, '*~', 0], [294, '*~', 0]]
child exists, appending 294
294 is not connected to anybody.
But, 294 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293]
place(): 294 => 17722.0 130
relocator() 293 294
17722 130 and 17722 130
getChildren(): [289]
EQUAL_Y
move(): *~
place(): 294 => 17722 154
--> Relocated to: 17722 154 and 17722 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 293 *~
293 is connected to [(294, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 294 *~ 0
>>>> 294 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294]
PLACEMENT
place(): 294 => 17722.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 294 *~ method
getChildren(): *~ ==> [[289, '-~', 0]]
289 is not connected to anybody.
relocator() 294 289
17722 178 and 17290 58
getChildren(): [285]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 289 => 17290 58
--> Relocated to: 17290 58 and 17722 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 295), ('lop~', 296), ('*~', 297), ('+~', 298), ('phasor~', 299), ('+~', 300), ('cos~', 301), ('*~', 302), ('-~', 303), ('clip~', 304), ('*~', 305), ('*~', 306), ('*~', 307), ('*~', 308), ('sig~', 309), ('-~', 310), ('*~', 311), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 295 => 18154.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 295 phasor~ NoneType
getChildren(): phasor~ ==> [[296, 'lop~', 0]]
child exists, appending 296
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 295 phasor~
295 is connected to [(296, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 296 lop~ 0
>>>> 296 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295]
PLACEMENT
place(): 296 => 18154.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 296 lop~ method
getChildren(): lop~ ==> [[297, '*~', 0], [311, '*~', 0], [311, '*~', 0]]
child exists, appending 297
child exists, appending 311
311 is not connected to anybody.
But, 311 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296]
place(): 311 => 18154.0 58
relocator() 296 311
18154 58 and 18154 58
getChildren(): [312, 312]
EQUAL_Y
move(): *~
place(): 311 => 18154 82
--> Relocated to: 18154 82 and 18154 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 296 lop~
296 is connected to [(297, 0), (311, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 297 *~ 0
>>>> 297 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311]
PLACEMENT
place(): 297 => 18154.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 297 *~ method
getChildren(): *~ ==> [[298, '+~', 0]]
child exists, appending 298
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 297 *~
297 is connected to [(298, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 298 +~ 0
>>>> 298 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297]
PLACEMENT
place(): 298 => 18154.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 298 +~ method
getChildren(): +~ ==> [[299, 'phasor~', 0]]
child exists, appending 299
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 298 +~
298 is connected to [(299, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 299 phasor~ 0
>>>> 299 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298]
PLACEMENT
place(): 299 => 18154.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 299 phasor~ method
getChildren(): phasor~ ==> [[300, '+~', 0]]
child exists, appending 300
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 299 phasor~
299 is connected to [(300, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 300 +~ 0
>>>> 300 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299]
PLACEMENT
place(): 300 => 18154.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 300 +~ method
getChildren(): +~ ==> [[301, 'cos~', 0]]
child exists, appending 301
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 300 +~
300 is connected to [(301, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 301 cos~ 0
>>>> 301 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300]
PLACEMENT
place(): 301 => 18154.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 301 cos~ method
getChildren(): cos~ ==> [[302, '*~', 0]]
child exists, appending 302
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 301 cos~
301 is connected to [(302, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 302 *~ 0
>>>> 302 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301]
PLACEMENT
place(): 302 => 18154.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 302 *~ method
getChildren(): *~ ==> [[303, '-~', 0]]
child exists, appending 303
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 302 *~
302 is connected to [(303, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 303 -~ 0
>>>> 303 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302]
PLACEMENT
place(): 303 => 18154.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 303 -~ method
getChildren(): -~ ==> [[304, 'clip~', 0]]
child exists, appending 304
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 303 -~
303 is connected to [(304, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 304 clip~ 0
>>>> 304 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303]
PLACEMENT
place(): 304 => 18154.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 304 clip~ method
getChildren(): clip~ ==> [[305, '*~', 0]]
child exists, appending 305
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 304 clip~
304 is connected to [(305, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 305 *~ 0
>>>> 305 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304]
PLACEMENT
place(): 305 => 18154.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 305 *~ method
getChildren(): *~ ==> [[306, '*~', 0]]
child exists, appending 306
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 305 *~
305 is connected to [(306, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 306 *~ 0
>>>> 306 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305]
PLACEMENT
place(): 306 => 18154.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 306 *~ method
getChildren(): *~ ==> [[307, '*~', 0], [308, '*~', 0]]
child exists, appending 307
child exists, appending 308
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 306 *~
306 is connected to [(307, 0), (308, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 307 *~ 0
>>>> 307 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306]
PLACEMENT
place(): 307 => 18154.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 307 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 307 0
18154 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 18154 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 309), ('-~', 310), ('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 309 => 18586.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 309 sig~ NoneType
getChildren(): sig~ ==> [[310, '-~', 0]]
child exists, appending 310
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 309 sig~
309 is connected to [(310, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 310 -~ 0
>>>> 310 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309]
PLACEMENT
place(): 310 => 18586.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 310 -~ method
getChildren(): -~ ==> [[306, '*~', 0]]
306 is not connected to anybody.
relocator() 310 306
18586 58 and 18154 322
getChildren(): [307, 308]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 306 => 18154 322
--> Relocated to: 18154 322 and 18586 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 312), ('*~', 313), ('*~', 314), ('*~', 315), ('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 312 => 19018.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 312 *~ NoneType
getChildren(): *~ ==> [[313, '*~', 0], [313, '*~', 0]]
child exists, appending 313
313 is not connected to anybody.
But, 313 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312]
place(): 313 => 19018.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 312 *~
312 is connected to [(313, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 313 *~ 0
>>>> 313 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313]
PLACEMENT
place(): 313 => 19018.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 313 *~ method
getChildren(): *~ ==> [[314, '*~', 0], [314, '*~', 0]]
child exists, appending 314
314 is not connected to anybody.
But, 314 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313]
place(): 314 => 19018.0 82
relocator() 313 314
19018 82 and 19018 82
getChildren(): [315, 315]
EQUAL_Y
move(): *~
place(): 314 => 19018 106
--> Relocated to: 19018 106 and 19018 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 313 *~
313 is connected to [(314, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 314 *~ 0
>>>> 314 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314]
PLACEMENT
place(): 314 => 19018.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 314 *~ method
getChildren(): *~ ==> [[315, '*~', 0], [315, '*~', 0]]
child exists, appending 315
315 is not connected to anybody.
But, 315 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314]
place(): 315 => 19018.0 130
relocator() 314 315
19018 130 and 19018 130
getChildren(): [310]
EQUAL_Y
move(): *~
place(): 315 => 19018 154
--> Relocated to: 19018 154 and 19018 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 314 *~
314 is connected to [(315, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 315 *~ 0
>>>> 315 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315]
PLACEMENT
place(): 315 => 19018.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 315 *~ method
getChildren(): *~ ==> [[310, '-~', 0]]
310 is not connected to anybody.
relocator() 315 310
19018 178 and 18586 58
getChildren(): [306]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 310 => 18586 58
--> Relocated to: 18586 58 and 19018 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 316), ('lop~', 317), ('*~', 318), ('+~', 319), ('phasor~', 320), ('+~', 321), ('cos~', 322), ('*~', 323), ('-~', 324), ('clip~', 325), ('*~', 326), ('*~', 327), ('*~', 328), ('*~', 329), ('sig~', 330), ('-~', 331), ('*~', 332), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 316 => 19450.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 316 phasor~ NoneType
getChildren(): phasor~ ==> [[317, 'lop~', 0]]
child exists, appending 317
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 316 phasor~
316 is connected to [(317, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 317 lop~ 0
>>>> 317 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316]
PLACEMENT
place(): 317 => 19450.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 317 lop~ method
getChildren(): lop~ ==> [[318, '*~', 0], [332, '*~', 0], [332, '*~', 0]]
child exists, appending 318
child exists, appending 332
332 is not connected to anybody.
But, 332 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317]
place(): 332 => 19450.0 58
relocator() 317 332
19450 58 and 19450 58
getChildren(): [333, 333]
EQUAL_Y
move(): *~
place(): 332 => 19450 82
--> Relocated to: 19450 82 and 19450 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 317 lop~
317 is connected to [(318, 0), (332, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 318 *~ 0
>>>> 318 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332]
PLACEMENT
place(): 318 => 19450.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 318 *~ method
getChildren(): *~ ==> [[319, '+~', 0]]
child exists, appending 319
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 318 *~
318 is connected to [(319, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 319 +~ 0
>>>> 319 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318]
PLACEMENT
place(): 319 => 19450.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 319 +~ method
getChildren(): +~ ==> [[320, 'phasor~', 0]]
child exists, appending 320
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 319 +~
319 is connected to [(320, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 320 phasor~ 0
>>>> 320 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319]
PLACEMENT
place(): 320 => 19450.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 320 phasor~ method
getChildren(): phasor~ ==> [[321, '+~', 0]]
child exists, appending 321
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 320 phasor~
320 is connected to [(321, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 321 +~ 0
>>>> 321 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320]
PLACEMENT
place(): 321 => 19450.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 321 +~ method
getChildren(): +~ ==> [[322, 'cos~', 0]]
child exists, appending 322
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 321 +~
321 is connected to [(322, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 322 cos~ 0
>>>> 322 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321]
PLACEMENT
place(): 322 => 19450.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 322 cos~ method
getChildren(): cos~ ==> [[323, '*~', 0]]
child exists, appending 323
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 322 cos~
322 is connected to [(323, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 323 *~ 0
>>>> 323 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322]
PLACEMENT
place(): 323 => 19450.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 323 *~ method
getChildren(): *~ ==> [[324, '-~', 0]]
child exists, appending 324
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 323 *~
323 is connected to [(324, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 324 -~ 0
>>>> 324 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323]
PLACEMENT
place(): 324 => 19450.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 324 -~ method
getChildren(): -~ ==> [[325, 'clip~', 0]]
child exists, appending 325
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 324 -~
324 is connected to [(325, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 325 clip~ 0
>>>> 325 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324]
PLACEMENT
place(): 325 => 19450.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 325 clip~ method
getChildren(): clip~ ==> [[326, '*~', 0]]
child exists, appending 326
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 325 clip~
325 is connected to [(326, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 326 *~ 0
>>>> 326 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325]
PLACEMENT
place(): 326 => 19450.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 326 *~ method
getChildren(): *~ ==> [[327, '*~', 0]]
child exists, appending 327
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 326 *~
326 is connected to [(327, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 327 *~ 0
>>>> 327 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326]
PLACEMENT
place(): 327 => 19450.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 327 *~ method
getChildren(): *~ ==> [[328, '*~', 0], [329, '*~', 0]]
child exists, appending 328
child exists, appending 329
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 327 *~
327 is connected to [(328, 0), (329, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 328 *~ 0
>>>> 328 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327]
PLACEMENT
place(): 328 => 19450.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 328 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 328 0
19450 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 19450 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 330), ('-~', 331), ('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 330 => 19882.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 330 sig~ NoneType
getChildren(): sig~ ==> [[331, '-~', 0]]
child exists, appending 331
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 330 sig~
330 is connected to [(331, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 331 -~ 0
>>>> 331 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330]
PLACEMENT
place(): 331 => 19882.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 331 -~ method
getChildren(): -~ ==> [[327, '*~', 0]]
327 is not connected to anybody.
relocator() 331 327
19882 58 and 19450 322
getChildren(): [328, 329]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 327 => 19450 322
--> Relocated to: 19450 322 and 19882 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 333), ('*~', 334), ('*~', 335), ('*~', 336), ('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 333 => 20314.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 333 *~ NoneType
getChildren(): *~ ==> [[334, '*~', 0], [334, '*~', 0]]
child exists, appending 334
334 is not connected to anybody.
But, 334 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333]
place(): 334 => 20314.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 333 *~
333 is connected to [(334, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 334 *~ 0
>>>> 334 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334]
PLACEMENT
place(): 334 => 20314.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 334 *~ method
getChildren(): *~ ==> [[335, '*~', 0], [335, '*~', 0]]
child exists, appending 335
335 is not connected to anybody.
But, 335 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334]
place(): 335 => 20314.0 82
relocator() 334 335
20314 82 and 20314 82
getChildren(): [336, 336]
EQUAL_Y
move(): *~
place(): 335 => 20314 106
--> Relocated to: 20314 106 and 20314 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 334 *~
334 is connected to [(335, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 335 *~ 0
>>>> 335 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335]
PLACEMENT
place(): 335 => 20314.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 335 *~ method
getChildren(): *~ ==> [[336, '*~', 0], [336, '*~', 0]]
child exists, appending 336
336 is not connected to anybody.
But, 336 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335]
place(): 336 => 20314.0 130
relocator() 335 336
20314 130 and 20314 130
getChildren(): [331]
EQUAL_Y
move(): *~
place(): 336 => 20314 154
--> Relocated to: 20314 154 and 20314 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 335 *~
335 is connected to [(336, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 336 *~ 0
>>>> 336 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336]
PLACEMENT
place(): 336 => 20314.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 336 *~ method
getChildren(): *~ ==> [[331, '-~', 0]]
331 is not connected to anybody.
relocator() 336 331
20314 178 and 19882 58
getChildren(): [327]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 331 => 19882 58
--> Relocated to: 19882 58 and 20314 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 337), ('lop~', 338), ('*~', 339), ('+~', 340), ('phasor~', 341), ('+~', 342), ('cos~', 343), ('*~', 344), ('-~', 345), ('clip~', 346), ('*~', 347), ('*~', 348), ('*~', 349), ('*~', 350), ('sig~', 351), ('-~', 352), ('*~', 353), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 337 => 20746.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 337 phasor~ NoneType
getChildren(): phasor~ ==> [[338, 'lop~', 0]]
child exists, appending 338
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 337 phasor~
337 is connected to [(338, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 338 lop~ 0
>>>> 338 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337]
PLACEMENT
place(): 338 => 20746.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 338 lop~ method
getChildren(): lop~ ==> [[339, '*~', 0], [353, '*~', 0], [353, '*~', 0]]
child exists, appending 339
child exists, appending 353
353 is not connected to anybody.
But, 353 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338]
place(): 353 => 20746.0 58
relocator() 338 353
20746 58 and 20746 58
getChildren(): [354, 354]
EQUAL_Y
move(): *~
place(): 353 => 20746 82
--> Relocated to: 20746 82 and 20746 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 338 lop~
338 is connected to [(339, 0), (353, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 339 *~ 0
>>>> 339 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353]
PLACEMENT
place(): 339 => 20746.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 339 *~ method
getChildren(): *~ ==> [[340, '+~', 0]]
child exists, appending 340
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 339 *~
339 is connected to [(340, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 340 +~ 0
>>>> 340 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339]
PLACEMENT
place(): 340 => 20746.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 340 +~ method
getChildren(): +~ ==> [[341, 'phasor~', 0]]
child exists, appending 341
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 340 +~
340 is connected to [(341, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 341 phasor~ 0
>>>> 341 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340]
PLACEMENT
place(): 341 => 20746.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 341 phasor~ method
getChildren(): phasor~ ==> [[342, '+~', 0]]
child exists, appending 342
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 341 phasor~
341 is connected to [(342, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 342 +~ 0
>>>> 342 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341]
PLACEMENT
place(): 342 => 20746.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 342 +~ method
getChildren(): +~ ==> [[343, 'cos~', 0]]
child exists, appending 343
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 342 +~
342 is connected to [(343, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 343 cos~ 0
>>>> 343 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342]
PLACEMENT
place(): 343 => 20746.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 343 cos~ method
getChildren(): cos~ ==> [[344, '*~', 0]]
child exists, appending 344
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 343 cos~
343 is connected to [(344, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 344 *~ 0
>>>> 344 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343]
PLACEMENT
place(): 344 => 20746.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 344 *~ method
getChildren(): *~ ==> [[345, '-~', 0]]
child exists, appending 345
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 344 *~
344 is connected to [(345, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 345 -~ 0
>>>> 345 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344]
PLACEMENT
place(): 345 => 20746.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 345 -~ method
getChildren(): -~ ==> [[346, 'clip~', 0]]
child exists, appending 346
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 345 -~
345 is connected to [(346, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 346 clip~ 0
>>>> 346 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345]
PLACEMENT
place(): 346 => 20746.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 346 clip~ method
getChildren(): clip~ ==> [[347, '*~', 0]]
child exists, appending 347
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 346 clip~
346 is connected to [(347, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 347 *~ 0
>>>> 347 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346]
PLACEMENT
place(): 347 => 20746.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 347 *~ method
getChildren(): *~ ==> [[348, '*~', 0]]
child exists, appending 348
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 347 *~
347 is connected to [(348, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 348 *~ 0
>>>> 348 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347]
PLACEMENT
place(): 348 => 20746.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 348 *~ method
getChildren(): *~ ==> [[349, '*~', 0], [350, '*~', 0]]
child exists, appending 349
child exists, appending 350
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 348 *~
348 is connected to [(349, 0), (350, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 349 *~ 0
>>>> 349 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348]
PLACEMENT
place(): 349 => 20746.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 349 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 349 0
20746 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 20746 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 351), ('-~', 352), ('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 351 => 21178.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 351 sig~ NoneType
getChildren(): sig~ ==> [[352, '-~', 0]]
child exists, appending 352
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 351 sig~
351 is connected to [(352, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 352 -~ 0
>>>> 352 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351]
PLACEMENT
place(): 352 => 21178.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 352 -~ method
getChildren(): -~ ==> [[348, '*~', 0]]
348 is not connected to anybody.
relocator() 352 348
21178 58 and 20746 322
getChildren(): [349, 350]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 348 => 20746 322
--> Relocated to: 20746 322 and 21178 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 354), ('*~', 355), ('*~', 356), ('*~', 357), ('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 354 => 21610.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 354 *~ NoneType
getChildren(): *~ ==> [[355, '*~', 0], [355, '*~', 0]]
child exists, appending 355
355 is not connected to anybody.
But, 355 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354]
place(): 355 => 21610.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 354 *~
354 is connected to [(355, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 355 *~ 0
>>>> 355 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355]
PLACEMENT
place(): 355 => 21610.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 355 *~ method
getChildren(): *~ ==> [[356, '*~', 0], [356, '*~', 0]]
child exists, appending 356
356 is not connected to anybody.
But, 356 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355]
place(): 356 => 21610.0 82
relocator() 355 356
21610 82 and 21610 82
getChildren(): [357, 357]
EQUAL_Y
move(): *~
place(): 356 => 21610 106
--> Relocated to: 21610 106 and 21610 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 355 *~
355 is connected to [(356, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 356 *~ 0
>>>> 356 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356]
PLACEMENT
place(): 356 => 21610.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 356 *~ method
getChildren(): *~ ==> [[357, '*~', 0], [357, '*~', 0]]
child exists, appending 357
357 is not connected to anybody.
But, 357 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356]
place(): 357 => 21610.0 130
relocator() 356 357
21610 130 and 21610 130
getChildren(): [352]
EQUAL_Y
move(): *~
place(): 357 => 21610 154
--> Relocated to: 21610 154 and 21610 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 356 *~
356 is connected to [(357, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 357 *~ 0
>>>> 357 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357]
PLACEMENT
place(): 357 => 21610.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 357 *~ method
getChildren(): *~ ==> [[352, '-~', 0]]
352 is not connected to anybody.
relocator() 357 352
21610 178 and 21178 58
getChildren(): [348]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 352 => 21178 58
--> Relocated to: 21178 58 and 21610 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 358), ('lop~', 359), ('*~', 360), ('+~', 361), ('phasor~', 362), ('+~', 363), ('cos~', 364), ('*~', 365), ('-~', 366), ('clip~', 367), ('*~', 368), ('*~', 369), ('*~', 370), ('*~', 371), ('sig~', 372), ('-~', 373), ('*~', 374), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 358 => 22042.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 358 phasor~ NoneType
getChildren(): phasor~ ==> [[359, 'lop~', 0]]
child exists, appending 359
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 358 phasor~
358 is connected to [(359, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 359 lop~ 0
>>>> 359 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358]
PLACEMENT
place(): 359 => 22042.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 359 lop~ method
getChildren(): lop~ ==> [[360, '*~', 0], [374, '*~', 0], [374, '*~', 0]]
child exists, appending 360
child exists, appending 374
374 is not connected to anybody.
But, 374 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359]
place(): 374 => 22042.0 58
relocator() 359 374
22042 58 and 22042 58
getChildren(): [375, 375]
EQUAL_Y
move(): *~
place(): 374 => 22042 82
--> Relocated to: 22042 82 and 22042 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 359 lop~
359 is connected to [(360, 0), (374, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 360 *~ 0
>>>> 360 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374]
PLACEMENT
place(): 360 => 22042.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 360 *~ method
getChildren(): *~ ==> [[361, '+~', 0]]
child exists, appending 361
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 360 *~
360 is connected to [(361, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 361 +~ 0
>>>> 361 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360]
PLACEMENT
place(): 361 => 22042.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 361 +~ method
getChildren(): +~ ==> [[362, 'phasor~', 0]]
child exists, appending 362
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 361 +~
361 is connected to [(362, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 362 phasor~ 0
>>>> 362 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361]
PLACEMENT
place(): 362 => 22042.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 362 phasor~ method
getChildren(): phasor~ ==> [[363, '+~', 0]]
child exists, appending 363
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 362 phasor~
362 is connected to [(363, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 363 +~ 0
>>>> 363 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362]
PLACEMENT
place(): 363 => 22042.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 363 +~ method
getChildren(): +~ ==> [[364, 'cos~', 0]]
child exists, appending 364
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 363 +~
363 is connected to [(364, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 364 cos~ 0
>>>> 364 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363]
PLACEMENT
place(): 364 => 22042.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 364 cos~ method
getChildren(): cos~ ==> [[365, '*~', 0]]
child exists, appending 365
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 364 cos~
364 is connected to [(365, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 365 *~ 0
>>>> 365 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364]
PLACEMENT
place(): 365 => 22042.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 365 *~ method
getChildren(): *~ ==> [[366, '-~', 0]]
child exists, appending 366
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 365 *~
365 is connected to [(366, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 366 -~ 0
>>>> 366 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365]
PLACEMENT
place(): 366 => 22042.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 366 -~ method
getChildren(): -~ ==> [[367, 'clip~', 0]]
child exists, appending 367
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 366 -~
366 is connected to [(367, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 367 clip~ 0
>>>> 367 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366]
PLACEMENT
place(): 367 => 22042.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 367 clip~ method
getChildren(): clip~ ==> [[368, '*~', 0]]
child exists, appending 368
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 367 clip~
367 is connected to [(368, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 368 *~ 0
>>>> 368 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367]
PLACEMENT
place(): 368 => 22042.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 368 *~ method
getChildren(): *~ ==> [[369, '*~', 0]]
child exists, appending 369
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 368 *~
368 is connected to [(369, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 369 *~ 0
>>>> 369 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368]
PLACEMENT
place(): 369 => 22042.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 369 *~ method
getChildren(): *~ ==> [[370, '*~', 0], [371, '*~', 0]]
child exists, appending 370
child exists, appending 371
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 369 *~
369 is connected to [(370, 0), (371, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 370 *~ 0
>>>> 370 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369]
PLACEMENT
place(): 370 => 22042.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 370 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 370 0
22042 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 22042 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 372), ('-~', 373), ('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 372 => 22474.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 372 sig~ NoneType
getChildren(): sig~ ==> [[373, '-~', 0]]
child exists, appending 373
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 372 sig~
372 is connected to [(373, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 373 -~ 0
>>>> 373 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372]
PLACEMENT
place(): 373 => 22474.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 373 -~ method
getChildren(): -~ ==> [[369, '*~', 0]]
369 is not connected to anybody.
relocator() 373 369
22474 58 and 22042 322
getChildren(): [370, 371]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 369 => 22042 322
--> Relocated to: 22042 322 and 22474 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 375), ('*~', 376), ('*~', 377), ('*~', 378), ('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 375 => 22906.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 375 *~ NoneType
getChildren(): *~ ==> [[376, '*~', 0], [376, '*~', 0]]
child exists, appending 376
376 is not connected to anybody.
But, 376 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375]
place(): 376 => 22906.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 375 *~
375 is connected to [(376, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 376 *~ 0
>>>> 376 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376]
PLACEMENT
place(): 376 => 22906.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 376 *~ method
getChildren(): *~ ==> [[377, '*~', 0], [377, '*~', 0]]
child exists, appending 377
377 is not connected to anybody.
But, 377 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376]
place(): 377 => 22906.0 82
relocator() 376 377
22906 82 and 22906 82
getChildren(): [378, 378]
EQUAL_Y
move(): *~
place(): 377 => 22906 106
--> Relocated to: 22906 106 and 22906 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 376 *~
376 is connected to [(377, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 377 *~ 0
>>>> 377 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377]
PLACEMENT
place(): 377 => 22906.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 377 *~ method
getChildren(): *~ ==> [[378, '*~', 0], [378, '*~', 0]]
child exists, appending 378
378 is not connected to anybody.
But, 378 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377]
place(): 378 => 22906.0 130
relocator() 377 378
22906 130 and 22906 130
getChildren(): [373]
EQUAL_Y
move(): *~
place(): 378 => 22906 154
--> Relocated to: 22906 154 and 22906 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 377 *~
377 is connected to [(378, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 378 *~ 0
>>>> 378 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378]
PLACEMENT
place(): 378 => 22906.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 378 *~ method
getChildren(): *~ ==> [[373, '-~', 0]]
373 is not connected to anybody.
relocator() 378 373
22906 178 and 22474 58
getChildren(): [369]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 373 => 22474 58
--> Relocated to: 22474 58 and 22906 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 379), ('lop~', 380), ('*~', 381), ('+~', 382), ('phasor~', 383), ('+~', 384), ('cos~', 385), ('*~', 386), ('-~', 387), ('clip~', 388), ('*~', 389), ('*~', 390), ('*~', 391), ('*~', 392), ('sig~', 393), ('-~', 394), ('*~', 395), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 379 => 23338.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 379 phasor~ NoneType
getChildren(): phasor~ ==> [[380, 'lop~', 0]]
child exists, appending 380
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 379 phasor~
379 is connected to [(380, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 380 lop~ 0
>>>> 380 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379]
PLACEMENT
place(): 380 => 23338.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 380 lop~ method
getChildren(): lop~ ==> [[381, '*~', 0], [395, '*~', 0], [395, '*~', 0]]
child exists, appending 381
child exists, appending 395
395 is not connected to anybody.
But, 395 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380]
place(): 395 => 23338.0 58
relocator() 380 395
23338 58 and 23338 58
getChildren(): [396, 396]
EQUAL_Y
move(): *~
place(): 395 => 23338 82
--> Relocated to: 23338 82 and 23338 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 380 lop~
380 is connected to [(381, 0), (395, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 381 *~ 0
>>>> 381 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395]
PLACEMENT
place(): 381 => 23338.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 381 *~ method
getChildren(): *~ ==> [[382, '+~', 0]]
child exists, appending 382
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 381 *~
381 is connected to [(382, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 382 +~ 0
>>>> 382 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381]
PLACEMENT
place(): 382 => 23338.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 382 +~ method
getChildren(): +~ ==> [[383, 'phasor~', 0]]
child exists, appending 383
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 382 +~
382 is connected to [(383, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 383 phasor~ 0
>>>> 383 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382]
PLACEMENT
place(): 383 => 23338.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 383 phasor~ method
getChildren(): phasor~ ==> [[384, '+~', 0]]
child exists, appending 384
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 383 phasor~
383 is connected to [(384, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 384 +~ 0
>>>> 384 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383]
PLACEMENT
place(): 384 => 23338.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 384 +~ method
getChildren(): +~ ==> [[385, 'cos~', 0]]
child exists, appending 385
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 384 +~
384 is connected to [(385, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 385 cos~ 0
>>>> 385 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384]
PLACEMENT
place(): 385 => 23338.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 385 cos~ method
getChildren(): cos~ ==> [[386, '*~', 0]]
child exists, appending 386
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 385 cos~
385 is connected to [(386, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 386 *~ 0
>>>> 386 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385]
PLACEMENT
place(): 386 => 23338.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 386 *~ method
getChildren(): *~ ==> [[387, '-~', 0]]
child exists, appending 387
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 386 *~
386 is connected to [(387, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 387 -~ 0
>>>> 387 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386]
PLACEMENT
place(): 387 => 23338.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 387 -~ method
getChildren(): -~ ==> [[388, 'clip~', 0]]
child exists, appending 388
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 387 -~
387 is connected to [(388, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 388 clip~ 0
>>>> 388 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387]
PLACEMENT
place(): 388 => 23338.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 388 clip~ method
getChildren(): clip~ ==> [[389, '*~', 0]]
child exists, appending 389
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 388 clip~
388 is connected to [(389, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 389 *~ 0
>>>> 389 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388]
PLACEMENT
place(): 389 => 23338.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 389 *~ method
getChildren(): *~ ==> [[390, '*~', 0]]
child exists, appending 390
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 389 *~
389 is connected to [(390, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 390 *~ 0
>>>> 390 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389]
PLACEMENT
place(): 390 => 23338.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 390 *~ method
getChildren(): *~ ==> [[391, '*~', 0], [392, '*~', 0]]
child exists, appending 391
child exists, appending 392
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 390 *~
390 is connected to [(391, 0), (392, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 391 *~ 0
>>>> 391 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390]
PLACEMENT
place(): 391 => 23338.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 391 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 391 0
23338 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 23338 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 393), ('-~', 394), ('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 393 => 23770.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 393 sig~ NoneType
getChildren(): sig~ ==> [[394, '-~', 0]]
child exists, appending 394
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 393 sig~
393 is connected to [(394, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 394 -~ 0
>>>> 394 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393]
PLACEMENT
place(): 394 => 23770.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 394 -~ method
getChildren(): -~ ==> [[390, '*~', 0]]
390 is not connected to anybody.
relocator() 394 390
23770 58 and 23338 322
getChildren(): [391, 392]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 390 => 23338 322
--> Relocated to: 23338 322 and 23770 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 396), ('*~', 397), ('*~', 398), ('*~', 399), ('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 396 => 24202.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 396 *~ NoneType
getChildren(): *~ ==> [[397, '*~', 0], [397, '*~', 0]]
child exists, appending 397
397 is not connected to anybody.
But, 397 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396]
place(): 397 => 24202.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 396 *~
396 is connected to [(397, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 397 *~ 0
>>>> 397 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397]
PLACEMENT
place(): 397 => 24202.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 397 *~ method
getChildren(): *~ ==> [[398, '*~', 0], [398, '*~', 0]]
child exists, appending 398
398 is not connected to anybody.
But, 398 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397]
place(): 398 => 24202.0 82
relocator() 397 398
24202 82 and 24202 82
getChildren(): [399, 399]
EQUAL_Y
move(): *~
place(): 398 => 24202 106
--> Relocated to: 24202 106 and 24202 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 397 *~
397 is connected to [(398, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 398 *~ 0
>>>> 398 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398]
PLACEMENT
place(): 398 => 24202.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 398 *~ method
getChildren(): *~ ==> [[399, '*~', 0], [399, '*~', 0]]
child exists, appending 399
399 is not connected to anybody.
But, 399 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398]
place(): 399 => 24202.0 130
relocator() 398 399
24202 130 and 24202 130
getChildren(): [394]
EQUAL_Y
move(): *~
place(): 399 => 24202 154
--> Relocated to: 24202 154 and 24202 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 398 *~
398 is connected to [(399, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 399 *~ 0
>>>> 399 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399]
PLACEMENT
place(): 399 => 24202.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 399 *~ method
getChildren(): *~ ==> [[394, '-~', 0]]
394 is not connected to anybody.
relocator() 399 394
24202 178 and 23770 58
getChildren(): [390]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 394 => 23770 58
--> Relocated to: 23770 58 and 24202 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 400), ('lop~', 401), ('*~', 402), ('+~', 403), ('phasor~', 404), ('+~', 405), ('cos~', 406), ('*~', 407), ('-~', 408), ('clip~', 409), ('*~', 410), ('*~', 411), ('*~', 412), ('*~', 413), ('sig~', 414), ('-~', 415), ('*~', 416), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 400 => 24634.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 400 phasor~ NoneType
getChildren(): phasor~ ==> [[401, 'lop~', 0]]
child exists, appending 401
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 400 phasor~
400 is connected to [(401, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 401 lop~ 0
>>>> 401 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400]
PLACEMENT
place(): 401 => 24634.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 401 lop~ method
getChildren(): lop~ ==> [[402, '*~', 0], [416, '*~', 0], [416, '*~', 0]]
child exists, appending 402
child exists, appending 416
416 is not connected to anybody.
But, 416 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401]
place(): 416 => 24634.0 58
relocator() 401 416
24634 58 and 24634 58
getChildren(): [417, 417]
EQUAL_Y
move(): *~
place(): 416 => 24634 82
--> Relocated to: 24634 82 and 24634 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 401 lop~
401 is connected to [(402, 0), (416, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 402 *~ 0
>>>> 402 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416]
PLACEMENT
place(): 402 => 24634.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 402 *~ method
getChildren(): *~ ==> [[403, '+~', 0]]
child exists, appending 403
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 402 *~
402 is connected to [(403, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 403 +~ 0
>>>> 403 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402]
PLACEMENT
place(): 403 => 24634.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 403 +~ method
getChildren(): +~ ==> [[404, 'phasor~', 0]]
child exists, appending 404
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 403 +~
403 is connected to [(404, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 404 phasor~ 0
>>>> 404 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403]
PLACEMENT
place(): 404 => 24634.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 404 phasor~ method
getChildren(): phasor~ ==> [[405, '+~', 0]]
child exists, appending 405
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 404 phasor~
404 is connected to [(405, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 405 +~ 0
>>>> 405 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404]
PLACEMENT
place(): 405 => 24634.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 405 +~ method
getChildren(): +~ ==> [[406, 'cos~', 0]]
child exists, appending 406
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 405 +~
405 is connected to [(406, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 406 cos~ 0
>>>> 406 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405]
PLACEMENT
place(): 406 => 24634.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 406 cos~ method
getChildren(): cos~ ==> [[407, '*~', 0]]
child exists, appending 407
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 406 cos~
406 is connected to [(407, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 407 *~ 0
>>>> 407 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406]
PLACEMENT
place(): 407 => 24634.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 407 *~ method
getChildren(): *~ ==> [[408, '-~', 0]]
child exists, appending 408
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 407 *~
407 is connected to [(408, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 408 -~ 0
>>>> 408 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407]
PLACEMENT
place(): 408 => 24634.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 408 -~ method
getChildren(): -~ ==> [[409, 'clip~', 0]]
child exists, appending 409
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 408 -~
408 is connected to [(409, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 409 clip~ 0
>>>> 409 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408]
PLACEMENT
place(): 409 => 24634.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 409 clip~ method
getChildren(): clip~ ==> [[410, '*~', 0]]
child exists, appending 410
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 409 clip~
409 is connected to [(410, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 410 *~ 0
>>>> 410 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409]
PLACEMENT
place(): 410 => 24634.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 410 *~ method
getChildren(): *~ ==> [[411, '*~', 0]]
child exists, appending 411
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 410 *~
410 is connected to [(411, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 411 *~ 0
>>>> 411 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410]
PLACEMENT
place(): 411 => 24634.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 411 *~ method
getChildren(): *~ ==> [[412, '*~', 0], [413, '*~', 0]]
child exists, appending 412
child exists, appending 413
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 411 *~
411 is connected to [(412, 0), (413, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 412 *~ 0
>>>> 412 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411]
PLACEMENT
place(): 412 => 24634.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 412 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 412 0
24634 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 24634 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 414), ('-~', 415), ('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 414 => 25066.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 414 sig~ NoneType
getChildren(): sig~ ==> [[415, '-~', 0]]
child exists, appending 415
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 414 sig~
414 is connected to [(415, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 415 -~ 0
>>>> 415 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414]
PLACEMENT
place(): 415 => 25066.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 415 -~ method
getChildren(): -~ ==> [[411, '*~', 0]]
411 is not connected to anybody.
relocator() 415 411
25066 58 and 24634 322
getChildren(): [412, 413]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 411 => 24634 322
--> Relocated to: 24634 322 and 25066 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 417), ('*~', 418), ('*~', 419), ('*~', 420), ('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 417 => 25498.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 417 *~ NoneType
getChildren(): *~ ==> [[418, '*~', 0], [418, '*~', 0]]
child exists, appending 418
418 is not connected to anybody.
But, 418 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417]
place(): 418 => 25498.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 417 *~
417 is connected to [(418, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 418 *~ 0
>>>> 418 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418]
PLACEMENT
place(): 418 => 25498.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 418 *~ method
getChildren(): *~ ==> [[419, '*~', 0], [419, '*~', 0]]
child exists, appending 419
419 is not connected to anybody.
But, 419 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418]
place(): 419 => 25498.0 82
relocator() 418 419
25498 82 and 25498 82
getChildren(): [420, 420]
EQUAL_Y
move(): *~
place(): 419 => 25498 106
--> Relocated to: 25498 106 and 25498 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 418 *~
418 is connected to [(419, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 419 *~ 0
>>>> 419 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419]
PLACEMENT
place(): 419 => 25498.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 419 *~ method
getChildren(): *~ ==> [[420, '*~', 0], [420, '*~', 0]]
child exists, appending 420
420 is not connected to anybody.
But, 420 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419]
place(): 420 => 25498.0 130
relocator() 419 420
25498 130 and 25498 130
getChildren(): [415]
EQUAL_Y
move(): *~
place(): 420 => 25498 154
--> Relocated to: 25498 154 and 25498 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 419 *~
419 is connected to [(420, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 420 *~ 0
>>>> 420 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420]
PLACEMENT
place(): 420 => 25498.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 420 *~ method
getChildren(): *~ ==> [[415, '-~', 0]]
415 is not connected to anybody.
relocator() 420 415
25498 178 and 25066 58
getChildren(): [411]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 415 => 25066 58
--> Relocated to: 25066 58 and 25498 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 421), ('lop~', 422), ('*~', 423), ('+~', 424), ('phasor~', 425), ('+~', 426), ('cos~', 427), ('*~', 428), ('-~', 429), ('clip~', 430), ('*~', 431), ('*~', 432), ('*~', 433), ('*~', 434), ('sig~', 435), ('-~', 436), ('*~', 437), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 421 => 25930.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 421 phasor~ NoneType
getChildren(): phasor~ ==> [[422, 'lop~', 0]]
child exists, appending 422
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 421 phasor~
421 is connected to [(422, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 422 lop~ 0
>>>> 422 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421]
PLACEMENT
place(): 422 => 25930.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 422 lop~ method
getChildren(): lop~ ==> [[423, '*~', 0], [437, '*~', 0], [437, '*~', 0]]
child exists, appending 423
child exists, appending 437
437 is not connected to anybody.
But, 437 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422]
place(): 437 => 25930.0 58
relocator() 422 437
25930 58 and 25930 58
getChildren(): [438, 438]
EQUAL_Y
move(): *~
place(): 437 => 25930 82
--> Relocated to: 25930 82 and 25930 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 422 lop~
422 is connected to [(423, 0), (437, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 423 *~ 0
>>>> 423 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437]
PLACEMENT
place(): 423 => 25930.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 423 *~ method
getChildren(): *~ ==> [[424, '+~', 0]]
child exists, appending 424
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 423 *~
423 is connected to [(424, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 424 +~ 0
>>>> 424 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423]
PLACEMENT
place(): 424 => 25930.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 424 +~ method
getChildren(): +~ ==> [[425, 'phasor~', 0]]
child exists, appending 425
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 424 +~
424 is connected to [(425, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 425 phasor~ 0
>>>> 425 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424]
PLACEMENT
place(): 425 => 25930.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 425 phasor~ method
getChildren(): phasor~ ==> [[426, '+~', 0]]
child exists, appending 426
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 425 phasor~
425 is connected to [(426, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 426 +~ 0
>>>> 426 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425]
PLACEMENT
place(): 426 => 25930.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 426 +~ method
getChildren(): +~ ==> [[427, 'cos~', 0]]
child exists, appending 427
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 426 +~
426 is connected to [(427, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 427 cos~ 0
>>>> 427 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426]
PLACEMENT
place(): 427 => 25930.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 427 cos~ method
getChildren(): cos~ ==> [[428, '*~', 0]]
child exists, appending 428
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 427 cos~
427 is connected to [(428, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 428 *~ 0
>>>> 428 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427]
PLACEMENT
place(): 428 => 25930.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 428 *~ method
getChildren(): *~ ==> [[429, '-~', 0]]
child exists, appending 429
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 428 *~
428 is connected to [(429, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 429 -~ 0
>>>> 429 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428]
PLACEMENT
place(): 429 => 25930.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 429 -~ method
getChildren(): -~ ==> [[430, 'clip~', 0]]
child exists, appending 430
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 429 -~
429 is connected to [(430, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 430 clip~ 0
>>>> 430 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429]
PLACEMENT
place(): 430 => 25930.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 430 clip~ method
getChildren(): clip~ ==> [[431, '*~', 0]]
child exists, appending 431
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 430 clip~
430 is connected to [(431, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 431 *~ 0
>>>> 431 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430]
PLACEMENT
place(): 431 => 25930.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 431 *~ method
getChildren(): *~ ==> [[432, '*~', 0]]
child exists, appending 432
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 431 *~
431 is connected to [(432, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 432 *~ 0
>>>> 432 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431]
PLACEMENT
place(): 432 => 25930.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 432 *~ method
getChildren(): *~ ==> [[433, '*~', 0], [434, '*~', 0]]
child exists, appending 433
child exists, appending 434
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 432 *~
432 is connected to [(433, 0), (434, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 433 *~ 0
>>>> 433 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432]
PLACEMENT
place(): 433 => 25930.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 433 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 433 0
25930 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 25930 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 435), ('-~', 436), ('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 435 => 26362.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 435 sig~ NoneType
getChildren(): sig~ ==> [[436, '-~', 0]]
child exists, appending 436
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 435 sig~
435 is connected to [(436, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 436 -~ 0
>>>> 436 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435]
PLACEMENT
place(): 436 => 26362.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 436 -~ method
getChildren(): -~ ==> [[432, '*~', 0]]
432 is not connected to anybody.
relocator() 436 432
26362 58 and 25930 322
getChildren(): [433, 434]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 432 => 25930 322
--> Relocated to: 25930 322 and 26362 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 438), ('*~', 439), ('*~', 440), ('*~', 441), ('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 438 => 26794.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 438 *~ NoneType
getChildren(): *~ ==> [[439, '*~', 0], [439, '*~', 0]]
child exists, appending 439
439 is not connected to anybody.
But, 439 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438]
place(): 439 => 26794.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 438 *~
438 is connected to [(439, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 439 *~ 0
>>>> 439 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439]
PLACEMENT
place(): 439 => 26794.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 439 *~ method
getChildren(): *~ ==> [[440, '*~', 0], [440, '*~', 0]]
child exists, appending 440
440 is not connected to anybody.
But, 440 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439]
place(): 440 => 26794.0 82
relocator() 439 440
26794 82 and 26794 82
getChildren(): [441, 441]
EQUAL_Y
move(): *~
place(): 440 => 26794 106
--> Relocated to: 26794 106 and 26794 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 439 *~
439 is connected to [(440, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 440 *~ 0
>>>> 440 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440]
PLACEMENT
place(): 440 => 26794.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 440 *~ method
getChildren(): *~ ==> [[441, '*~', 0], [441, '*~', 0]]
child exists, appending 441
441 is not connected to anybody.
But, 441 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440]
place(): 441 => 26794.0 130
relocator() 440 441
26794 130 and 26794 130
getChildren(): [436]
EQUAL_Y
move(): *~
place(): 441 => 26794 154
--> Relocated to: 26794 154 and 26794 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 440 *~
440 is connected to [(441, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 441 *~ 0
>>>> 441 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441]
PLACEMENT
place(): 441 => 26794.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 441 *~ method
getChildren(): *~ ==> [[436, '-~', 0]]
436 is not connected to anybody.
relocator() 441 436
26794 178 and 26362 58
getChildren(): [432]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 436 => 26362 58
--> Relocated to: 26362 58 and 26794 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 442), ('lop~', 443), ('*~', 444), ('+~', 445), ('phasor~', 446), ('+~', 447), ('cos~', 448), ('*~', 449), ('-~', 450), ('clip~', 451), ('*~', 452), ('*~', 453), ('*~', 454), ('*~', 455), ('sig~', 456), ('-~', 457), ('*~', 458), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 442 => 27226.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 442 phasor~ NoneType
getChildren(): phasor~ ==> [[443, 'lop~', 0]]
child exists, appending 443
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 442 phasor~
442 is connected to [(443, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 443 lop~ 0
>>>> 443 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442]
PLACEMENT
place(): 443 => 27226.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 443 lop~ method
getChildren(): lop~ ==> [[444, '*~', 0], [458, '*~', 0], [458, '*~', 0]]
child exists, appending 444
child exists, appending 458
458 is not connected to anybody.
But, 458 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443]
place(): 458 => 27226.0 58
relocator() 443 458
27226 58 and 27226 58
getChildren(): [459, 459]
EQUAL_Y
move(): *~
place(): 458 => 27226 82
--> Relocated to: 27226 82 and 27226 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 443 lop~
443 is connected to [(444, 0), (458, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 444 *~ 0
>>>> 444 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458]
PLACEMENT
place(): 444 => 27226.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 444 *~ method
getChildren(): *~ ==> [[445, '+~', 0]]
child exists, appending 445
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 444 *~
444 is connected to [(445, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 445 +~ 0
>>>> 445 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444]
PLACEMENT
place(): 445 => 27226.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 445 +~ method
getChildren(): +~ ==> [[446, 'phasor~', 0]]
child exists, appending 446
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 445 +~
445 is connected to [(446, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 446 phasor~ 0
>>>> 446 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445]
PLACEMENT
place(): 446 => 27226.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 446 phasor~ method
getChildren(): phasor~ ==> [[447, '+~', 0]]
child exists, appending 447
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 446 phasor~
446 is connected to [(447, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 447 +~ 0
>>>> 447 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446]
PLACEMENT
place(): 447 => 27226.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 447 +~ method
getChildren(): +~ ==> [[448, 'cos~', 0]]
child exists, appending 448
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 447 +~
447 is connected to [(448, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 448 cos~ 0
>>>> 448 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447]
PLACEMENT
place(): 448 => 27226.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 448 cos~ method
getChildren(): cos~ ==> [[449, '*~', 0]]
child exists, appending 449
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 448 cos~
448 is connected to [(449, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 449 *~ 0
>>>> 449 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448]
PLACEMENT
place(): 449 => 27226.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 449 *~ method
getChildren(): *~ ==> [[450, '-~', 0]]
child exists, appending 450
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 449 *~
449 is connected to [(450, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 450 -~ 0
>>>> 450 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449]
PLACEMENT
place(): 450 => 27226.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 450 -~ method
getChildren(): -~ ==> [[451, 'clip~', 0]]
child exists, appending 451
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 450 -~
450 is connected to [(451, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 451 clip~ 0
>>>> 451 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450]
PLACEMENT
place(): 451 => 27226.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 451 clip~ method
getChildren(): clip~ ==> [[452, '*~', 0]]
child exists, appending 452
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 451 clip~
451 is connected to [(452, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 452 *~ 0
>>>> 452 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451]
PLACEMENT
place(): 452 => 27226.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 452 *~ method
getChildren(): *~ ==> [[453, '*~', 0]]
child exists, appending 453
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 452 *~
452 is connected to [(453, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 453 *~ 0
>>>> 453 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452]
PLACEMENT
place(): 453 => 27226.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 453 *~ method
getChildren(): *~ ==> [[454, '*~', 0], [455, '*~', 0]]
child exists, appending 454
child exists, appending 455
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 453 *~
453 is connected to [(454, 0), (455, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 454 *~ 0
>>>> 454 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453]
PLACEMENT
place(): 454 => 27226.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 454 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 454 0
27226 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 27226 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 456), ('-~', 457), ('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 456 => 27658.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 456 sig~ NoneType
getChildren(): sig~ ==> [[457, '-~', 0]]
child exists, appending 457
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 456 sig~
456 is connected to [(457, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 457 -~ 0
>>>> 457 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456]
PLACEMENT
place(): 457 => 27658.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 457 -~ method
getChildren(): -~ ==> [[453, '*~', 0]]
453 is not connected to anybody.
relocator() 457 453
27658 58 and 27226 322
getChildren(): [454, 455]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 453 => 27226 322
--> Relocated to: 27226 322 and 27658 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 459), ('*~', 460), ('*~', 461), ('*~', 462), ('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 459 => 28090.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 459 *~ NoneType
getChildren(): *~ ==> [[460, '*~', 0], [460, '*~', 0]]
child exists, appending 460
460 is not connected to anybody.
But, 460 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459]
place(): 460 => 28090.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 459 *~
459 is connected to [(460, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 460 *~ 0
>>>> 460 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460]
PLACEMENT
place(): 460 => 28090.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 460 *~ method
getChildren(): *~ ==> [[461, '*~', 0], [461, '*~', 0]]
child exists, appending 461
461 is not connected to anybody.
But, 461 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460]
place(): 461 => 28090.0 82
relocator() 460 461
28090 82 and 28090 82
getChildren(): [462, 462]
EQUAL_Y
move(): *~
place(): 461 => 28090 106
--> Relocated to: 28090 106 and 28090 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 460 *~
460 is connected to [(461, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 461 *~ 0
>>>> 461 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461]
PLACEMENT
place(): 461 => 28090.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 461 *~ method
getChildren(): *~ ==> [[462, '*~', 0], [462, '*~', 0]]
child exists, appending 462
462 is not connected to anybody.
But, 462 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461]
place(): 462 => 28090.0 130
relocator() 461 462
28090 130 and 28090 130
getChildren(): [457]
EQUAL_Y
move(): *~
place(): 462 => 28090 154
--> Relocated to: 28090 154 and 28090 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 461 *~
461 is connected to [(462, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 462 *~ 0
>>>> 462 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462]
PLACEMENT
place(): 462 => 28090.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 462 *~ method
getChildren(): *~ ==> [[457, '-~', 0]]
457 is not connected to anybody.
relocator() 462 457
28090 178 and 27658 58
getChildren(): [453]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 457 => 27658 58
--> Relocated to: 27658 58 and 28090 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 463), ('lop~', 464), ('*~', 465), ('+~', 466), ('phasor~', 467), ('+~', 468), ('cos~', 469), ('*~', 470), ('-~', 471), ('clip~', 472), ('*~', 473), ('*~', 474), ('*~', 475), ('*~', 476), ('sig~', 477), ('-~', 478), ('*~', 479), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 463 => 28522.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 463 phasor~ NoneType
getChildren(): phasor~ ==> [[464, 'lop~', 0]]
child exists, appending 464
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 463 phasor~
463 is connected to [(464, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 464 lop~ 0
>>>> 464 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463]
PLACEMENT
place(): 464 => 28522.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 464 lop~ method
getChildren(): lop~ ==> [[465, '*~', 0], [479, '*~', 0], [479, '*~', 0]]
child exists, appending 465
child exists, appending 479
479 is not connected to anybody.
But, 479 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464]
place(): 479 => 28522.0 58
relocator() 464 479
28522 58 and 28522 58
getChildren(): [480, 480]
EQUAL_Y
move(): *~
place(): 479 => 28522 82
--> Relocated to: 28522 82 and 28522 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 464 lop~
464 is connected to [(465, 0), (479, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 465 *~ 0
>>>> 465 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479]
PLACEMENT
place(): 465 => 28522.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 465 *~ method
getChildren(): *~ ==> [[466, '+~', 0]]
child exists, appending 466
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 465 *~
465 is connected to [(466, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 466 +~ 0
>>>> 466 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465]
PLACEMENT
place(): 466 => 28522.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 466 +~ method
getChildren(): +~ ==> [[467, 'phasor~', 0]]
child exists, appending 467
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 466 +~
466 is connected to [(467, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 467 phasor~ 0
>>>> 467 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466]
PLACEMENT
place(): 467 => 28522.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 467 phasor~ method
getChildren(): phasor~ ==> [[468, '+~', 0]]
child exists, appending 468
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 467 phasor~
467 is connected to [(468, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 468 +~ 0
>>>> 468 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467]
PLACEMENT
place(): 468 => 28522.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 468 +~ method
getChildren(): +~ ==> [[469, 'cos~', 0]]
child exists, appending 469
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 468 +~
468 is connected to [(469, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 469 cos~ 0
>>>> 469 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468]
PLACEMENT
place(): 469 => 28522.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 469 cos~ method
getChildren(): cos~ ==> [[470, '*~', 0]]
child exists, appending 470
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 469 cos~
469 is connected to [(470, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 470 *~ 0
>>>> 470 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469]
PLACEMENT
place(): 470 => 28522.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 470 *~ method
getChildren(): *~ ==> [[471, '-~', 0]]
child exists, appending 471
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 470 *~
470 is connected to [(471, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 471 -~ 0
>>>> 471 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470]
PLACEMENT
place(): 471 => 28522.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 471 -~ method
getChildren(): -~ ==> [[472, 'clip~', 0]]
child exists, appending 472
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 471 -~
471 is connected to [(472, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 472 clip~ 0
>>>> 472 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471]
PLACEMENT
place(): 472 => 28522.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 472 clip~ method
getChildren(): clip~ ==> [[473, '*~', 0]]
child exists, appending 473
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 472 clip~
472 is connected to [(473, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 473 *~ 0
>>>> 473 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472]
PLACEMENT
place(): 473 => 28522.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 473 *~ method
getChildren(): *~ ==> [[474, '*~', 0]]
child exists, appending 474
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 473 *~
473 is connected to [(474, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 474 *~ 0
>>>> 474 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473]
PLACEMENT
place(): 474 => 28522.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 474 *~ method
getChildren(): *~ ==> [[475, '*~', 0], [476, '*~', 0]]
child exists, appending 475
child exists, appending 476
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 474 *~
474 is connected to [(475, 0), (476, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 475 *~ 0
>>>> 475 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474]
PLACEMENT
place(): 475 => 28522.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 475 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 475 0
28522 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 28522 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 477), ('-~', 478), ('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 477 => 28954.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 477 sig~ NoneType
getChildren(): sig~ ==> [[478, '-~', 0]]
child exists, appending 478
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 477 sig~
477 is connected to [(478, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 478 -~ 0
>>>> 478 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477]
PLACEMENT
place(): 478 => 28954.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 478 -~ method
getChildren(): -~ ==> [[474, '*~', 0]]
474 is not connected to anybody.
relocator() 478 474
28954 58 and 28522 322
getChildren(): [475, 476]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 474 => 28522 322
--> Relocated to: 28522 322 and 28954 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 480), ('*~', 481), ('*~', 482), ('*~', 483), ('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 480 => 29386.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 480 *~ NoneType
getChildren(): *~ ==> [[481, '*~', 0], [481, '*~', 0]]
child exists, appending 481
481 is not connected to anybody.
But, 481 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480]
place(): 481 => 29386.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 480 *~
480 is connected to [(481, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 481 *~ 0
>>>> 481 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481]
PLACEMENT
place(): 481 => 29386.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 481 *~ method
getChildren(): *~ ==> [[482, '*~', 0], [482, '*~', 0]]
child exists, appending 482
482 is not connected to anybody.
But, 482 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481]
place(): 482 => 29386.0 82
relocator() 481 482
29386 82 and 29386 82
getChildren(): [483, 483]
EQUAL_Y
move(): *~
place(): 482 => 29386 106
--> Relocated to: 29386 106 and 29386 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 481 *~
481 is connected to [(482, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 482 *~ 0
>>>> 482 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482]
PLACEMENT
place(): 482 => 29386.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 482 *~ method
getChildren(): *~ ==> [[483, '*~', 0], [483, '*~', 0]]
child exists, appending 483
483 is not connected to anybody.
But, 483 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482]
place(): 483 => 29386.0 130
relocator() 482 483
29386 130 and 29386 130
getChildren(): [478]
EQUAL_Y
move(): *~
place(): 483 => 29386 154
--> Relocated to: 29386 154 and 29386 130
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 482 *~
482 is connected to [(483, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 483 *~ 0
>>>> 483 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483]
PLACEMENT
place(): 483 => 29386.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 483 *~ method
getChildren(): *~ ==> [[478, '-~', 0]]
478 is not connected to anybody.
relocator() 483 478
29386 178 and 28954 58
getChildren(): [474]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 478 => 28954 58
--> Relocated to: 28954 58 and 29386 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 484), ('lop~', 485), ('*~', 486), ('+~', 487), ('phasor~', 488), ('+~', 489), ('cos~', 490), ('*~', 491), ('-~', 492), ('clip~', 493), ('*~', 494), ('*~', 495), ('*~', 496), ('*~', 497), ('sig~', 498), ('-~', 499), ('*~', 500), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 484 => 29818.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 484 phasor~ NoneType
getChildren(): phasor~ ==> [[485, 'lop~', 0]]
child exists, appending 485
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 484 phasor~
484 is connected to [(485, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 485 lop~ 0
>>>> 485 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484]
PLACEMENT
place(): 485 => 29818.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 485 lop~ method
getChildren(): lop~ ==> [[486, '*~', 0], [500, '*~', 0], [500, '*~', 0]]
child exists, appending 486
child exists, appending 500
500 is not connected to anybody.
But, 500 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485]
place(): 500 => 29818.0 58
relocator() 485 500
29818 58 and 29818 58
getChildren(): [501, 501]
EQUAL_Y
move(): *~
place(): 500 => 29818 82
--> Relocated to: 29818 82 and 29818 58
 *** done relocating, continuing
done with child loop 2
`````````` (end STEP 2) for  lop~ ``````````
==> passing to step3
========== STEP 3 ==========
input 485 lop~
485 is connected to [(486, 0), (500, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for lop~
>>>> Child #0 486 *~ 0
>>>> 486 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500]
PLACEMENT
place(): 486 => 29818.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 486 *~ method
getChildren(): *~ ==> [[487, '+~', 0]]
child exists, appending 487
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 486 *~
486 is connected to [(487, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 487 +~ 0
>>>> 487 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486]
PLACEMENT
place(): 487 => 29818.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 487 +~ method
getChildren(): +~ ==> [[488, 'phasor~', 0]]
child exists, appending 488
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 487 +~
487 is connected to [(488, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 488 phasor~ 0
>>>> 488 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487]
PLACEMENT
place(): 488 => 29818.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 488 phasor~ method
getChildren(): phasor~ ==> [[489, '+~', 0]]
child exists, appending 489
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 488 phasor~
488 is connected to [(489, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 489 +~ 0
>>>> 489 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488]
PLACEMENT
place(): 489 => 29818.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 489 +~ method
getChildren(): +~ ==> [[490, 'cos~', 0]]
child exists, appending 490
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 489 +~
489 is connected to [(490, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 490 cos~ 0
>>>> 490 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489]
PLACEMENT
place(): 490 => 29818.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 490 cos~ method
getChildren(): cos~ ==> [[491, '*~', 0]]
child exists, appending 491
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 490 cos~
490 is connected to [(491, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 491 *~ 0
>>>> 491 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490]
PLACEMENT
place(): 491 => 29818.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 491 *~ method
getChildren(): *~ ==> [[492, '-~', 0]]
child exists, appending 492
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 491 *~
491 is connected to [(492, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 492 -~ 0
>>>> 492 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491]
PLACEMENT
place(): 492 => 29818.0 250
'''''''''' BEGIN STEP 2 ''''''''''
input 492 -~ method
getChildren(): -~ ==> [[493, 'clip~', 0]]
child exists, appending 493
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 492 -~
492 is connected to [(493, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 493 clip~ 0
>>>> 493 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492]
PLACEMENT
place(): 493 => 29818.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 493 clip~ method
getChildren(): clip~ ==> [[494, '*~', 0]]
child exists, appending 494
done with child loop 1
`````````` (end STEP 2) for  clip~ ``````````
==> passing to step3
========== STEP 3 ==========
input 493 clip~
493 is connected to [(494, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for clip~
>>>> Child #0 494 *~ 0
>>>> 494 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493]
PLACEMENT
place(): 494 => 29818.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 494 *~ method
getChildren(): *~ ==> [[495, '*~', 0]]
child exists, appending 495
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 494 *~
494 is connected to [(495, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 495 *~ 0
>>>> 495 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494]
PLACEMENT
place(): 495 => 29818.0 322
'''''''''' BEGIN STEP 2 ''''''''''
input 495 *~ method
getChildren(): *~ ==> [[496, '*~', 0], [497, '*~', 0]]
child exists, appending 496
child exists, appending 497
done with child loop 2
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 495 *~
495 is connected to [(496, 0), (497, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 496 *~ 0
>>>> 496 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495]
PLACEMENT
place(): 496 => 29818.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 496 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 496 0
29818 346 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 29818 346
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('sig~', 498), ('-~', 499), ('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 498 => 30250.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 498 sig~ NoneType
getChildren(): sig~ ==> [[499, '-~', 0]]
child exists, appending 499
done with child loop 1
`````````` (end STEP 2) for  sig~ ``````````
==> passing to step3
========== STEP 3 ==========
input 498 sig~
498 is connected to [(499, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for sig~
>>>> Child #0 499 -~ 0
>>>> 499 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498]
PLACEMENT
place(): 499 => 30250.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 499 -~ method
getChildren(): -~ ==> [[495, '*~', 0]]
495 is not connected to anybody.
relocator() 499 495
30250 58 and 29818 322
getChildren(): [496, 497]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 495 => 29818 322
--> Relocated to: 29818 322 and 30250 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  -~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('*~', 501), ('*~', 502), ('*~', 503), ('*~', 504)]
place(): 501 => 30682.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 501 *~ NoneType
getChildren(): *~ ==> [[502, '*~', 0], [502, '*~', 0]]
child exists, appending 502
502 is not connected to anybody.
But, 502 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501]
place(): 502 => 30682.0 34
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 501 *~
501 is connected to [(502, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 502 *~ 0
>>>> 502 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502]
PLACEMENT
place(): 502 => 30682.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 502 *~ method
getChildren(): *~ ==> [[503, '*~', 0], [503, '*~', 0]]
child exists, appending 503
503 is not connected to anybody.
But, 503 is not placed in [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502]
place(): 503 => 30682.0 82
relocator() 502 503
30682 82 and 30682 82
getChildren(): [504, 504]
EQUAL_Y
move(): *~
place(): 503 => 30682 106
--> Relocated to: 30682 106 and 30682 82
 *** done relocating, continuing
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 502 *~
502 is connected to [(503, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 503 *~ 0
>>>> 503 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503]
PLACEMENT
place(): 503 => 30682.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 503 *~ method
getChildren(): *~ ==> [[504, '*~', 0], [504, '*~', 0]]
child exists, appending 504
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 503 *~
503 is connected to [(504, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 504 *~ 0
>>>> 504 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503]
PLACEMENT
place(): 504 => 30682.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 504 *~ method
getChildren(): *~ ==> [[499, '-~', 0]]
499 is not connected to anybody.
relocator() 504 499
30682 154 and 30250 58
getChildren(): [495]
UNEQUAL_Y
child is ABOVE the parent
move(): -~
place(): 499 => 30250 58
--> Relocated to: 30250 58 and 30682 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 497 *~ 0
>>>> 497 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499]
PLACEMENT
place(): 497 => 31114.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 497 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 497 0
31114 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 31114 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 500 *~ 0
>>>> 500 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0]
PLACEMENT
place(): 500 => 31546.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 500 *~ method
getChildren(): *~ ==> [[501, '*~', 0], [501, '*~', 0]]
501 is not connected to anybody.
relocator() 500 501
31546 34 and 30682 10
getChildren(): [502, 502]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 501 => 30682 10
--> Relocated to: 30682 10 and 31546 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 476 *~ 0
>>>> 476 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501]
PLACEMENT
place(): 476 => 31978.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 476 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 476 0
31978 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 31978 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 479 *~ 0
>>>> 479 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0]
PLACEMENT
place(): 479 => 32410.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 479 *~ method
getChildren(): *~ ==> [[480, '*~', 0], [480, '*~', 0]]
480 is not connected to anybody.
relocator() 479 480
32410 34 and 29386 10
getChildren(): [481, 481]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 480 => 29386 10
--> Relocated to: 29386 10 and 32410 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 455 *~ 0
>>>> 455 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480]
PLACEMENT
place(): 455 => 32842.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 455 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 455 0
32842 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 32842 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 458 *~ 0
>>>> 458 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0]
PLACEMENT
place(): 458 => 33274.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 458 *~ method
getChildren(): *~ ==> [[459, '*~', 0], [459, '*~', 0]]
459 is not connected to anybody.
relocator() 458 459
33274 34 and 28090 10
getChildren(): [460, 460]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 459 => 28090 10
--> Relocated to: 28090 10 and 33274 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 434 *~ 0
>>>> 434 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459]
PLACEMENT
place(): 434 => 33706.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 434 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 434 0
33706 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 33706 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 437 *~ 0
>>>> 437 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0]
PLACEMENT
place(): 437 => 34138.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 437 *~ method
getChildren(): *~ ==> [[438, '*~', 0], [438, '*~', 0]]
438 is not connected to anybody.
relocator() 437 438
34138 34 and 26794 10
getChildren(): [439, 439]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 438 => 26794 10
--> Relocated to: 26794 10 and 34138 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 413 *~ 0
>>>> 413 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438]
PLACEMENT
place(): 413 => 34570.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 413 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 413 0
34570 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 34570 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 416 *~ 0
>>>> 416 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0]
PLACEMENT
place(): 416 => 35002.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 416 *~ method
getChildren(): *~ ==> [[417, '*~', 0], [417, '*~', 0]]
417 is not connected to anybody.
relocator() 416 417
35002 34 and 25498 10
getChildren(): [418, 418]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 417 => 25498 10
--> Relocated to: 25498 10 and 35002 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 392 *~ 0
>>>> 392 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417]
PLACEMENT
place(): 392 => 35434.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 392 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 392 0
35434 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 35434 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 395 *~ 0
>>>> 395 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0]
PLACEMENT
place(): 395 => 35866.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 395 *~ method
getChildren(): *~ ==> [[396, '*~', 0], [396, '*~', 0]]
396 is not connected to anybody.
relocator() 395 396
35866 34 and 24202 10
getChildren(): [397, 397]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 396 => 24202 10
--> Relocated to: 24202 10 and 35866 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 371 *~ 0
>>>> 371 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396]
PLACEMENT
place(): 371 => 36298.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 371 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 371 0
36298 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 36298 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 374 *~ 0
>>>> 374 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0]
PLACEMENT
place(): 374 => 36730.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 374 *~ method
getChildren(): *~ ==> [[375, '*~', 0], [375, '*~', 0]]
375 is not connected to anybody.
relocator() 374 375
36730 34 and 22906 10
getChildren(): [376, 376]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 375 => 22906 10
--> Relocated to: 22906 10 and 36730 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 350 *~ 0
>>>> 350 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375]
PLACEMENT
place(): 350 => 37162.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 350 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 350 0
37162 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 37162 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 353 *~ 0
>>>> 353 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0]
PLACEMENT
place(): 353 => 37594.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 353 *~ method
getChildren(): *~ ==> [[354, '*~', 0], [354, '*~', 0]]
354 is not connected to anybody.
relocator() 353 354
37594 34 and 21610 10
getChildren(): [355, 355]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 354 => 21610 10
--> Relocated to: 21610 10 and 37594 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 329 *~ 0
>>>> 329 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354]
PLACEMENT
place(): 329 => 38026.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 329 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 329 0
38026 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 38026 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 332 *~ 0
>>>> 332 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0]
PLACEMENT
place(): 332 => 38458.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 332 *~ method
getChildren(): *~ ==> [[333, '*~', 0], [333, '*~', 0]]
333 is not connected to anybody.
relocator() 332 333
38458 34 and 20314 10
getChildren(): [334, 334]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 333 => 20314 10
--> Relocated to: 20314 10 and 38458 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 308 *~ 0
>>>> 308 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333]
PLACEMENT
place(): 308 => 38890.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 308 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 308 0
38890 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 38890 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 311 *~ 0
>>>> 311 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0]
PLACEMENT
place(): 311 => 39322.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 311 *~ method
getChildren(): *~ ==> [[312, '*~', 0], [312, '*~', 0]]
312 is not connected to anybody.
relocator() 311 312
39322 34 and 19018 10
getChildren(): [313, 313]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 312 => 19018 10
--> Relocated to: 19018 10 and 39322 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 287 *~ 0
>>>> 287 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312]
PLACEMENT
place(): 287 => 39754.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 287 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 287 0
39754 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 39754 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 290 *~ 0
>>>> 290 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0]
PLACEMENT
place(): 290 => 40186.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 290 *~ method
getChildren(): *~ ==> [[291, '*~', 0], [291, '*~', 0]]
291 is not connected to anybody.
relocator() 290 291
40186 34 and 17722 10
getChildren(): [292, 292]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 291 => 17722 10
--> Relocated to: 17722 10 and 40186 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 266 *~ 0
>>>> 266 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291]
PLACEMENT
place(): 266 => 40618.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 266 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 266 0
40618 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 40618 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 269 *~ 0
>>>> 269 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0]
PLACEMENT
place(): 269 => 41050.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 269 *~ method
getChildren(): *~ ==> [[270, '*~', 0], [270, '*~', 0]]
270 is not connected to anybody.
relocator() 269 270
41050 34 and 16426 10
getChildren(): [271, 271]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 270 => 16426 10
--> Relocated to: 16426 10 and 41050 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 245 *~ 0
>>>> 245 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270]
PLACEMENT
place(): 245 => 41482.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 245 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 245 0
41482 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 41482 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 248 *~ 0
>>>> 248 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0]
PLACEMENT
place(): 248 => 41914.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 248 *~ method
getChildren(): *~ ==> [[249, '*~', 0], [249, '*~', 0]]
249 is not connected to anybody.
relocator() 248 249
41914 34 and 15130 10
getChildren(): [250, 250]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 249 => 15130 10
--> Relocated to: 15130 10 and 41914 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 224 *~ 0
>>>> 224 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249]
PLACEMENT
place(): 224 => 42346.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 224 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 224 0
42346 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 42346 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 227 *~ 0
>>>> 227 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0]
PLACEMENT
place(): 227 => 42778.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 227 *~ method
getChildren(): *~ ==> [[228, '*~', 0], [228, '*~', 0]]
228 is not connected to anybody.
relocator() 227 228
42778 34 and 13834 10
getChildren(): [229, 229]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 228 => 13834 10
--> Relocated to: 13834 10 and 42778 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 203 *~ 0
>>>> 203 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228]
PLACEMENT
place(): 203 => 43210.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 203 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 203 0
43210 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 43210 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 206 *~ 0
>>>> 206 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0]
PLACEMENT
place(): 206 => 43642.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 206 *~ method
getChildren(): *~ ==> [[207, '*~', 0], [207, '*~', 0]]
207 is not connected to anybody.
relocator() 206 207
43642 34 and 12538 10
getChildren(): [208, 208]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 207 => 12538 10
--> Relocated to: 12538 10 and 43642 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 182 *~ 0
>>>> 182 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207]
PLACEMENT
place(): 182 => 44074.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 182 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 182 0
44074 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 44074 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 185 *~ 0
>>>> 185 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0]
PLACEMENT
place(): 185 => 44506.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 185 *~ method
getChildren(): *~ ==> [[186, '*~', 0], [186, '*~', 0]]
186 is not connected to anybody.
relocator() 185 186
44506 34 and 11242 10
getChildren(): [187, 187]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 186 => 11242 10
--> Relocated to: 11242 10 and 44506 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 161 *~ 0
>>>> 161 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186]
PLACEMENT
place(): 161 => 44938.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 161 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 161 0
44938 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 44938 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 164 *~ 0
>>>> 164 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0]
PLACEMENT
place(): 164 => 45370.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 164 *~ method
getChildren(): *~ ==> [[165, '*~', 0], [165, '*~', 0]]
165 is not connected to anybody.
relocator() 164 165
45370 34 and 9946 10
getChildren(): [166, 166]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 165 => 9946 10
--> Relocated to: 9946 10 and 45370 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 140 *~ 0
>>>> 140 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165]
PLACEMENT
place(): 140 => 45802.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 140 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 140 0
45802 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 45802 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 143 *~ 0
>>>> 143 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165, 140, 0]
PLACEMENT
place(): 143 => 46234.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 143 *~ method
getChildren(): *~ ==> [[144, '*~', 0], [144, '*~', 0]]
144 is not connected to anybody.
relocator() 143 144
46234 34 and 8650 10
getChildren(): [145, 145]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 144 => 8650 10
--> Relocated to: 8650 10 and 46234 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 119 *~ 0
>>>> 119 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165, 140, 0, 143, 144]
PLACEMENT
place(): 119 => 46666.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 119 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 119 0
46666 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 46666 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 122 *~ 0
>>>> 122 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165, 140, 0, 143, 144, 119, 0]
PLACEMENT
place(): 122 => 47098.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 122 *~ method
getChildren(): *~ ==> [[123, '*~', 0], [123, '*~', 0]]
123 is not connected to anybody.
relocator() 122 123
47098 34 and 7354 10
getChildren(): [124, 124]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 123 => 7354 10
--> Relocated to: 7354 10 and 47098 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 98 *~ 0
>>>> 98 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165, 140, 0, 143, 144, 119, 0, 122, 123]
PLACEMENT
place(): 98 => 47530.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 98 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 98 0
47530 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 47530 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 101 *~ 0
>>>> 101 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165, 140, 0, 143, 144, 119, 0, 122, 123, 98, 0]
PLACEMENT
place(): 101 => 47962.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 101 *~ method
getChildren(): *~ ==> [[102, '*~', 0], [102, '*~', 0]]
102 is not connected to anybody.
relocator() 101 102
47962 34 and 6058 10
getChildren(): [103, 103]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 102 => 6058 10
--> Relocated to: 6058 10 and 47962 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 77 *~ 0
>>>> 77 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165, 140, 0, 143, 144, 119, 0, 122, 123, 98, 0, 101, 102]
PLACEMENT
place(): 77 => 48394.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 77 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 77 0
48394 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 48394 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 80 *~ 0
>>>> 80 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165, 140, 0, 143, 144, 119, 0, 122, 123, 98, 0, 101, 102, 77, 0]
PLACEMENT
place(): 80 => 48826.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 80 *~ method
getChildren(): *~ ==> [[81, '*~', 0], [81, '*~', 0]]
81 is not connected to anybody.
relocator() 80 81
48826 34 and 4762 10
getChildren(): [82, 82]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 81 => 4762 10
--> Relocated to: 4762 10 and 48826 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 56 *~ 0
>>>> 56 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165, 140, 0, 143, 144, 119, 0, 122, 123, 98, 0, 101, 102, 77, 0, 80, 81]
PLACEMENT
place(): 56 => 49258.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 56 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 56 0
49258 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 49258 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 59 *~ 0
>>>> 59 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165, 140, 0, 143, 144, 119, 0, 122, 123, 98, 0, 101, 102, 77, 0, 80, 81, 56, 0]
PLACEMENT
place(): 59 => 49690.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 59 *~ method
getChildren(): *~ ==> [[60, '*~', 0], [60, '*~', 0]]
60 is not connected to anybody.
relocator() 59 60
49690 34 and 3466 10
getChildren(): [61, 61]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 60 => 3466 10
--> Relocated to: 3466 10 and 49690 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 35 *~ 0
>>>> 35 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165, 140, 0, 143, 144, 119, 0, 122, 123, 98, 0, 101, 102, 77, 0, 80, 81, 56, 0, 59, 60]
PLACEMENT
place(): 35 => 50122.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 35 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 35 0
50122 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 50122 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 38 *~ 0
>>>> 38 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165, 140, 0, 143, 144, 119, 0, 122, 123, 98, 0, 101, 102, 77, 0, 80, 81, 56, 0, 59, 60, 35, 0]
PLACEMENT
place(): 38 => 50554.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 38 *~ method
getChildren(): *~ ==> [[39, '*~', 0], [39, '*~', 0]]
39 is not connected to anybody.
relocator() 38 39
50554 34 and 2170 10
getChildren(): [40, 40]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 39 => 2170 10
--> Relocated to: 2170 10 and 50554 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for sig~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 14 *~ 0
>>>> 14 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165, 140, 0, 143, 144, 119, 0, 122, 123, 98, 0, 101, 102, 77, 0, 80, 81, 56, 0, 59, 60, 35, 0, 38, 39]
PLACEMENT
place(): 14 => 50986.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 14 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 14 0
50986 34 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 50986 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for clip~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
>>>> Child #1 17 *~ 0
>>>> 17 NOT IN [0, 1, 2, 17, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 12, 18, 19, 19, 20, 20, 20, 21, 21, 21, 16, 22, 23, 38, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 36, 37, 33, 39, 40, 40, 41, 41, 41, 42, 42, 42, 37, 43, 44, 59, 59, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 57, 58, 54, 60, 61, 61, 62, 62, 62, 63, 63, 63, 58, 64, 65, 80, 80, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 0, 78, 79, 75, 81, 82, 82, 83, 83, 83, 84, 84, 84, 79, 85, 86, 101, 101, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 99, 100, 96, 102, 103, 103, 104, 104, 104, 105, 105, 105, 100, 106, 107, 122, 122, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 120, 121, 117, 123, 124, 124, 125, 125, 125, 126, 126, 126, 121, 127, 128, 143, 143, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 141, 142, 138, 144, 145, 145, 146, 146, 146, 147, 147, 147, 142, 148, 149, 164, 164, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 0, 162, 163, 159, 165, 166, 166, 167, 167, 167, 168, 168, 168, 163, 169, 170, 185, 185, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 0, 183, 184, 180, 186, 187, 187, 188, 188, 188, 189, 189, 189, 184, 190, 191, 206, 206, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 0, 204, 205, 201, 207, 208, 208, 209, 209, 209, 210, 210, 210, 205, 211, 212, 227, 227, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 0, 225, 226, 222, 228, 229, 229, 230, 230, 230, 231, 231, 231, 226, 232, 233, 248, 248, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 0, 246, 247, 243, 249, 250, 250, 251, 251, 251, 252, 252, 252, 247, 253, 254, 269, 269, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 0, 267, 268, 264, 270, 271, 271, 272, 272, 272, 273, 273, 273, 268, 274, 275, 290, 290, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 0, 288, 289, 285, 291, 292, 292, 293, 293, 293, 294, 294, 294, 289, 295, 296, 311, 311, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 0, 309, 310, 306, 312, 313, 313, 314, 314, 314, 315, 315, 315, 310, 316, 317, 332, 332, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 330, 331, 327, 333, 334, 334, 335, 335, 335, 336, 336, 336, 331, 337, 338, 353, 353, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 0, 351, 352, 348, 354, 355, 355, 356, 356, 356, 357, 357, 357, 352, 358, 359, 374, 374, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 0, 372, 373, 369, 375, 376, 376, 377, 377, 377, 378, 378, 378, 373, 379, 380, 395, 395, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 0, 393, 394, 390, 396, 397, 397, 398, 398, 398, 399, 399, 399, 394, 400, 401, 416, 416, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 0, 414, 415, 411, 417, 418, 418, 419, 419, 419, 420, 420, 420, 415, 421, 422, 437, 437, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 0, 435, 436, 432, 438, 439, 439, 440, 440, 440, 441, 441, 441, 436, 442, 443, 458, 458, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 0, 456, 457, 453, 459, 460, 460, 461, 461, 461, 462, 462, 462, 457, 463, 464, 479, 479, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 0, 477, 478, 474, 480, 481, 481, 482, 482, 482, 483, 483, 483, 478, 484, 485, 500, 500, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 498, 499, 495, 501, 502, 502, 503, 503, 503, 504, 499, 497, 0, 500, 501, 476, 0, 479, 480, 455, 0, 458, 459, 434, 0, 437, 438, 413, 0, 416, 417, 392, 0, 395, 396, 371, 0, 374, 375, 350, 0, 353, 354, 329, 0, 332, 333, 308, 0, 311, 312, 287, 0, 290, 291, 266, 0, 269, 270, 245, 0, 248, 249, 224, 0, 227, 228, 203, 0, 206, 207, 182, 0, 185, 186, 161, 0, 164, 165, 140, 0, 143, 144, 119, 0, 122, 123, 98, 0, 101, 102, 77, 0, 80, 81, 56, 0, 59, 60, 35, 0, 38, 39, 14, 0]
PLACEMENT
place(): 17 => 51418.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 17 *~ method
getChildren(): *~ ==> [[18, '*~', 0], [18, '*~', 0]]
18 is not connected to anybody.
relocator() 17 18
51418 34 and 874 10
getChildren(): [19, 19]
UNEQUAL_Y
child is ABOVE the parent
move(): *~
place(): 18 => 874 10
--> Relocated to: 874 10 and 51418 34
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for lop~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
------------- end -----------
==> END complex_additive.py <===================================
==> BEGIN contexts.py <===================================
Found  darwin  platform.
Locating pd...
Found pd at:  /Applications/Pd-0.52-2.app/Contents/Resources/bin/pd
Initialized Arrange graph placing algorithm.
========= begin arrange algorithm arrange 1b ==========
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('dac~', 0), ('phasor~', 1), ('-~', 2), ('cos~', 3), ('+~', 4), ('/~', 5), ('loadbang', 6), ('Msg', 7), ('osc~', 8), ('*~', 9), ('*~', 10), ('phasor~', 11), ('-~', 12), ('cos~', 13), ('+~', 14), ('/~', 15), ('loadbang', 16), ('Msg', 17), ('osc~', 18), ('*~', 19), ('*~', 20), ('phasor~', 21), ('-~', 22), ('cos~', 23), ('+~', 24), ('/~', 25), ('loadbang', 26), ('Msg', 27), ('osc~', 28), ('*~', 29), ('*~', 30), ('phasor~', 31), ('-~', 32), ('cos~', 33), ('+~', 34), ('/~', 35), ('loadbang', 36), ('Msg', 37), ('osc~', 38), ('*~', 39), ('*~', 40), ('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 0 => 10 10
'''''''''' BEGIN STEP 2 ''''''''''
input 0 dac~ NoneType
getChildren(): dac~ ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 1), ('-~', 2), ('cos~', 3), ('+~', 4), ('/~', 5), ('loadbang', 6), ('Msg', 7), ('osc~', 8), ('*~', 9), ('*~', 10), ('phasor~', 11), ('-~', 12), ('cos~', 13), ('+~', 14), ('/~', 15), ('loadbang', 16), ('Msg', 17), ('osc~', 18), ('*~', 19), ('*~', 20), ('phasor~', 21), ('-~', 22), ('cos~', 23), ('+~', 24), ('/~', 25), ('loadbang', 26), ('Msg', 27), ('osc~', 28), ('*~', 29), ('*~', 30), ('phasor~', 31), ('-~', 32), ('cos~', 33), ('+~', 34), ('/~', 35), ('loadbang', 36), ('Msg', 37), ('osc~', 38), ('*~', 39), ('*~', 40), ('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 1 => 10 34
'''''''''' BEGIN STEP 2 ''''''''''
input 1 phasor~ NoneType
getChildren(): phasor~ ==> [[2, '-~', 0]]
child exists, appending 2
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 1 phasor~
1 is connected to [(2, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 2 -~ 0
>>>> 2 NOT IN [0, 1]
PLACEMENT
place(): 2 => 10.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 2 -~ method
getChildren(): -~ ==> [[3, 'cos~', 0]]
child exists, appending 3
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 2 -~
2 is connected to [(3, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 3 cos~ 0
>>>> 3 NOT IN [0, 1, 2]
PLACEMENT
place(): 3 => 10.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 3 cos~ method
getChildren(): cos~ ==> [[4, '+~', 0]]
child exists, appending 4
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 3 cos~
3 is connected to [(4, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 4 +~ 0
>>>> 4 NOT IN [0, 1, 2, 3]
PLACEMENT
place(): 4 => 10.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 4 +~ method
getChildren(): +~ ==> [[5, '/~', 0]]
child exists, appending 5
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 4 +~
4 is connected to [(5, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 5 /~ 0
>>>> 5 NOT IN [0, 1, 2, 3, 4]
PLACEMENT
place(): 5 => 10.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 5 /~ method
getChildren(): /~ ==> [[10, '*~', 0]]
child exists, appending 10
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 5 /~
5 is connected to [(10, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 10 *~ 0
>>>> 10 NOT IN [0, 1, 2, 3, 4, 5]
PLACEMENT
place(): 10 => 10.0 178
'''''''''' BEGIN STEP 2 ''''''''''
input 10 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 10 0
10 178 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 10 178
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 6), ('Msg', 7), ('osc~', 8), ('*~', 9), ('phasor~', 11), ('-~', 12), ('cos~', 13), ('+~', 14), ('/~', 15), ('loadbang', 16), ('Msg', 17), ('osc~', 18), ('*~', 19), ('*~', 20), ('phasor~', 21), ('-~', 22), ('cos~', 23), ('+~', 24), ('/~', 25), ('loadbang', 26), ('Msg', 27), ('osc~', 28), ('*~', 29), ('*~', 30), ('phasor~', 31), ('-~', 32), ('cos~', 33), ('+~', 34), ('/~', 35), ('loadbang', 36), ('Msg', 37), ('osc~', 38), ('*~', 39), ('*~', 40), ('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 6 => 118.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 6 loadbang NoneType
getChildren(): loadbang ==> [[7, 'Msg', 0]]
child exists, appending 7
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 6 loadbang
6 is connected to [(7, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 7 Msg 0
>>>> 7 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6]
PLACEMENT
place(): 7 => 118.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 7 Msg method
getChildren(): Msg ==> [[1, 'phasor~', 0]]
1 is not connected to anybody.
relocator() 7 1
118 58 and 10 34
getChildren(): [2]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 1 => 10 34
--> Relocated to: 10 34 and 118 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 8), ('*~', 9), ('phasor~', 11), ('-~', 12), ('cos~', 13), ('+~', 14), ('/~', 15), ('loadbang', 16), ('Msg', 17), ('osc~', 18), ('*~', 19), ('*~', 20), ('phasor~', 21), ('-~', 22), ('cos~', 23), ('+~', 24), ('/~', 25), ('loadbang', 26), ('Msg', 27), ('osc~', 28), ('*~', 29), ('*~', 30), ('phasor~', 31), ('-~', 32), ('cos~', 33), ('+~', 34), ('/~', 35), ('loadbang', 36), ('Msg', 37), ('osc~', 38), ('*~', 39), ('*~', 40), ('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 8 => 226.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 8 osc~ NoneType
getChildren(): osc~ ==> [[9, '*~', 0]]
child exists, appending 9
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 8 osc~
8 is connected to [(9, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 9 *~ 0
>>>> 9 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8]
PLACEMENT
place(): 9 => 226.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 9 *~ method
getChildren(): *~ ==> [[10, '*~', 0]]
10 is not connected to anybody.
relocator() 9 10
226 58 and 10 178
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 10 => 10 178
--> Relocated to: 10 178 and 226 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 11), ('-~', 12), ('cos~', 13), ('+~', 14), ('/~', 15), ('loadbang', 16), ('Msg', 17), ('osc~', 18), ('*~', 19), ('*~', 20), ('phasor~', 21), ('-~', 22), ('cos~', 23), ('+~', 24), ('/~', 25), ('loadbang', 26), ('Msg', 27), ('osc~', 28), ('*~', 29), ('*~', 30), ('phasor~', 31), ('-~', 32), ('cos~', 33), ('+~', 34), ('/~', 35), ('loadbang', 36), ('Msg', 37), ('osc~', 38), ('*~', 39), ('*~', 40), ('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 11 => 334.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 11 phasor~ NoneType
getChildren(): phasor~ ==> [[12, '-~', 0]]
child exists, appending 12
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 11 phasor~
11 is connected to [(12, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 12 -~ 0
>>>> 12 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11]
PLACEMENT
place(): 12 => 334.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 12 -~ method
getChildren(): -~ ==> [[13, 'cos~', 0]]
child exists, appending 13
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 12 -~
12 is connected to [(13, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 13 cos~ 0
>>>> 13 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12]
PLACEMENT
place(): 13 => 334.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 13 cos~ method
getChildren(): cos~ ==> [[14, '+~', 0]]
child exists, appending 14
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 13 cos~
13 is connected to [(14, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 14 +~ 0
>>>> 14 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13]
PLACEMENT
place(): 14 => 334.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 14 +~ method
getChildren(): +~ ==> [[15, '/~', 0]]
child exists, appending 15
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 14 +~
14 is connected to [(15, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 15 /~ 0
>>>> 15 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14]
PLACEMENT
place(): 15 => 334.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 15 /~ method
getChildren(): /~ ==> [[20, '*~', 0]]
child exists, appending 20
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 15 /~
15 is connected to [(20, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 20 *~ 0
>>>> 20 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15]
PLACEMENT
place(): 20 => 334.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 20 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 20 0
334 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 334 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 16), ('Msg', 17), ('osc~', 18), ('*~', 19), ('phasor~', 21), ('-~', 22), ('cos~', 23), ('+~', 24), ('/~', 25), ('loadbang', 26), ('Msg', 27), ('osc~', 28), ('*~', 29), ('*~', 30), ('phasor~', 31), ('-~', 32), ('cos~', 33), ('+~', 34), ('/~', 35), ('loadbang', 36), ('Msg', 37), ('osc~', 38), ('*~', 39), ('*~', 40), ('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 16 => 442.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 16 loadbang NoneType
getChildren(): loadbang ==> [[17, 'Msg', 0]]
child exists, appending 17
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 16 loadbang
16 is connected to [(17, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 17 Msg 0
>>>> 17 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16]
PLACEMENT
place(): 17 => 442.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 17 Msg method
getChildren(): Msg ==> [[11, 'phasor~', 0]]
11 is not connected to anybody.
relocator() 17 11
442 58 and 334 10
getChildren(): [12]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 11 => 334 10
--> Relocated to: 334 10 and 442 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 18), ('*~', 19), ('phasor~', 21), ('-~', 22), ('cos~', 23), ('+~', 24), ('/~', 25), ('loadbang', 26), ('Msg', 27), ('osc~', 28), ('*~', 29), ('*~', 30), ('phasor~', 31), ('-~', 32), ('cos~', 33), ('+~', 34), ('/~', 35), ('loadbang', 36), ('Msg', 37), ('osc~', 38), ('*~', 39), ('*~', 40), ('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 18 => 550.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 18 osc~ NoneType
getChildren(): osc~ ==> [[19, '*~', 0]]
child exists, appending 19
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 18 osc~
18 is connected to [(19, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 19 *~ 0
>>>> 19 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18]
PLACEMENT
place(): 19 => 550.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 19 *~ method
getChildren(): *~ ==> [[20, '*~', 0]]
20 is not connected to anybody.
relocator() 19 20
550 58 and 334 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 20 => 334 154
--> Relocated to: 334 154 and 550 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 21), ('-~', 22), ('cos~', 23), ('+~', 24), ('/~', 25), ('loadbang', 26), ('Msg', 27), ('osc~', 28), ('*~', 29), ('*~', 30), ('phasor~', 31), ('-~', 32), ('cos~', 33), ('+~', 34), ('/~', 35), ('loadbang', 36), ('Msg', 37), ('osc~', 38), ('*~', 39), ('*~', 40), ('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 21 => 658.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 21 phasor~ NoneType
getChildren(): phasor~ ==> [[22, '-~', 0]]
child exists, appending 22
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 21 phasor~
21 is connected to [(22, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 22 -~ 0
>>>> 22 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21]
PLACEMENT
place(): 22 => 658.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 22 -~ method
getChildren(): -~ ==> [[23, 'cos~', 0]]
child exists, appending 23
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 22 -~
22 is connected to [(23, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 23 cos~ 0
>>>> 23 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22]
PLACEMENT
place(): 23 => 658.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 23 cos~ method
getChildren(): cos~ ==> [[24, '+~', 0]]
child exists, appending 24
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 23 cos~
23 is connected to [(24, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 24 +~ 0
>>>> 24 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23]
PLACEMENT
place(): 24 => 658.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 24 +~ method
getChildren(): +~ ==> [[25, '/~', 0]]
child exists, appending 25
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 24 +~
24 is connected to [(25, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 25 /~ 0
>>>> 25 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24]
PLACEMENT
place(): 25 => 658.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 25 /~ method
getChildren(): /~ ==> [[30, '*~', 0]]
child exists, appending 30
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 25 /~
25 is connected to [(30, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 30 *~ 0
>>>> 30 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25]
PLACEMENT
place(): 30 => 658.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 30 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 30 0
658 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 658 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 26), ('Msg', 27), ('osc~', 28), ('*~', 29), ('phasor~', 31), ('-~', 32), ('cos~', 33), ('+~', 34), ('/~', 35), ('loadbang', 36), ('Msg', 37), ('osc~', 38), ('*~', 39), ('*~', 40), ('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 26 => 766.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 26 loadbang NoneType
getChildren(): loadbang ==> [[27, 'Msg', 0]]
child exists, appending 27
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 26 loadbang
26 is connected to [(27, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 27 Msg 0
>>>> 27 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26]
PLACEMENT
place(): 27 => 766.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 27 Msg method
getChildren(): Msg ==> [[21, 'phasor~', 0]]
21 is not connected to anybody.
relocator() 27 21
766 58 and 658 10
getChildren(): [22]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 21 => 658 10
--> Relocated to: 658 10 and 766 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 28), ('*~', 29), ('phasor~', 31), ('-~', 32), ('cos~', 33), ('+~', 34), ('/~', 35), ('loadbang', 36), ('Msg', 37), ('osc~', 38), ('*~', 39), ('*~', 40), ('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 28 => 874.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 28 osc~ NoneType
getChildren(): osc~ ==> [[29, '*~', 0]]
child exists, appending 29
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 28 osc~
28 is connected to [(29, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 29 *~ 0
>>>> 29 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28]
PLACEMENT
place(): 29 => 874.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 29 *~ method
getChildren(): *~ ==> [[30, '*~', 0]]
30 is not connected to anybody.
relocator() 29 30
874 58 and 658 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 30 => 658 154
--> Relocated to: 658 154 and 874 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 31), ('-~', 32), ('cos~', 33), ('+~', 34), ('/~', 35), ('loadbang', 36), ('Msg', 37), ('osc~', 38), ('*~', 39), ('*~', 40), ('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 31 => 982.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 31 phasor~ NoneType
getChildren(): phasor~ ==> [[32, '-~', 0]]
child exists, appending 32
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 31 phasor~
31 is connected to [(32, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 32 -~ 0
>>>> 32 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31]
PLACEMENT
place(): 32 => 982.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 32 -~ method
getChildren(): -~ ==> [[33, 'cos~', 0]]
child exists, appending 33
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 32 -~
32 is connected to [(33, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 33 cos~ 0
>>>> 33 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32]
PLACEMENT
place(): 33 => 982.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 33 cos~ method
getChildren(): cos~ ==> [[34, '+~', 0]]
child exists, appending 34
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 33 cos~
33 is connected to [(34, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 34 +~ 0
>>>> 34 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33]
PLACEMENT
place(): 34 => 982.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 34 +~ method
getChildren(): +~ ==> [[35, '/~', 0]]
child exists, appending 35
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 34 +~
34 is connected to [(35, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 35 /~ 0
>>>> 35 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34]
PLACEMENT
place(): 35 => 982.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 35 /~ method
getChildren(): /~ ==> [[40, '*~', 0]]
child exists, appending 40
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 35 /~
35 is connected to [(40, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 40 *~ 0
>>>> 40 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35]
PLACEMENT
place(): 40 => 982.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 40 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 40 0
982 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 982 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 36), ('Msg', 37), ('osc~', 38), ('*~', 39), ('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 36 => 1090.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 36 loadbang NoneType
getChildren(): loadbang ==> [[37, 'Msg', 0]]
child exists, appending 37
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 36 loadbang
36 is connected to [(37, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 37 Msg 0
>>>> 37 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36]
PLACEMENT
place(): 37 => 1090.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 37 Msg method
getChildren(): Msg ==> [[31, 'phasor~', 0]]
31 is not connected to anybody.
relocator() 37 31
1090 58 and 982 10
getChildren(): [32]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 31 => 982 10
--> Relocated to: 982 10 and 1090 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 38), ('*~', 39), ('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 38 => 1198.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 38 osc~ NoneType
getChildren(): osc~ ==> [[39, '*~', 0]]
child exists, appending 39
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 38 osc~
38 is connected to [(39, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 39 *~ 0
>>>> 39 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38]
PLACEMENT
place(): 39 => 1198.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 39 *~ method
getChildren(): *~ ==> [[40, '*~', 0]]
40 is not connected to anybody.
relocator() 39 40
1198 58 and 982 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 40 => 982 154
--> Relocated to: 982 154 and 1198 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 41), ('-~', 42), ('cos~', 43), ('+~', 44), ('/~', 45), ('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('*~', 50), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 41 => 1306.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 41 phasor~ NoneType
getChildren(): phasor~ ==> [[42, '-~', 0]]
child exists, appending 42
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 41 phasor~
41 is connected to [(42, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 42 -~ 0
>>>> 42 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41]
PLACEMENT
place(): 42 => 1306.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 42 -~ method
getChildren(): -~ ==> [[43, 'cos~', 0]]
child exists, appending 43
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 42 -~
42 is connected to [(43, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 43 cos~ 0
>>>> 43 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42]
PLACEMENT
place(): 43 => 1306.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 43 cos~ method
getChildren(): cos~ ==> [[44, '+~', 0]]
child exists, appending 44
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 43 cos~
43 is connected to [(44, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 44 +~ 0
>>>> 44 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43]
PLACEMENT
place(): 44 => 1306.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 44 +~ method
getChildren(): +~ ==> [[45, '/~', 0]]
child exists, appending 45
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 44 +~
44 is connected to [(45, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 45 /~ 0
>>>> 45 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44]
PLACEMENT
place(): 45 => 1306.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 45 /~ method
getChildren(): /~ ==> [[50, '*~', 0]]
child exists, appending 50
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 45 /~
45 is connected to [(50, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 50 *~ 0
>>>> 50 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45]
PLACEMENT
place(): 50 => 1306.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 50 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 50 0
1306 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 1306 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 46), ('Msg', 47), ('osc~', 48), ('*~', 49), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 46 => 1414.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 46 loadbang NoneType
getChildren(): loadbang ==> [[47, 'Msg', 0]]
child exists, appending 47
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 46 loadbang
46 is connected to [(47, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 47 Msg 0
>>>> 47 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46]
PLACEMENT
place(): 47 => 1414.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 47 Msg method
getChildren(): Msg ==> [[41, 'phasor~', 0]]
41 is not connected to anybody.
relocator() 47 41
1414 58 and 1306 10
getChildren(): [42]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 41 => 1306 10
--> Relocated to: 1306 10 and 1414 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 48), ('*~', 49), ('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 48 => 1522.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 48 osc~ NoneType
getChildren(): osc~ ==> [[49, '*~', 0]]
child exists, appending 49
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 48 osc~
48 is connected to [(49, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 49 *~ 0
>>>> 49 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48]
PLACEMENT
place(): 49 => 1522.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 49 *~ method
getChildren(): *~ ==> [[50, '*~', 0]]
50 is not connected to anybody.
relocator() 49 50
1522 58 and 1306 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 50 => 1306 154
--> Relocated to: 1306 154 and 1522 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 51), ('-~', 52), ('cos~', 53), ('+~', 54), ('/~', 55), ('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('*~', 60), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 51 => 1630.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 51 phasor~ NoneType
getChildren(): phasor~ ==> [[52, '-~', 0]]
child exists, appending 52
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 51 phasor~
51 is connected to [(52, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 52 -~ 0
>>>> 52 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51]
PLACEMENT
place(): 52 => 1630.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 52 -~ method
getChildren(): -~ ==> [[53, 'cos~', 0]]
child exists, appending 53
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 52 -~
52 is connected to [(53, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 53 cos~ 0
>>>> 53 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52]
PLACEMENT
place(): 53 => 1630.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 53 cos~ method
getChildren(): cos~ ==> [[54, '+~', 0]]
child exists, appending 54
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 53 cos~
53 is connected to [(54, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 54 +~ 0
>>>> 54 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53]
PLACEMENT
place(): 54 => 1630.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 54 +~ method
getChildren(): +~ ==> [[55, '/~', 0]]
child exists, appending 55
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 54 +~
54 is connected to [(55, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 55 /~ 0
>>>> 55 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54]
PLACEMENT
place(): 55 => 1630.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 55 /~ method
getChildren(): /~ ==> [[60, '*~', 0]]
child exists, appending 60
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 55 /~
55 is connected to [(60, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 60 *~ 0
>>>> 60 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55]
PLACEMENT
place(): 60 => 1630.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 60 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 60 0
1630 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 1630 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 56), ('Msg', 57), ('osc~', 58), ('*~', 59), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 56 => 1738.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 56 loadbang NoneType
getChildren(): loadbang ==> [[57, 'Msg', 0]]
child exists, appending 57
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 56 loadbang
56 is connected to [(57, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 57 Msg 0
>>>> 57 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56]
PLACEMENT
place(): 57 => 1738.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 57 Msg method
getChildren(): Msg ==> [[51, 'phasor~', 0]]
51 is not connected to anybody.
relocator() 57 51
1738 58 and 1630 10
getChildren(): [52]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 51 => 1630 10
--> Relocated to: 1630 10 and 1738 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 58), ('*~', 59), ('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 58 => 1846.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 58 osc~ NoneType
getChildren(): osc~ ==> [[59, '*~', 0]]
child exists, appending 59
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 58 osc~
58 is connected to [(59, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 59 *~ 0
>>>> 59 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58]
PLACEMENT
place(): 59 => 1846.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 59 *~ method
getChildren(): *~ ==> [[60, '*~', 0]]
60 is not connected to anybody.
relocator() 59 60
1846 58 and 1630 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 60 => 1630 154
--> Relocated to: 1630 154 and 1846 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 61), ('-~', 62), ('cos~', 63), ('+~', 64), ('/~', 65), ('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('*~', 70), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 61 => 1954.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 61 phasor~ NoneType
getChildren(): phasor~ ==> [[62, '-~', 0]]
child exists, appending 62
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 61 phasor~
61 is connected to [(62, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 62 -~ 0
>>>> 62 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61]
PLACEMENT
place(): 62 => 1954.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 62 -~ method
getChildren(): -~ ==> [[63, 'cos~', 0]]
child exists, appending 63
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 62 -~
62 is connected to [(63, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 63 cos~ 0
>>>> 63 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62]
PLACEMENT
place(): 63 => 1954.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 63 cos~ method
getChildren(): cos~ ==> [[64, '+~', 0]]
child exists, appending 64
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 63 cos~
63 is connected to [(64, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 64 +~ 0
>>>> 64 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63]
PLACEMENT
place(): 64 => 1954.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 64 +~ method
getChildren(): +~ ==> [[65, '/~', 0]]
child exists, appending 65
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 64 +~
64 is connected to [(65, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 65 /~ 0
>>>> 65 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64]
PLACEMENT
place(): 65 => 1954.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 65 /~ method
getChildren(): /~ ==> [[70, '*~', 0]]
child exists, appending 70
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 65 /~
65 is connected to [(70, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 70 *~ 0
>>>> 70 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65]
PLACEMENT
place(): 70 => 1954.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 70 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 70 0
1954 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 1954 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 66), ('Msg', 67), ('osc~', 68), ('*~', 69), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 66 => 2062.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 66 loadbang NoneType
getChildren(): loadbang ==> [[67, 'Msg', 0]]
child exists, appending 67
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 66 loadbang
66 is connected to [(67, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 67 Msg 0
>>>> 67 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66]
PLACEMENT
place(): 67 => 2062.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 67 Msg method
getChildren(): Msg ==> [[61, 'phasor~', 0]]
61 is not connected to anybody.
relocator() 67 61
2062 58 and 1954 10
getChildren(): [62]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 61 => 1954 10
--> Relocated to: 1954 10 and 2062 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 68), ('*~', 69), ('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 68 => 2170.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 68 osc~ NoneType
getChildren(): osc~ ==> [[69, '*~', 0]]
child exists, appending 69
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 68 osc~
68 is connected to [(69, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 69 *~ 0
>>>> 69 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68]
PLACEMENT
place(): 69 => 2170.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 69 *~ method
getChildren(): *~ ==> [[70, '*~', 0]]
70 is not connected to anybody.
relocator() 69 70
2170 58 and 1954 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 70 => 1954 154
--> Relocated to: 1954 154 and 2170 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 71), ('-~', 72), ('cos~', 73), ('+~', 74), ('/~', 75), ('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('*~', 80), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 71 => 2278.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 71 phasor~ NoneType
getChildren(): phasor~ ==> [[72, '-~', 0]]
child exists, appending 72
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 71 phasor~
71 is connected to [(72, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 72 -~ 0
>>>> 72 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71]
PLACEMENT
place(): 72 => 2278.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 72 -~ method
getChildren(): -~ ==> [[73, 'cos~', 0]]
child exists, appending 73
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 72 -~
72 is connected to [(73, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 73 cos~ 0
>>>> 73 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72]
PLACEMENT
place(): 73 => 2278.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 73 cos~ method
getChildren(): cos~ ==> [[74, '+~', 0]]
child exists, appending 74
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 73 cos~
73 is connected to [(74, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 74 +~ 0
>>>> 74 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73]
PLACEMENT
place(): 74 => 2278.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 74 +~ method
getChildren(): +~ ==> [[75, '/~', 0]]
child exists, appending 75
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 74 +~
74 is connected to [(75, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 75 /~ 0
>>>> 75 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74]
PLACEMENT
place(): 75 => 2278.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 75 /~ method
getChildren(): /~ ==> [[80, '*~', 0]]
child exists, appending 80
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 75 /~
75 is connected to [(80, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 80 *~ 0
>>>> 80 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75]
PLACEMENT
place(): 80 => 2278.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 80 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 80 0
2278 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 2278 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 76), ('Msg', 77), ('osc~', 78), ('*~', 79), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 76 => 2386.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 76 loadbang NoneType
getChildren(): loadbang ==> [[77, 'Msg', 0]]
child exists, appending 77
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 76 loadbang
76 is connected to [(77, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 77 Msg 0
>>>> 77 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76]
PLACEMENT
place(): 77 => 2386.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 77 Msg method
getChildren(): Msg ==> [[71, 'phasor~', 0]]
71 is not connected to anybody.
relocator() 77 71
2386 58 and 2278 10
getChildren(): [72]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 71 => 2278 10
--> Relocated to: 2278 10 and 2386 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 78), ('*~', 79), ('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 78 => 2494.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 78 osc~ NoneType
getChildren(): osc~ ==> [[79, '*~', 0]]
child exists, appending 79
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 78 osc~
78 is connected to [(79, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 79 *~ 0
>>>> 79 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78]
PLACEMENT
place(): 79 => 2494.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 79 *~ method
getChildren(): *~ ==> [[80, '*~', 0]]
80 is not connected to anybody.
relocator() 79 80
2494 58 and 2278 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 80 => 2278 154
--> Relocated to: 2278 154 and 2494 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 81), ('-~', 82), ('cos~', 83), ('+~', 84), ('/~', 85), ('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('*~', 90), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 81 => 2602.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 81 phasor~ NoneType
getChildren(): phasor~ ==> [[82, '-~', 0]]
child exists, appending 82
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 81 phasor~
81 is connected to [(82, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 82 -~ 0
>>>> 82 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81]
PLACEMENT
place(): 82 => 2602.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 82 -~ method
getChildren(): -~ ==> [[83, 'cos~', 0]]
child exists, appending 83
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 82 -~
82 is connected to [(83, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 83 cos~ 0
>>>> 83 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82]
PLACEMENT
place(): 83 => 2602.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 83 cos~ method
getChildren(): cos~ ==> [[84, '+~', 0]]
child exists, appending 84
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 83 cos~
83 is connected to [(84, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 84 +~ 0
>>>> 84 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83]
PLACEMENT
place(): 84 => 2602.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 84 +~ method
getChildren(): +~ ==> [[85, '/~', 0]]
child exists, appending 85
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 84 +~
84 is connected to [(85, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 85 /~ 0
>>>> 85 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84]
PLACEMENT
place(): 85 => 2602.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 85 /~ method
getChildren(): /~ ==> [[90, '*~', 0]]
child exists, appending 90
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 85 /~
85 is connected to [(90, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 90 *~ 0
>>>> 90 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85]
PLACEMENT
place(): 90 => 2602.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 90 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 90 0
2602 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 2602 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 86), ('Msg', 87), ('osc~', 88), ('*~', 89), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 86 => 2710.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 86 loadbang NoneType
getChildren(): loadbang ==> [[87, 'Msg', 0]]
child exists, appending 87
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 86 loadbang
86 is connected to [(87, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 87 Msg 0
>>>> 87 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86]
PLACEMENT
place(): 87 => 2710.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 87 Msg method
getChildren(): Msg ==> [[81, 'phasor~', 0]]
81 is not connected to anybody.
relocator() 87 81
2710 58 and 2602 10
getChildren(): [82]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 81 => 2602 10
--> Relocated to: 2602 10 and 2710 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 88), ('*~', 89), ('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 88 => 2818.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 88 osc~ NoneType
getChildren(): osc~ ==> [[89, '*~', 0]]
child exists, appending 89
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 88 osc~
88 is connected to [(89, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 89 *~ 0
>>>> 89 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88]
PLACEMENT
place(): 89 => 2818.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 89 *~ method
getChildren(): *~ ==> [[90, '*~', 0]]
90 is not connected to anybody.
relocator() 89 90
2818 58 and 2602 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 90 => 2602 154
--> Relocated to: 2602 154 and 2818 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 91), ('-~', 92), ('cos~', 93), ('+~', 94), ('/~', 95), ('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('*~', 100), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 91 => 2926.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 91 phasor~ NoneType
getChildren(): phasor~ ==> [[92, '-~', 0]]
child exists, appending 92
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 91 phasor~
91 is connected to [(92, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 92 -~ 0
>>>> 92 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91]
PLACEMENT
place(): 92 => 2926.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 92 -~ method
getChildren(): -~ ==> [[93, 'cos~', 0]]
child exists, appending 93
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 92 -~
92 is connected to [(93, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 93 cos~ 0
>>>> 93 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92]
PLACEMENT
place(): 93 => 2926.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 93 cos~ method
getChildren(): cos~ ==> [[94, '+~', 0]]
child exists, appending 94
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 93 cos~
93 is connected to [(94, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 94 +~ 0
>>>> 94 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93]
PLACEMENT
place(): 94 => 2926.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 94 +~ method
getChildren(): +~ ==> [[95, '/~', 0]]
child exists, appending 95
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 94 +~
94 is connected to [(95, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 95 /~ 0
>>>> 95 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94]
PLACEMENT
place(): 95 => 2926.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 95 /~ method
getChildren(): /~ ==> [[100, '*~', 0]]
child exists, appending 100
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 95 /~
95 is connected to [(100, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 100 *~ 0
>>>> 100 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95]
PLACEMENT
place(): 100 => 2926.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 100 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 100 0
2926 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 2926 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 96), ('Msg', 97), ('osc~', 98), ('*~', 99), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 96 => 3034.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 96 loadbang NoneType
getChildren(): loadbang ==> [[97, 'Msg', 0]]
child exists, appending 97
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 96 loadbang
96 is connected to [(97, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 97 Msg 0
>>>> 97 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96]
PLACEMENT
place(): 97 => 3034.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 97 Msg method
getChildren(): Msg ==> [[91, 'phasor~', 0]]
91 is not connected to anybody.
relocator() 97 91
3034 58 and 2926 10
getChildren(): [92]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 91 => 2926 10
--> Relocated to: 2926 10 and 3034 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 98), ('*~', 99), ('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 98 => 3142.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 98 osc~ NoneType
getChildren(): osc~ ==> [[99, '*~', 0]]
child exists, appending 99
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 98 osc~
98 is connected to [(99, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 99 *~ 0
>>>> 99 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98]
PLACEMENT
place(): 99 => 3142.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 99 *~ method
getChildren(): *~ ==> [[100, '*~', 0]]
100 is not connected to anybody.
relocator() 99 100
3142 58 and 2926 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 100 => 2926 154
--> Relocated to: 2926 154 and 3142 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 101), ('-~', 102), ('cos~', 103), ('+~', 104), ('/~', 105), ('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('*~', 110), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 101 => 3250.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 101 phasor~ NoneType
getChildren(): phasor~ ==> [[102, '-~', 0]]
child exists, appending 102
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 101 phasor~
101 is connected to [(102, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 102 -~ 0
>>>> 102 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101]
PLACEMENT
place(): 102 => 3250.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 102 -~ method
getChildren(): -~ ==> [[103, 'cos~', 0]]
child exists, appending 103
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 102 -~
102 is connected to [(103, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 103 cos~ 0
>>>> 103 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102]
PLACEMENT
place(): 103 => 3250.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 103 cos~ method
getChildren(): cos~ ==> [[104, '+~', 0]]
child exists, appending 104
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 103 cos~
103 is connected to [(104, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 104 +~ 0
>>>> 104 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103]
PLACEMENT
place(): 104 => 3250.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 104 +~ method
getChildren(): +~ ==> [[105, '/~', 0]]
child exists, appending 105
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 104 +~
104 is connected to [(105, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 105 /~ 0
>>>> 105 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104]
PLACEMENT
place(): 105 => 3250.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 105 /~ method
getChildren(): /~ ==> [[110, '*~', 0]]
child exists, appending 110
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 105 /~
105 is connected to [(110, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 110 *~ 0
>>>> 110 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105]
PLACEMENT
place(): 110 => 3250.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 110 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 110 0
3250 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 3250 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 106), ('Msg', 107), ('osc~', 108), ('*~', 109), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 106 => 3358.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 106 loadbang NoneType
getChildren(): loadbang ==> [[107, 'Msg', 0]]
child exists, appending 107
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 106 loadbang
106 is connected to [(107, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 107 Msg 0
>>>> 107 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106]
PLACEMENT
place(): 107 => 3358.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 107 Msg method
getChildren(): Msg ==> [[101, 'phasor~', 0]]
101 is not connected to anybody.
relocator() 107 101
3358 58 and 3250 10
getChildren(): [102]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 101 => 3250 10
--> Relocated to: 3250 10 and 3358 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 108), ('*~', 109), ('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 108 => 3466.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 108 osc~ NoneType
getChildren(): osc~ ==> [[109, '*~', 0]]
child exists, appending 109
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 108 osc~
108 is connected to [(109, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 109 *~ 0
>>>> 109 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108]
PLACEMENT
place(): 109 => 3466.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 109 *~ method
getChildren(): *~ ==> [[110, '*~', 0]]
110 is not connected to anybody.
relocator() 109 110
3466 58 and 3250 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 110 => 3250 154
--> Relocated to: 3250 154 and 3466 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 111), ('-~', 112), ('cos~', 113), ('+~', 114), ('/~', 115), ('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('*~', 120), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 111 => 3574.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 111 phasor~ NoneType
getChildren(): phasor~ ==> [[112, '-~', 0]]
child exists, appending 112
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 111 phasor~
111 is connected to [(112, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 112 -~ 0
>>>> 112 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111]
PLACEMENT
place(): 112 => 3574.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 112 -~ method
getChildren(): -~ ==> [[113, 'cos~', 0]]
child exists, appending 113
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 112 -~
112 is connected to [(113, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 113 cos~ 0
>>>> 113 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112]
PLACEMENT
place(): 113 => 3574.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 113 cos~ method
getChildren(): cos~ ==> [[114, '+~', 0]]
child exists, appending 114
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 113 cos~
113 is connected to [(114, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 114 +~ 0
>>>> 114 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113]
PLACEMENT
place(): 114 => 3574.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 114 +~ method
getChildren(): +~ ==> [[115, '/~', 0]]
child exists, appending 115
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 114 +~
114 is connected to [(115, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 115 /~ 0
>>>> 115 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114]
PLACEMENT
place(): 115 => 3574.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 115 /~ method
getChildren(): /~ ==> [[120, '*~', 0]]
child exists, appending 120
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 115 /~
115 is connected to [(120, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 120 *~ 0
>>>> 120 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115]
PLACEMENT
place(): 120 => 3574.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 120 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 120 0
3574 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 3574 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 116), ('Msg', 117), ('osc~', 118), ('*~', 119), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 116 => 3682.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 116 loadbang NoneType
getChildren(): loadbang ==> [[117, 'Msg', 0]]
child exists, appending 117
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 116 loadbang
116 is connected to [(117, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 117 Msg 0
>>>> 117 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116]
PLACEMENT
place(): 117 => 3682.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 117 Msg method
getChildren(): Msg ==> [[111, 'phasor~', 0]]
111 is not connected to anybody.
relocator() 117 111
3682 58 and 3574 10
getChildren(): [112]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 111 => 3574 10
--> Relocated to: 3574 10 and 3682 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 118), ('*~', 119), ('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 118 => 3790.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 118 osc~ NoneType
getChildren(): osc~ ==> [[119, '*~', 0]]
child exists, appending 119
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 118 osc~
118 is connected to [(119, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 119 *~ 0
>>>> 119 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118]
PLACEMENT
place(): 119 => 3790.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 119 *~ method
getChildren(): *~ ==> [[120, '*~', 0]]
120 is not connected to anybody.
relocator() 119 120
3790 58 and 3574 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 120 => 3574 154
--> Relocated to: 3574 154 and 3790 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 121), ('-~', 122), ('cos~', 123), ('+~', 124), ('/~', 125), ('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('*~', 130), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 121 => 3898.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 121 phasor~ NoneType
getChildren(): phasor~ ==> [[122, '-~', 0]]
child exists, appending 122
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 121 phasor~
121 is connected to [(122, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 122 -~ 0
>>>> 122 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121]
PLACEMENT
place(): 122 => 3898.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 122 -~ method
getChildren(): -~ ==> [[123, 'cos~', 0]]
child exists, appending 123
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 122 -~
122 is connected to [(123, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 123 cos~ 0
>>>> 123 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122]
PLACEMENT
place(): 123 => 3898.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 123 cos~ method
getChildren(): cos~ ==> [[124, '+~', 0]]
child exists, appending 124
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 123 cos~
123 is connected to [(124, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 124 +~ 0
>>>> 124 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123]
PLACEMENT
place(): 124 => 3898.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 124 +~ method
getChildren(): +~ ==> [[125, '/~', 0]]
child exists, appending 125
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 124 +~
124 is connected to [(125, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 125 /~ 0
>>>> 125 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124]
PLACEMENT
place(): 125 => 3898.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 125 /~ method
getChildren(): /~ ==> [[130, '*~', 0]]
child exists, appending 130
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 125 /~
125 is connected to [(130, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 130 *~ 0
>>>> 130 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125]
PLACEMENT
place(): 130 => 3898.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 130 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 130 0
3898 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 3898 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 126), ('Msg', 127), ('osc~', 128), ('*~', 129), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 126 => 4006.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 126 loadbang NoneType
getChildren(): loadbang ==> [[127, 'Msg', 0]]
child exists, appending 127
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 126 loadbang
126 is connected to [(127, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 127 Msg 0
>>>> 127 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126]
PLACEMENT
place(): 127 => 4006.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 127 Msg method
getChildren(): Msg ==> [[121, 'phasor~', 0]]
121 is not connected to anybody.
relocator() 127 121
4006 58 and 3898 10
getChildren(): [122]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 121 => 3898 10
--> Relocated to: 3898 10 and 4006 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 128), ('*~', 129), ('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 128 => 4114.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 128 osc~ NoneType
getChildren(): osc~ ==> [[129, '*~', 0]]
child exists, appending 129
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 128 osc~
128 is connected to [(129, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 129 *~ 0
>>>> 129 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128]
PLACEMENT
place(): 129 => 4114.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 129 *~ method
getChildren(): *~ ==> [[130, '*~', 0]]
130 is not connected to anybody.
relocator() 129 130
4114 58 and 3898 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 130 => 3898 154
--> Relocated to: 3898 154 and 4114 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 131), ('-~', 132), ('cos~', 133), ('+~', 134), ('/~', 135), ('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('*~', 140), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 131 => 4222.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 131 phasor~ NoneType
getChildren(): phasor~ ==> [[132, '-~', 0]]
child exists, appending 132
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 131 phasor~
131 is connected to [(132, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 132 -~ 0
>>>> 132 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131]
PLACEMENT
place(): 132 => 4222.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 132 -~ method
getChildren(): -~ ==> [[133, 'cos~', 0]]
child exists, appending 133
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 132 -~
132 is connected to [(133, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 133 cos~ 0
>>>> 133 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131, 132]
PLACEMENT
place(): 133 => 4222.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 133 cos~ method
getChildren(): cos~ ==> [[134, '+~', 0]]
child exists, appending 134
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 133 cos~
133 is connected to [(134, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 134 +~ 0
>>>> 134 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131, 132, 133]
PLACEMENT
place(): 134 => 4222.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 134 +~ method
getChildren(): +~ ==> [[135, '/~', 0]]
child exists, appending 135
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 134 +~
134 is connected to [(135, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 135 /~ 0
>>>> 135 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131, 132, 133, 134]
PLACEMENT
place(): 135 => 4222.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 135 /~ method
getChildren(): /~ ==> [[140, '*~', 0]]
child exists, appending 140
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 135 /~
135 is connected to [(140, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 140 *~ 0
>>>> 140 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131, 132, 133, 134, 135]
PLACEMENT
place(): 140 => 4222.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 140 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 140 0
4222 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 4222 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 136), ('Msg', 137), ('osc~', 138), ('*~', 139), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 136 => 4330.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 136 loadbang NoneType
getChildren(): loadbang ==> [[137, 'Msg', 0]]
child exists, appending 137
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 136 loadbang
136 is connected to [(137, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 137 Msg 0
>>>> 137 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131, 132, 133, 134, 135, 140, 0, 136]
PLACEMENT
place(): 137 => 4330.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 137 Msg method
getChildren(): Msg ==> [[131, 'phasor~', 0]]
131 is not connected to anybody.
relocator() 137 131
4330 58 and 4222 10
getChildren(): [132]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 131 => 4222 10
--> Relocated to: 4222 10 and 4330 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 138), ('*~', 139), ('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 138 => 4438.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 138 osc~ NoneType
getChildren(): osc~ ==> [[139, '*~', 0]]
child exists, appending 139
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 138 osc~
138 is connected to [(139, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 139 *~ 0
>>>> 139 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131, 132, 133, 134, 135, 140, 0, 136, 137, 131, 138]
PLACEMENT
place(): 139 => 4438.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 139 *~ method
getChildren(): *~ ==> [[140, '*~', 0]]
140 is not connected to anybody.
relocator() 139 140
4438 58 and 4222 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 140 => 4222 154
--> Relocated to: 4222 154 and 4438 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('phasor~', 141), ('-~', 142), ('cos~', 143), ('+~', 144), ('/~', 145), ('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149), ('*~', 150)]
place(): 141 => 4546.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 141 phasor~ NoneType
getChildren(): phasor~ ==> [[142, '-~', 0]]
child exists, appending 142
done with child loop 1
`````````` (end STEP 2) for  phasor~ ``````````
==> passing to step3
========== STEP 3 ==========
input 141 phasor~
141 is connected to [(142, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for phasor~
>>>> Child #0 142 -~ 0
>>>> 142 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131, 132, 133, 134, 135, 140, 0, 136, 137, 131, 138, 139, 140, 141]
PLACEMENT
place(): 142 => 4546.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 142 -~ method
getChildren(): -~ ==> [[143, 'cos~', 0]]
child exists, appending 143
done with child loop 1
`````````` (end STEP 2) for  -~ ``````````
==> passing to step3
========== STEP 3 ==========
input 142 -~
142 is connected to [(143, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for -~
>>>> Child #0 143 cos~ 0
>>>> 143 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131, 132, 133, 134, 135, 140, 0, 136, 137, 131, 138, 139, 140, 141, 142]
PLACEMENT
place(): 143 => 4546.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 143 cos~ method
getChildren(): cos~ ==> [[144, '+~', 0]]
child exists, appending 144
done with child loop 1
`````````` (end STEP 2) for  cos~ ``````````
==> passing to step3
========== STEP 3 ==========
input 143 cos~
143 is connected to [(144, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for cos~
>>>> Child #0 144 +~ 0
>>>> 144 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131, 132, 133, 134, 135, 140, 0, 136, 137, 131, 138, 139, 140, 141, 142, 143]
PLACEMENT
place(): 144 => 4546.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 144 +~ method
getChildren(): +~ ==> [[145, '/~', 0]]
child exists, appending 145
done with child loop 1
`````````` (end STEP 2) for  +~ ``````````
==> passing to step3
========== STEP 3 ==========
input 144 +~
144 is connected to [(145, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for +~
>>>> Child #0 145 /~ 0
>>>> 145 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131, 132, 133, 134, 135, 140, 0, 136, 137, 131, 138, 139, 140, 141, 142, 143, 144]
PLACEMENT
place(): 145 => 4546.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 145 /~ method
getChildren(): /~ ==> [[150, '*~', 0]]
child exists, appending 150
done with child loop 1
`````````` (end STEP 2) for  /~ ``````````
==> passing to step3
========== STEP 3 ==========
input 145 /~
145 is connected to [(150, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for /~
>>>> Child #0 150 *~ 0
>>>> 150 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131, 132, 133, 134, 135, 140, 0, 136, 137, 131, 138, 139, 140, 141, 142, 143, 144, 145]
PLACEMENT
place(): 150 => 4546.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 150 *~ method
getChildren(): *~ ==> [[0, 'dac~', 0]]
0 is not connected to anybody.
relocator() 150 0
4546 154 and 10 10
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): dac~
place(): 0 => 10 10
--> Relocated to: 10 10 and 4546 154
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 146), ('Msg', 147), ('osc~', 148), ('*~', 149)]
place(): 146 => 4654.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 146 loadbang NoneType
getChildren(): loadbang ==> [[147, 'Msg', 0]]
child exists, appending 147
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 146 loadbang
146 is connected to [(147, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 147 Msg 0
>>>> 147 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131, 132, 133, 134, 135, 140, 0, 136, 137, 131, 138, 139, 140, 141, 142, 143, 144, 145, 150, 0, 146]
PLACEMENT
place(): 147 => 4654.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 147 Msg method
getChildren(): Msg ==> [[141, 'phasor~', 0]]
141 is not connected to anybody.
relocator() 147 141
4654 58 and 4546 10
getChildren(): [142]
UNEQUAL_Y
child is ABOVE the parent
move(): phasor~
place(): 141 => 4546 10
--> Relocated to: 4546 10 and 4654 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 148), ('*~', 149)]
place(): 148 => 4762.0 10
'''''''''' BEGIN STEP 2 ''''''''''
input 148 osc~ NoneType
getChildren(): osc~ ==> [[149, '*~', 0]]
child exists, appending 149
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 148 osc~
148 is connected to [(149, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 149 *~ 0
>>>> 149 NOT IN [0, 1, 2, 3, 4, 5, 10, 0, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 0, 16, 17, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 0, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 0, 36, 37, 31, 38, 39, 40, 41, 42, 43, 44, 45, 50, 0, 46, 47, 41, 48, 49, 50, 51, 52, 53, 54, 55, 60, 0, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 70, 0, 66, 67, 61, 68, 69, 70, 71, 72, 73, 74, 75, 80, 0, 76, 77, 71, 78, 79, 80, 81, 82, 83, 84, 85, 90, 0, 86, 87, 81, 88, 89, 90, 91, 92, 93, 94, 95, 100, 0, 96, 97, 91, 98, 99, 100, 101, 102, 103, 104, 105, 110, 0, 106, 107, 101, 108, 109, 110, 111, 112, 113, 114, 115, 120, 0, 116, 117, 111, 118, 119, 120, 121, 122, 123, 124, 125, 130, 0, 126, 127, 121, 128, 129, 130, 131, 132, 133, 134, 135, 140, 0, 136, 137, 131, 138, 139, 140, 141, 142, 143, 144, 145, 150, 0, 146, 147, 141, 148]
PLACEMENT
place(): 149 => 4762.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 149 *~ method
getChildren(): *~ ==> [[150, '*~', 0]]
150 is not connected to anybody.
relocator() 149 150
4762 58 and 4546 154
getChildren(): [0]
UNEQUAL_Y
child is BELOW the parent
move(): *~
place(): 150 => 4546 154
--> Relocated to: 4546 154 and 4762 58
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  *~ ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for /~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for +~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for cos~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for -~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for phasor~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
------------- end -----------
==> END contexts.py <===================================
==> BEGIN holamundo.py <===================================
Found  darwin  platform.
Locating pd...
Found pd at:  /Applications/Pd-0.52-2.app/Contents/Resources/bin/pd
Initialized Arrange graph placing algorithm.
========= begin arrange algorithm arrange 1b ==========
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 0), ('Msg', 1), ('print', 2)]
place(): 0 => 10 10
'''''''''' BEGIN STEP 2 ''''''''''
input 0 loadbang NoneType
getChildren(): loadbang ==> [[1, 'Msg', 0]]
child exists, appending 1
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 0 loadbang
0 is connected to [(1, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 1 Msg 0
>>>> 1 NOT IN [0]
PLACEMENT
place(): 1 => 10.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 1 Msg method
getChildren(): Msg ==> [[2, 'print', 0]]
child exists, appending 2
done with child loop 1
`````````` (end STEP 2) for  Msg ``````````
==> passing to step3
========== STEP 3 ==========
input 1 Msg
1 is connected to [(2, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for Msg
>>>> Child #0 2 print 0
>>>> 2 NOT IN [0, 1]
PLACEMENT
place(): 2 => 10.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 2 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for Msg
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
------------- end -----------
==> END holamundo.py <===================================
==> BEGIN multiple_objects.py <===================================
Found  darwin  platform.
Locating pd...
Found pd at:  /Applications/Pd-0.52-2.app/Contents/Resources/bin/pd
Initialized Arrange graph placing algorithm.
========= begin arrange algorithm arrange 1b ==========
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 0), ('print', 1), ('print', 2), ('bng', 3), ('print', 4), ('print', 5), ('bng', 6), ('print', 7), ('print', 8), ('bng', 9), ('print', 10), ('print', 11), ('bng', 12), ('print', 13), ('print', 14), ('bng', 15), ('print', 16), ('print', 17), ('bng', 18), ('print', 19), ('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 0 => 10 10
'''''''''' BEGIN STEP 2 ''''''''''
input 0 bng NoneType
getChildren(): bng ==> [[1, 'print', 0]]
child exists, appending 1
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 0 bng
0 is connected to [(1, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 1 print 0
>>>> 1 NOT IN [0]
PLACEMENT
place(): 1 => 10.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 1 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 2), ('bng', 3), ('print', 4), ('print', 5), ('bng', 6), ('print', 7), ('print', 8), ('bng', 9), ('print', 10), ('print', 11), ('bng', 12), ('print', 13), ('print', 14), ('bng', 15), ('print', 16), ('print', 17), ('bng', 18), ('print', 19), ('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 2 => 10.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 2 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 3), ('print', 4), ('print', 5), ('bng', 6), ('print', 7), ('print', 8), ('bng', 9), ('print', 10), ('print', 11), ('bng', 12), ('print', 13), ('print', 14), ('bng', 15), ('print', 16), ('print', 17), ('bng', 18), ('print', 19), ('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 3 => 10.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 3 bng NoneType
getChildren(): bng ==> [[4, 'print', 0]]
child exists, appending 4
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 3 bng
3 is connected to [(4, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 4 print 0
>>>> 4 NOT IN [0, 1, 2, 3]
PLACEMENT
place(): 4 => 10.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 4 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 5), ('bng', 6), ('print', 7), ('print', 8), ('bng', 9), ('print', 10), ('print', 11), ('bng', 12), ('print', 13), ('print', 14), ('bng', 15), ('print', 16), ('print', 17), ('bng', 18), ('print', 19), ('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 5 => 10.0 130
'''''''''' BEGIN STEP 2 ''''''''''
input 5 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 6), ('print', 7), ('print', 8), ('bng', 9), ('print', 10), ('print', 11), ('bng', 12), ('print', 13), ('print', 14), ('bng', 15), ('print', 16), ('print', 17), ('bng', 18), ('print', 19), ('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 6 => 10.0 154
'''''''''' BEGIN STEP 2 ''''''''''
input 6 bng NoneType
getChildren(): bng ==> [[7, 'print', 0]]
child exists, appending 7
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 6 bng
6 is connected to [(7, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 7 print 0
>>>> 7 NOT IN [0, 1, 2, 3, 4, 5, 6]
PLACEMENT
place(): 7 => 10.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 7 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 8), ('bng', 9), ('print', 10), ('print', 11), ('bng', 12), ('print', 13), ('print', 14), ('bng', 15), ('print', 16), ('print', 17), ('bng', 18), ('print', 19), ('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 8 => 10.0 202
'''''''''' BEGIN STEP 2 ''''''''''
input 8 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 9), ('print', 10), ('print', 11), ('bng', 12), ('print', 13), ('print', 14), ('bng', 15), ('print', 16), ('print', 17), ('bng', 18), ('print', 19), ('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 9 => 10.0 226
'''''''''' BEGIN STEP 2 ''''''''''
input 9 bng NoneType
getChildren(): bng ==> [[10, 'print', 0]]
child exists, appending 10
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 9 bng
9 is connected to [(10, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 10 print 0
>>>> 10 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
PLACEMENT
place(): 10 => 10.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 10 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 11), ('bng', 12), ('print', 13), ('print', 14), ('bng', 15), ('print', 16), ('print', 17), ('bng', 18), ('print', 19), ('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 11 => 10.0 274
'''''''''' BEGIN STEP 2 ''''''''''
input 11 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 12), ('print', 13), ('print', 14), ('bng', 15), ('print', 16), ('print', 17), ('bng', 18), ('print', 19), ('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 12 => 10.0 298
'''''''''' BEGIN STEP 2 ''''''''''
input 12 bng NoneType
getChildren(): bng ==> [[13, 'print', 0]]
child exists, appending 13
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 12 bng
12 is connected to [(13, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 13 print 0
>>>> 13 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
PLACEMENT
place(): 13 => 10.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 13 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 14), ('bng', 15), ('print', 16), ('print', 17), ('bng', 18), ('print', 19), ('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 14 => 10.0 346
'''''''''' BEGIN STEP 2 ''''''''''
input 14 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 15), ('print', 16), ('print', 17), ('bng', 18), ('print', 19), ('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 15 => 10.0 370
'''''''''' BEGIN STEP 2 ''''''''''
input 15 bng NoneType
getChildren(): bng ==> [[16, 'print', 0]]
child exists, appending 16
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 15 bng
15 is connected to [(16, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 16 print 0
>>>> 16 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
PLACEMENT
place(): 16 => 10.0 418
'''''''''' BEGIN STEP 2 ''''''''''
input 16 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 17), ('bng', 18), ('print', 19), ('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 17 => 10.0 418
'''''''''' BEGIN STEP 2 ''''''''''
input 17 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 18), ('print', 19), ('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 18 => 10.0 442
'''''''''' BEGIN STEP 2 ''''''''''
input 18 bng NoneType
getChildren(): bng ==> [[19, 'print', 0]]
child exists, appending 19
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 18 bng
18 is connected to [(19, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 19 print 0
>>>> 19 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
PLACEMENT
place(): 19 => 10.0 490
'''''''''' BEGIN STEP 2 ''''''''''
input 19 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 20), ('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 20 => 10.0 490
'''''''''' BEGIN STEP 2 ''''''''''
input 20 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 21), ('print', 22), ('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 21 => 10.0 514
'''''''''' BEGIN STEP 2 ''''''''''
input 21 bng NoneType
getChildren(): bng ==> [[22, 'print', 0]]
child exists, appending 22
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 21 bng
21 is connected to [(22, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 22 print 0
>>>> 22 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
PLACEMENT
place(): 22 => 10.0 562
'''''''''' BEGIN STEP 2 ''''''''''
input 22 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 23), ('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 23 => 10.0 562
'''''''''' BEGIN STEP 2 ''''''''''
input 23 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 24), ('print', 25), ('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 24 => 10.0 586
'''''''''' BEGIN STEP 2 ''''''''''
input 24 bng NoneType
getChildren(): bng ==> [[25, 'print', 0]]
child exists, appending 25
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 24 bng
24 is connected to [(25, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 25 print 0
>>>> 25 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
PLACEMENT
place(): 25 => 10.0 634
'''''''''' BEGIN STEP 2 ''''''''''
input 25 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 26), ('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 26 => 10.0 634
'''''''''' BEGIN STEP 2 ''''''''''
input 26 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 27), ('print', 28), ('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 27 => 10.0 658
'''''''''' BEGIN STEP 2 ''''''''''
input 27 bng NoneType
getChildren(): bng ==> [[28, 'print', 0]]
child exists, appending 28
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 27 bng
27 is connected to [(28, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 28 print 0
>>>> 28 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
PLACEMENT
place(): 28 => 10.0 706
'''''''''' BEGIN STEP 2 ''''''''''
input 28 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 29), ('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 29 => 10.0 706
'''''''''' BEGIN STEP 2 ''''''''''
input 29 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 30), ('print', 31), ('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 30 => 10.0 730
'''''''''' BEGIN STEP 2 ''''''''''
input 30 bng NoneType
getChildren(): bng ==> [[31, 'print', 0]]
child exists, appending 31
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 30 bng
30 is connected to [(31, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 31 print 0
>>>> 31 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
PLACEMENT
place(): 31 => 10.0 778
'''''''''' BEGIN STEP 2 ''''''''''
input 31 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 32), ('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 32 => 10.0 778
'''''''''' BEGIN STEP 2 ''''''''''
input 32 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 33), ('print', 34), ('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 33 => 10.0 802
'''''''''' BEGIN STEP 2 ''''''''''
input 33 bng NoneType
getChildren(): bng ==> [[34, 'print', 0]]
child exists, appending 34
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 33 bng
33 is connected to [(34, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 34 print 0
>>>> 34 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
PLACEMENT
place(): 34 => 10.0 850
'''''''''' BEGIN STEP 2 ''''''''''
input 34 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 35), ('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 35 => 10.0 850
'''''''''' BEGIN STEP 2 ''''''''''
input 35 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 36), ('print', 37), ('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 36 => 10.0 874
'''''''''' BEGIN STEP 2 ''''''''''
input 36 bng NoneType
getChildren(): bng ==> [[37, 'print', 0]]
child exists, appending 37
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 36 bng
36 is connected to [(37, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 37 print 0
>>>> 37 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
PLACEMENT
place(): 37 => 10.0 922
'''''''''' BEGIN STEP 2 ''''''''''
input 37 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 38), ('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 38 => 10.0 922
'''''''''' BEGIN STEP 2 ''''''''''
input 38 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 39), ('print', 40), ('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 39 => 10.0 946
'''''''''' BEGIN STEP 2 ''''''''''
input 39 bng NoneType
getChildren(): bng ==> [[40, 'print', 0]]
child exists, appending 40
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 39 bng
39 is connected to [(40, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 40 print 0
>>>> 40 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]
PLACEMENT
place(): 40 => 10.0 994
'''''''''' BEGIN STEP 2 ''''''''''
input 40 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 41), ('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 41 => 10.0 994
'''''''''' BEGIN STEP 2 ''''''''''
input 41 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 42), ('print', 43), ('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 42 => 10.0 1018
'''''''''' BEGIN STEP 2 ''''''''''
input 42 bng NoneType
getChildren(): bng ==> [[43, 'print', 0]]
child exists, appending 43
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 42 bng
42 is connected to [(43, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 43 print 0
>>>> 43 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42]
PLACEMENT
place(): 43 => 10.0 1066
'''''''''' BEGIN STEP 2 ''''''''''
input 43 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 44), ('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 44 => 10.0 1066
'''''''''' BEGIN STEP 2 ''''''''''
input 44 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 45), ('print', 46), ('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 45 => 10.0 1090
'''''''''' BEGIN STEP 2 ''''''''''
input 45 bng NoneType
getChildren(): bng ==> [[46, 'print', 0]]
child exists, appending 46
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 45 bng
45 is connected to [(46, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 46 print 0
>>>> 46 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]
PLACEMENT
place(): 46 => 10.0 1138
'''''''''' BEGIN STEP 2 ''''''''''
input 46 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 47), ('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 47 => 10.0 1138
'''''''''' BEGIN STEP 2 ''''''''''
input 47 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 48), ('print', 49), ('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 48 => 10.0 1162
'''''''''' BEGIN STEP 2 ''''''''''
input 48 bng NoneType
getChildren(): bng ==> [[49, 'print', 0]]
child exists, appending 49
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 48 bng
48 is connected to [(49, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 49 print 0
>>>> 49 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48]
PLACEMENT
place(): 49 => 10.0 1210
'''''''''' BEGIN STEP 2 ''''''''''
input 49 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 50), ('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 50 => 10.0 1210
'''''''''' BEGIN STEP 2 ''''''''''
input 50 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 51), ('print', 52), ('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 51 => 10.0 1234
'''''''''' BEGIN STEP 2 ''''''''''
input 51 bng NoneType
getChildren(): bng ==> [[52, 'print', 0]]
child exists, appending 52
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 51 bng
51 is connected to [(52, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 52 print 0
>>>> 52 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]
PLACEMENT
place(): 52 => 10.0 1282
'''''''''' BEGIN STEP 2 ''''''''''
input 52 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 53), ('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 53 => 10.0 1282
'''''''''' BEGIN STEP 2 ''''''''''
input 53 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 54), ('print', 55), ('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 54 => 10.0 1306
'''''''''' BEGIN STEP 2 ''''''''''
input 54 bng NoneType
getChildren(): bng ==> [[55, 'print', 0]]
child exists, appending 55
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 54 bng
54 is connected to [(55, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 55 print 0
>>>> 55 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]
PLACEMENT
place(): 55 => 10.0 1354
'''''''''' BEGIN STEP 2 ''''''''''
input 55 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 56), ('bng', 57), ('print', 58), ('print', 59)]
place(): 56 => 10.0 1354
'''''''''' BEGIN STEP 2 ''''''''''
input 56 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('bng', 57), ('print', 58), ('print', 59)]
place(): 57 => 10.0 1378
'''''''''' BEGIN STEP 2 ''''''''''
input 57 bng NoneType
getChildren(): bng ==> [[58, 'print', 0]]
child exists, appending 58
done with child loop 1
`````````` (end STEP 2) for  bng ``````````
==> passing to step3
========== STEP 3 ==========
input 57 bng
57 is connected to [(58, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for bng
>>>> Child #0 58 print 0
>>>> 58 NOT IN [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]
PLACEMENT
place(): 58 => 10.0 1426
'''''''''' BEGIN STEP 2 ''''''''''
input 58 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for bng
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('print', 59)]
place(): 59 => 10.0 1426
'''''''''' BEGIN STEP 2 ''''''''''
input 59 print NoneType
getChildren(): print ==> []
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
------------- end -----------
==> END multiple_objects.py <===================================
==> BEGIN simple_conn.py <===================================
Found  darwin  platform.
Locating pd...
Found pd at:  /Applications/Pd-0.52-2.app/Contents/Resources/bin/pd
Initialized Arrange graph placing algorithm.
========= begin arrange algorithm arrange 1b ==========
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 0), ('t', 1), ('Msg', 2), ('Msg', 3), ('print', 4)]
place(): 0 => 10 10
'''''''''' BEGIN STEP 2 ''''''''''
input 0 loadbang NoneType
getChildren(): loadbang ==> [[1, 't', 0]]
child exists, appending 1
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 0 loadbang
0 is connected to [(1, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 1 t 0
>>>> 1 NOT IN [0]
PLACEMENT
place(): 1 => 10.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 1 t method
getChildren(): t ==> [[2, 'Msg', 1], [3, 'Msg', 0]]
child exists, appending 2
child exists, appending 3
done with child loop 2
`````````` (end STEP 2) for  t ``````````
==> passing to step3
========== STEP 3 ==========
input 1 t
1 is connected to [(2, 1), (3, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for t
>>>> Child #0 2 Msg 1
>>>> 2 NOT IN [0, 1]
PLACEMENT
place(): 2 => 118.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 2 Msg method
getChildren(): Msg ==> [[4, 'print', 0]]
child exists, appending 4
done with child loop 1
`````````` (end STEP 2) for  Msg ``````````
==> passing to step3
========== STEP 3 ==========
input 2 Msg
2 is connected to [(4, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for Msg
>>>> Child #0 4 print 0
>>>> 4 NOT IN [0, 1, 2]
PLACEMENT
place(): 4 => 118.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 4 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for Msg
---------- (end STEP 3) ----------
>>>> Child #1 3 Msg 0
>>>> 3 NOT IN [0, 1, 2, 4]
PLACEMENT
place(): 3 => 118.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 3 Msg method
getChildren(): Msg ==> [[4, 'print', 0]]
4 is not connected to anybody.
relocator() 3 4
118 106 and 118 82
getChildren(): []
UNEQUAL_Y
child is ABOVE the parent
move(): print
place(): 4 => 118 82
--> Relocated to: 118 82 and 118 106
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  Msg ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for t
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
------------- end -----------
==> END simple_conn.py <===================================
==> BEGIN simpleaudio.py <===================================
Found  darwin  platform.
Locating pd...
Found pd at:  /Applications/Pd-0.52-2.app/Contents/Resources/bin/pd
Initialized Arrange graph placing algorithm.
========= begin arrange algorithm arrange 1b ==========
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('osc~', 0), ('*~', 1), ('dac~', 2)]
place(): 0 => 10 10
'''''''''' BEGIN STEP 2 ''''''''''
input 0 osc~ NoneType
getChildren(): osc~ ==> [[1, '*~', 0]]
child exists, appending 1
done with child loop 1
`````````` (end STEP 2) for  osc~ ``````````
==> passing to step3
========== STEP 3 ==========
input 0 osc~
0 is connected to [(1, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for osc~
>>>> Child #0 1 *~ 0
>>>> 1 NOT IN [0]
PLACEMENT
place(): 1 => 10.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 1 *~ method
getChildren(): *~ ==> [[2, 'dac~', 0], [2, 'dac~', 0], [2, 'dac~', 0]]
child exists, appending 2
done with child loop 1
`````````` (end STEP 2) for  *~ ``````````
==> passing to step3
========== STEP 3 ==========
input 1 *~
1 is connected to [(2, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for *~
>>>> Child #0 2 dac~ 0
>>>> 2 NOT IN [0, 1]
PLACEMENT
place(): 2 => 10.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 2 dac~ method
getChildren(): dac~ ==> []
<<<<<<<<<< end child loop for *~
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for osc~
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
------------- end -----------
==> END simpleaudio.py <===================================
==> BEGIN test_connections.py <===================================
Found  darwin  platform.
Locating pd...
Found pd at:  /Applications/Pd-0.52-2.app/Contents/Resources/bin/pd
Initialized Arrange graph placing algorithm.
========= begin arrange algorithm arrange 1b ==========
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input [('loadbang', 0), ('t', 1), ('until', 2), ('f', 3), ('+', 4), ('sel', 5), ('print', 6), ('Msg', 7)]
place(): 0 => 10 10
'''''''''' BEGIN STEP 2 ''''''''''
input 0 loadbang NoneType
getChildren(): loadbang ==> [[1, 't', 0]]
child exists, appending 1
done with child loop 1
`````````` (end STEP 2) for  loadbang ``````````
==> passing to step3
========== STEP 3 ==========
input 0 loadbang
0 is connected to [(1, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for loadbang
>>>> Child #0 1 t 0
>>>> 1 NOT IN [0]
PLACEMENT
place(): 1 => 10.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 1 t method
getChildren(): t ==> [[7, 'Msg', 0], [2, 'until', 1]]
child exists, appending 7
child exists, appending 2
done with child loop 2
`````````` (end STEP 2) for  t ``````````
==> passing to step3
========== STEP 3 ==========
input 1 t
1 is connected to [(7, 0), (2, 1)]
>>>>>>>>>> BEGIN CHILD LOOP for t
>>>> Child #0 7 Msg 0
>>>> 7 NOT IN [0, 1]
PLACEMENT
place(): 7 => 10.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 7 Msg method
getChildren(): Msg ==> [[6, 'print', 0]]
child exists, appending 6
done with child loop 1
`````````` (end STEP 2) for  Msg ``````````
==> passing to step3
========== STEP 3 ==========
input 7 Msg
7 is connected to [(6, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for Msg
>>>> Child #0 6 print 0
>>>> 6 NOT IN [0, 1, 7]
PLACEMENT
place(): 6 => 10.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 6 print method
getChildren(): print ==> []
<<<<<<<<<< end child loop for Msg
---------- (end STEP 3) ----------
>>>> Child #1 2 until 1
>>>> 2 NOT IN [0, 1, 7, 6]
PLACEMENT
place(): 2 => 82.0 58
'''''''''' BEGIN STEP 2 ''''''''''
input 2 until method
getChildren(): until ==> [[3, 'f', 0]]
child exists, appending 3
done with child loop 1
`````````` (end STEP 2) for  until ``````````
==> passing to step3
========== STEP 3 ==========
input 2 until
2 is connected to [(3, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for until
>>>> Child #0 3 f 0
>>>> 3 NOT IN [0, 1, 7, 6, 2]
PLACEMENT
place(): 3 => 82.0 82
'''''''''' BEGIN STEP 2 ''''''''''
input 3 f method
getChildren(): f ==> [[5, 'sel', 0], [4, '+', 0], [6, 'print', 0]]
child exists, appending 5
child exists, appending 4
done with child loop 2
`````````` (end STEP 2) for  f ``````````
==> passing to step3
========== STEP 3 ==========
input 3 f
3 is connected to [(5, 0), (4, 0)]
>>>>>>>>>> BEGIN CHILD LOOP for f
>>>> Child #0 5 sel 0
>>>> 5 NOT IN [0, 1, 7, 6, 2, 3]
PLACEMENT
place(): 5 => 82.0 106
'''''''''' BEGIN STEP 2 ''''''''''
input 5 sel method
getChildren(): sel ==> [[2, 'until', 0]]
2 is not connected to anybody.
relocator() 5 2
82 106 and 82 58
getChildren(): [3]
UNEQUAL_Y
child is ABOVE the parent
move(): until
place(): 2 => 82 58
--> Relocated to: 82 58 and 82 106
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  sel ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
>>>> Child #1 4 + 0
>>>> 4 NOT IN [0, 1, 7, 6, 2, 3, 5, 2]
PLACEMENT
place(): 4 => 154.0 34
'''''''''' BEGIN STEP 2 ''''''''''
input 4 + method
getChildren(): + ==> [[3, 'f', 0]]
3 is not connected to anybody.
relocator() 4 3
154 34 and 82 82
getChildren(): [5, 4, 6]
getChildren(): [3]
CIRCULAR
move(): +
place(): 4 => 226.0 82
--> Relocated to: 82 82 and 226 82
 *** done relocating, continuing
done with child loop 0
`````````` (end STEP 2) for  + ``````````
<== going back to step1
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
<<<<<<<<<< end child loop for f
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for until
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for t
---------- (end STEP 3) ----------
<<<<<<<<<< end child loop for loadbang
---------- (end STEP 3) ----------
---------- (end STEP 1) ----------
~~~~~~~~~~ STEP 1 ~~~~~~~~~~
input []
#2 ===> No more objects to place.
------------- end -----------
==> END test_connections.py <===================================
